{"version":3,"file":"DefaultModality.js","sourceRoot":"","sources":["../../src/modality/DefaultModality.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;;;;AAEtC,4GAAoF;AAGpF,MAAqB,eAAe;IAKlC,YAAoB,GAAW;QAAX,QAAG,GAAH,GAAG,CAAQ;IAAG,CAAC;IAEnC,EAAE;QACA,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,OAAO,EAAE,CAAC;SACX;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,OAAO,EAAE,CAAC;SACX;QACD,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;QACtE,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;SACtB;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,OAAO,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC;IACzD,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,MAAM,CAAC,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,eAAe,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC;QAC3F,IACE,QAAQ,KAAK,EAAE;YACf,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE;YAClB,IAAI,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,QAAQ,EAClD;YACA,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;SACzC;QACD,OAAO,CAAC,CAAC;IACX,CAAC;;AA3CH,kCA4CC;AA3CgB,kCAAkB,GAAG,+BAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAE/D,gCAAgB,GAAG,+BAAqB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport ContentShareConstants from '../contentsharecontroller/ContentShareConstants';\nimport Modality from './Modality';\n\nexport default class DefaultModality implements Modality {\n  private static MODALITY_SEPARATOR = ContentShareConstants.Modality[0];\n\n  static MODALITY_CONTENT = ContentShareConstants.Modality.substring(1);\n\n  constructor(private _id: string) {}\n\n  id(): string {\n    return this._id;\n  }\n\n  base(): string {\n    if (!this._id) {\n      return '';\n    }\n    return this._id.split(DefaultModality.MODALITY_SEPARATOR)[0];\n  }\n\n  modality(): string {\n    if (!this._id) {\n      return '';\n    }\n    const components = this._id.split(DefaultModality.MODALITY_SEPARATOR);\n    if (components.length === 2) {\n      return components[1];\n    }\n    return '';\n  }\n\n  hasModality(modality: string): boolean {\n    return modality !== '' && this.modality() === modality;\n  }\n\n  withModality(modality: string): Modality {\n    const m = new DefaultModality(this.base() + DefaultModality.MODALITY_SEPARATOR + modality);\n    if (\n      modality === '' ||\n      this.base() === '' ||\n      new DefaultModality(m._id).modality() !== modality\n    ) {\n      return new DefaultModality(this.base());\n    }\n    return m;\n  }\n}\n"]}