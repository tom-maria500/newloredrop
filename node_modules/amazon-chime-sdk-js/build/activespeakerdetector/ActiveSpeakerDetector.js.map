{"version":3,"file":"ActiveSpeakerDetector.js","sourceRoot":"","sources":["../../src/activespeakerdetector/ActiveSpeakerDetector.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport ActiveSpeakerPolicy from '../activespeakerpolicy/ActiveSpeakerPolicy';\n\n/**\n * [[ActiveSpeakerDetector]] listens to the volume indicator updates from the [[RealtimeController]]. It consults\n * the [[ActiveSpeakerPolicy]] to determine if the speaker is active or not.\n */\nexport default interface ActiveSpeakerDetector {\n  /*\n   * Starts the active speaker detector on the callback for the given policy.\n   */\n  subscribe(\n    policy: ActiveSpeakerPolicy,\n    callback: (activeSpeakers: string[]) => void,\n    scoresCallback?: (scores: { [attendeeId: string]: number }) => void,\n    scoresCallbackIntervalMs?: number\n  ): void;\n\n  /*\n   * Stops the active speaker detector callback from being called.\n   */\n  unsubscribe(callback: (activeSpeakers: string[]) => void): void;\n}\n"]}