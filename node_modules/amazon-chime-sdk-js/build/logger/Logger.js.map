{"version":3,"file":"Logger.js","sourceRoot":"","sources":["../../src/logger/Logger.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport LogLevel from './LogLevel';\n\n/**\n * [[Logger]] defines how to write logs for different logging level.\n */\nexport default interface Logger {\n  /**\n   * Calls [[debugFunction]] only if the log level is debug and emits the\n   * resulting string. Use the debug level to dump large or verbose messages\n   * that could slow down performance.\n   */\n  debug(debugFunction: string | (() => string)): void;\n\n  /**\n   * Emits an info message if the log level is equal to or lower than info level.\n   */\n  info(msg: string): void;\n\n  /**\n   * Emits a warning message if the log level is equal to or lower than warn level.\n   */\n  warn(msg: string): void;\n\n  /**\n   * Emits an error message if the log level is equal to or lower than error level.\n   */\n  error(msg: string): void;\n\n  /**\n   * Sets the log level.\n   */\n  setLogLevel(level: LogLevel): void;\n\n  /**\n   * Gets the current log level.\n   */\n  getLogLevel(): LogLevel;\n}\n"]}