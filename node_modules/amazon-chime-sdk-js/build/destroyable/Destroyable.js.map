{"version":3,"file":"Destroyable.js","sourceRoot":"","sources":["../../src/destroyable/Destroyable.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;;AAYtC;;;;;GAKG;AACH,8DAA8D;AAC9D,SAAgB,aAAa,CAAC,CAAM;IAClC,OAAO,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC;AAC7B,CAAC;AAFD,sCAEC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * An interface for objects that require manual cleanup.\n */\nexport interface Destroyable {\n  /**\n   * Dispose of this instance. The instance cannot be used after this method has been called.\n   */\n  destroy(): Promise<void>;\n}\n\n/**\n * Type guard for `Destroyable`.\n *\n * @param x A value that might implement the `Destroyable` interface.\n * @returns Whether the value implements `Destroyable`.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isDestroyable(x: any): x is Destroyable {\n  return x && 'destroy' in x;\n}\n\nexport default Destroyable;\n"]}