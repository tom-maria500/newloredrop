{"version":3,"file":"NoOpDeviceController.js","sourceRoot":"","sources":["../../src/devicecontroller/NoOpDeviceController.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;;;;;;;;;;;;;;AAKtC,uGAA+E;AAI/E,kFAA0D;AAE1D,MAAqB,oBACnB,SAAQ,+BAAqB;IAI7B,YAAY,QAAuC;QACjD,KAAK,EAAE,CAAC;QAHV,cAAS,GAAG,KAAK,CAAC;IAIlB,CAAC;IAEK,OAAO;;YACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC;KAAA;IAED,qBAAqB;QACnB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,qBAAqB;QACnB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,sBAAsB;QACpB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,OAAyB;QACvC,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc;QACZ,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,eAAe,CAAC,OAAyB;QACvC,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc;QACZ,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,iBAAiB,CAAC,SAAwB;QACxC,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;IAED,uBAAuB,CAAC,SAA+B,IAAS,CAAC;IAEjE,0BAA0B,CAAC,SAA+B,IAAS,CAAC;IAEpE,+BAA+B;QAC7B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,8BAA8B,CAAC,QAA0B,IAAS,CAAC;IAEnE,6BAA6B,CAAC,QAA0B,IAAS,CAAC;IAElE,qBAAqB,CAAC,QAAoC,IAAS,CAAC;IAEpE,iBAAiB,CAAC,OAAoB;QACpC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,uBAAuB,CAAC,MAAc,EAAE,OAAe,EAAE,UAAkB,IAAS,CAAC;IAErF,4BAA4B;QAC1B,OAAO,8BAAoB,CAAC,aAAa,CAAC;IAC5C,CAAC;CACF;AApED,uCAoEC;AAED,MAAa,uCAAwC,SAAQ,oBAAoB;IAE/E,YAAY,eAAiC;QAC3C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACzC,CAAC;CACF;AAND,0FAMC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport DeviceChangeObserver from '../devicechangeobserver/DeviceChangeObserver';\nimport EventController from '../eventcontroller/EventController';\nimport DeviceControllerBasedMediaStreamBroker from '../mediastreambroker/DeviceControllerBasedMediaStreamBroker';\nimport NoOpMediaStreamBroker from '../mediastreambroker/NoOpMediaStreamBroker';\nimport AudioInputDevice from './AudioInputDevice';\nimport RemovableAnalyserNode from './RemovableAnalyserNode';\nimport VideoInputDevice from './VideoInputDevice';\nimport VideoQualitySettings from './VideoQualitySettings';\n\nexport default class NoOpDeviceController\n  extends NoOpMediaStreamBroker\n  implements DeviceControllerBasedMediaStreamBroker {\n  destroyed = false;\n\n  constructor(_options?: { enableWebAudio?: boolean }) {\n    super();\n  }\n\n  async destroy(): Promise<void> {\n    this.destroyed = true;\n  }\n\n  listAudioInputDevices(): Promise<MediaDeviceInfo[]> {\n    return Promise.resolve([]);\n  }\n\n  listVideoInputDevices(): Promise<MediaDeviceInfo[]> {\n    return Promise.resolve([]);\n  }\n\n  listAudioOutputDevices(): Promise<MediaDeviceInfo[]> {\n    return Promise.resolve([]);\n  }\n\n  startAudioInput(_device: AudioInputDevice): Promise<MediaStream | undefined> {\n    return Promise.reject();\n  }\n\n  stopAudioInput(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  startVideoInput(_device: VideoInputDevice): Promise<MediaStream | undefined> {\n    return Promise.reject();\n  }\n\n  stopVideoInput(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  chooseAudioOutput(_deviceId: string | null): Promise<void> {\n    return Promise.reject();\n  }\n\n  addDeviceChangeObserver(_observer: DeviceChangeObserver): void {}\n\n  removeDeviceChangeObserver(_observer: DeviceChangeObserver): void {}\n\n  createAnalyserNodeForAudioInput(): RemovableAnalyserNode | null {\n    return null;\n  }\n\n  startVideoPreviewForVideoInput(_element: HTMLVideoElement): void {}\n\n  stopVideoPreviewForVideoInput(_element: HTMLVideoElement): void {}\n\n  setDeviceLabelTrigger(_trigger: () => Promise<MediaStream>): void {}\n\n  mixIntoAudioInput(_stream: MediaStream): MediaStreamAudioSourceNode {\n    return null;\n  }\n\n  chooseVideoInputQuality(_width: number, _height: number, _frameRate: number): void {}\n\n  getVideoInputQualitySettings(): VideoQualitySettings | null {\n    return VideoQualitySettings.VideoDisabled;\n  }\n}\n\nexport class NoOpDeviceControllerWithEventController extends NoOpDeviceController {\n  eventController: EventController | undefined;\n  constructor(eventController?: EventController) {\n    super();\n    this.eventController = eventController;\n  }\n}\n"]}