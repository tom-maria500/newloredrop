{"version":3,"file":"DefaultAudioVideoFacade.js","sourceRoot":"","sources":["../../src/audiovideofacade/DefaultAudioVideoFacade.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { MeetingSessionCredentials, MeetingSessionStatus } from '..';\nimport ActiveSpeakerPolicy from '../activespeakerpolicy/ActiveSpeakerPolicy';\nimport AudioMixController from '../audiomixcontroller/AudioMixController';\nimport AudioMixObserver from '../audiomixobserver/AudioMixObserver';\nimport AudioProfile from '../audioprofile/AudioProfile';\nimport AudioVideoController from '../audiovideocontroller/AudioVideoController';\nimport AudioVideoFacade from '../audiovideofacade/AudioVideoFacade';\nimport AudioVideoObserver from '../audiovideoobserver/AudioVideoObserver';\nimport ContentShareController from '../contentsharecontroller/ContentShareController';\nimport ContentShareObserver from '../contentshareobserver/ContentShareObserver';\nimport DataMessage from '../datamessage/DataMessage';\nimport DeviceChangeObserver from '../devicechangeobserver/DeviceChangeObserver';\nimport AudioInputDevice from '../devicecontroller/AudioInputDevice';\nimport DeviceController from '../devicecontroller/DeviceController';\nimport RemovableAnalyserNode from '../devicecontroller/RemovableAnalyserNode';\nimport VideoInputDevice from '../devicecontroller/VideoInputDevice';\nimport VideoQualitySettings from '../devicecontroller/VideoQualitySettings';\nimport { isVideoTransformDevice } from '../devicecontroller/VideoTransformDevice';\nimport RealtimeController from '../realtimecontroller/RealtimeController';\nimport type VolumeIndicatorCallback from '../realtimecontroller/VolumeIndicatorCallback';\nimport VideoCodecCapability from '../sdp/VideoCodecCapability';\nimport TranscriptionController from '../transcript/TranscriptionController';\nimport VideoSource from '../videosource/VideoSource';\nimport VideoTile from '../videotile/VideoTile';\nimport VideoTileController from '../videotilecontroller/VideoTileController';\nimport ContentShareSimulcastEncodingParameters from '../videouplinkbandwidthpolicy/ContentShareSimulcastEncodingParameters';\n\nexport default class DefaultAudioVideoFacade implements AudioVideoFacade, AudioVideoObserver {\n  constructor(\n    private audioVideoController: AudioVideoController,\n    private videoTileController: VideoTileController,\n    private realtimeController: RealtimeController,\n    private audioMixController: AudioMixController,\n    private deviceController: DeviceController,\n    private contentShareController: ContentShareController\n  ) {}\n\n  addObserver(observer: AudioVideoObserver): void {\n    this.audioVideoController.addObserver(observer);\n    this.trace('addObserver');\n  }\n\n  removeObserver(observer: AudioVideoObserver): void {\n    this.audioVideoController.removeObserver(observer);\n    this.trace('removeObserver');\n  }\n\n  setAudioProfile(audioProfile: AudioProfile): void {\n    this.trace('setAudioProfile', audioProfile);\n    this.audioVideoController.setAudioProfile(audioProfile);\n  }\n\n  start(options?: { signalingOnly?: boolean }): void {\n    this.audioVideoController.start(options);\n    this.trace('start');\n  }\n\n  stop(): void {\n    this.audioVideoController.stop();\n    this.trace('stop');\n  }\n\n  /**\n   * This API will be deprecated in favor of `ClientMetricReport.getRTCStatsReport()`.\n   *\n   * It makes an additional call to the `getStats` API and therefore may cause slight performance degradation.\n   *\n   * Please subscribe to `metricsDidReceive(clientMetricReport: ClientMetricReport)` callback,\n   * and get the raw `RTCStatsReport` via `clientMetricReport.getRTCStatsReport()`.\n   */\n  getRTCPeerConnectionStats(selector?: MediaStreamTrack): Promise<RTCStatsReport> {\n    this.trace('getRTCPeerConnectionStats', selector ? selector.id : null);\n    return this.audioVideoController.getRTCPeerConnectionStats(selector);\n  }\n\n  bindAudioElement(element: HTMLAudioElement): Promise<void> {\n    const result = this.audioMixController.bindAudioElement(element);\n    this.trace('bindAudioElement', element.id, result);\n    return result;\n  }\n\n  unbindAudioElement(): void {\n    this.audioMixController.unbindAudioElement();\n    this.trace('unbindAudioElement');\n  }\n\n  getCurrentMeetingAudioStream(): Promise<MediaStream | null> {\n    this.trace('getCurrentConferenceStream');\n    return this.audioMixController.getCurrentMeetingAudioStream();\n  }\n\n  addAudioMixObserver(observer: AudioMixObserver): void {\n    this.trace('addAudioMixObserver');\n    this.audioMixController.addAudioMixObserver(observer);\n  }\n\n  removeAudioMixObserver(observer: AudioMixObserver): void {\n    this.trace('removeAudioMixObserver');\n    this.audioMixController.removeAudioMixObserver(observer);\n  }\n\n  bindVideoElement(tileId: number, videoElement: HTMLVideoElement): void {\n    this.videoTileController.bindVideoElement(tileId, videoElement);\n    this.trace('bindVideoElement', { tileId: tileId, videoElementId: videoElement.id });\n  }\n\n  unbindVideoElement(tileId: number, cleanUpVideoElement: boolean = true): void {\n    this.videoTileController.unbindVideoElement(tileId, cleanUpVideoElement);\n    this.trace('unbindVideoElement', { tileId: tileId, cleanUpVideoElement: cleanUpVideoElement });\n  }\n\n  startLocalVideoTile(): number {\n    const result = this.videoTileController.startLocalVideoTile();\n    this.trace('startLocalVideoTile', null, result);\n    return result;\n  }\n\n  stopLocalVideoTile(): void {\n    this.videoTileController.stopLocalVideoTile();\n    this.trace('stopLocalVideoTile');\n  }\n\n  hasStartedLocalVideoTile(): boolean {\n    const result = this.videoTileController.hasStartedLocalVideoTile();\n    this.trace('hasStartedLocalVideoTile', null, result);\n    return result;\n  }\n\n  removeLocalVideoTile(): void {\n    this.videoTileController.removeLocalVideoTile();\n    this.trace('removeLocalVideoTile');\n  }\n\n  getLocalVideoTile(): VideoTile | null {\n    const result = this.videoTileController.getLocalVideoTile();\n    this.trace('getLocalVideoTile');\n    return result;\n  }\n\n  pauseVideoTile(tileId: number): void {\n    this.videoTileController.pauseVideoTile(tileId);\n    this.trace('pauseVideoTile', tileId);\n  }\n\n  unpauseVideoTile(tileId: number): void {\n    this.videoTileController.unpauseVideoTile(tileId);\n    this.trace('unpauseVideoTile', tileId);\n  }\n\n  getVideoTile(tileId: number): VideoTile | null {\n    const result = this.videoTileController.getVideoTile(tileId);\n    this.trace('getVideoTile', tileId);\n    return result;\n  }\n\n  getAllRemoteVideoTiles(): VideoTile[] {\n    const result = this.videoTileController.getAllRemoteVideoTiles();\n    this.trace('getAllRemoteVideoTiles');\n    return result;\n  }\n\n  getAllVideoTiles(): VideoTile[] {\n    const result = this.videoTileController.getAllVideoTiles();\n    this.trace('getAllVideoTiles');\n    return result;\n  }\n\n  addVideoTile(): VideoTile {\n    const result = this.videoTileController.addVideoTile();\n    this.trace('addVideoTile', null, result.state());\n    return result;\n  }\n\n  removeVideoTile(tileId: number): void {\n    this.videoTileController.removeVideoTile(tileId);\n    this.trace('removeVideoTile', tileId);\n  }\n\n  removeVideoTilesByAttendeeId(attendeeId: string): number[] {\n    const result = this.videoTileController.removeVideoTilesByAttendeeId(attendeeId);\n    this.trace('removeVideoTilesByAttendeeId', attendeeId, result);\n    return result;\n  }\n\n  removeAllVideoTiles(): void {\n    this.videoTileController.removeAllVideoTiles();\n    this.trace('removeAllVideoTiles');\n  }\n\n  captureVideoTile(tileId: number): ImageData | null {\n    const result = this.videoTileController.captureVideoTile(tileId);\n    this.trace('captureVideoTile', tileId);\n    return result;\n  }\n\n  realtimeSubscribeToAttendeeIdPresence(\n    callback: (\n      attendeeId: string,\n      present: boolean,\n      externalUserId?: string,\n      dropped?: boolean\n    ) => void\n  ): void {\n    this.realtimeController.realtimeSubscribeToAttendeeIdPresence(callback);\n    this.trace('realtimeSubscribeToAttendeeIdPresence');\n  }\n\n  realtimeUnsubscribeToAttendeeIdPresence(\n    callback: (\n      attendeeId: string,\n      present: boolean,\n      externalUserId?: string,\n      dropped?: boolean\n    ) => void\n  ): void {\n    this.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(callback);\n    this.trace('realtimeUnsubscribeToAttendeeIdPresence');\n  }\n\n  realtimeSetCanUnmuteLocalAudio(canUnmute: boolean): void {\n    this.realtimeController.realtimeSetCanUnmuteLocalAudio(canUnmute);\n    this.trace('realtimeSetCanUnmuteLocalAudio', canUnmute);\n  }\n\n  realtimeSubscribeToSetCanUnmuteLocalAudio(callback: (canUnmute: boolean) => void): void {\n    this.realtimeController.realtimeSubscribeToSetCanUnmuteLocalAudio(callback);\n    this.trace('realtimeSubscribeToSetCanUnmuteLocalAudio');\n  }\n\n  realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback: (canUnmute: boolean) => void): void {\n    this.realtimeController.realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback);\n    this.trace('realtimeUnsubscribeToSetCanUnmuteLocalAudio');\n  }\n\n  realtimeCanUnmuteLocalAudio(): boolean {\n    const result = this.realtimeController.realtimeCanUnmuteLocalAudio();\n    this.trace('realtimeCanUnmuteLocalAudio', null, result);\n    return result;\n  }\n\n  realtimeMuteLocalAudio(): void {\n    this.realtimeController.realtimeMuteLocalAudio();\n    this.trace('realtimeMuteLocalAudio');\n  }\n\n  realtimeUnmuteLocalAudio(): boolean {\n    const result = this.realtimeController.realtimeUnmuteLocalAudio();\n    this.trace('realtimeUnmuteLocalAudio');\n    return result;\n  }\n\n  realtimeSubscribeToMuteAndUnmuteLocalAudio(callback: (muted: boolean) => void): void {\n    this.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(callback);\n    this.trace('realtimeSubscribeToMuteAndUnmuteLocalAudio');\n  }\n\n  realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback: (muted: boolean) => void): void {\n    this.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback);\n    this.trace('realtimeUnsubscribeToMuteAndUnmuteLocalAudio');\n  }\n\n  realtimeIsLocalAudioMuted(): boolean {\n    const result = this.realtimeController.realtimeIsLocalAudioMuted();\n    this.trace('realtimeIsLocalAudioMuted');\n    return result;\n  }\n\n  realtimeSubscribeToVolumeIndicator(attendeeId: string, callback: VolumeIndicatorCallback): void {\n    this.realtimeController.realtimeSubscribeToVolumeIndicator(attendeeId, callback);\n    this.trace('realtimeSubscribeToVolumeIndicator', attendeeId);\n  }\n\n  realtimeUnsubscribeFromVolumeIndicator(\n    attendeeId: string,\n    callback?: VolumeIndicatorCallback\n  ): void {\n    this.realtimeController.realtimeUnsubscribeFromVolumeIndicator(attendeeId, callback);\n    this.trace('realtimeUnsubscribeFromVolumeIndicator', attendeeId, callback);\n  }\n\n  realtimeSubscribeToLocalSignalStrengthChange(callback: (signalStrength: number) => void): void {\n    this.realtimeController.realtimeSubscribeToLocalSignalStrengthChange(callback);\n    this.trace('realtimeSubscribeToLocalSignalStrengthChange');\n  }\n\n  realtimeUnsubscribeToLocalSignalStrengthChange(callback: (signalStrength: number) => void): void {\n    this.realtimeController.realtimeUnsubscribeToLocalSignalStrengthChange(callback);\n    this.trace('realtimeUnsubscribeToLocalSignalStrengthChange');\n  }\n\n  realtimeSendDataMessage(\n    topic: string, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: Uint8Array | string | any,\n    lifetimeMs?: number\n  ): void {\n    this.realtimeController.realtimeSendDataMessage(topic, data, lifetimeMs);\n    this.trace('realtimeSendDataMessage');\n  }\n\n  realtimeSubscribeToReceiveDataMessage(\n    topic: string,\n    callback: (dataMessage: DataMessage) => void\n  ): void {\n    this.realtimeController.realtimeSubscribeToReceiveDataMessage(topic, callback);\n    this.trace('realtimeSubscribeToReceiveDataMessage');\n  }\n\n  realtimeUnsubscribeFromReceiveDataMessage(topic: string): void {\n    this.realtimeController.realtimeUnsubscribeFromReceiveDataMessage(topic);\n    this.trace('realtimeUnsubscribeFromReceiveDataMessage');\n  }\n\n  realtimeSubscribeToFatalError(callback: (error: Error) => void): void {\n    this.realtimeController.realtimeSubscribeToFatalError(callback);\n    this.trace('realtimeSubscribeToFatalError');\n  }\n\n  realtimeUnsubscribeToFatalError(callback: (error: Error) => void): void {\n    this.realtimeController.realtimeUnsubscribeToFatalError(callback);\n    this.trace('realtimeUnsubscribeToFatalError');\n  }\n\n  subscribeToActiveSpeakerDetector(\n    policy: ActiveSpeakerPolicy,\n    callback: (activeSpeakers: string[]) => void,\n    scoresCallback?: (scores: { [attendeeId: string]: number }) => void,\n    scoresCallbackIntervalMs?: number\n  ): void {\n    this.audioVideoController.activeSpeakerDetector.subscribe(\n      policy,\n      callback,\n      scoresCallback,\n      scoresCallbackIntervalMs\n    );\n    this.trace('subscribeToActiveSpeakerDetector');\n  }\n\n  unsubscribeFromActiveSpeakerDetector(callback: (activeSpeakers: string[]) => void): void {\n    this.audioVideoController.activeSpeakerDetector.unsubscribe(callback);\n    this.trace('unsubscribeFromActiveSpeakerDetector');\n  }\n\n  async listAudioInputDevices(forceUpdate: boolean = false): Promise<MediaDeviceInfo[]> {\n    const result = await this.deviceController.listAudioInputDevices(forceUpdate);\n    this.trace('listAudioInputDevices', forceUpdate, result);\n    return result;\n  }\n\n  async listVideoInputDevices(forceUpdate: boolean = false): Promise<MediaDeviceInfo[]> {\n    const result = await this.deviceController.listVideoInputDevices(forceUpdate);\n    this.trace('listVideoInputDevices', forceUpdate, result);\n    return result;\n  }\n\n  async listAudioOutputDevices(forceUpdate: boolean = false): Promise<MediaDeviceInfo[]> {\n    const result = await this.deviceController.listAudioOutputDevices(forceUpdate);\n    this.trace('listAudioOutputDevices', forceUpdate, result);\n    return result;\n  }\n\n  async startAudioInput(device: AudioInputDevice): Promise<MediaStream | undefined> {\n    this.trace('startAudioInput', device);\n    return this.deviceController.startAudioInput(device);\n  }\n\n  async stopAudioInput(): Promise<void> {\n    this.trace('stopAudioInput');\n    return this.deviceController.stopAudioInput();\n  }\n\n  async startVideoInput(device: VideoInputDevice): Promise<MediaStream | undefined> {\n    if (isVideoTransformDevice(device)) {\n      // Don't stringify the device to avoid failures when cyclic object references are present.\n      this.trace('startVideoInput with transform device');\n    } else {\n      this.trace('startVideoInput', device);\n    }\n    return this.deviceController.startVideoInput(device);\n  }\n\n  async stopVideoInput(): Promise<void> {\n    this.trace('stopVideoInput');\n    return this.deviceController.stopVideoInput();\n  }\n\n  chooseAudioOutput(deviceId: string | null): Promise<void> {\n    const result = this.deviceController.chooseAudioOutput(deviceId);\n    this.trace('chooseAudioOutput', deviceId);\n    return result;\n  }\n\n  addDeviceChangeObserver(observer: DeviceChangeObserver): void {\n    this.deviceController.addDeviceChangeObserver(observer);\n    this.trace('addDeviceChangeObserver');\n  }\n\n  removeDeviceChangeObserver(observer: DeviceChangeObserver): void {\n    this.deviceController.removeDeviceChangeObserver(observer);\n    this.trace('removeDeviceChangeObserver');\n  }\n\n  createAnalyserNodeForAudioInput(): RemovableAnalyserNode | null {\n    const result = this.deviceController.createAnalyserNodeForAudioInput();\n    this.trace('createAnalyserNodeForAudioInput');\n    return result;\n  }\n\n  startVideoPreviewForVideoInput(element: HTMLVideoElement): void {\n    this.deviceController.startVideoPreviewForVideoInput(element);\n    this.trace('startVideoPreviewForVideoInput', element.id);\n  }\n\n  stopVideoPreviewForVideoInput(element: HTMLVideoElement): void {\n    this.deviceController.stopVideoPreviewForVideoInput(element);\n    this.trace('stopVideoPreviewForVideoInput', element.id);\n  }\n\n  setDeviceLabelTrigger(trigger: () => Promise<MediaStream>): void {\n    this.deviceController.setDeviceLabelTrigger(trigger);\n    this.trace('setDeviceLabelTrigger');\n  }\n\n  mixIntoAudioInput(stream: MediaStream): MediaStreamAudioSourceNode {\n    const result = this.deviceController.mixIntoAudioInput(stream);\n    this.trace('mixIntoAudioInput', stream.id);\n    return result;\n  }\n\n  chooseVideoInputQuality(width: number, height: number, frameRate: number): void {\n    this.deviceController.chooseVideoInputQuality(width, height, frameRate);\n    this.trace('chooseVideoInputQuality', {\n      width: width,\n      height: height,\n      frameRate: frameRate,\n    });\n  }\n\n  setVideoMaxBandwidthKbps(maxBandwidthKbps: number): void {\n    this.audioVideoController.setVideoMaxBandwidthKbps(maxBandwidthKbps);\n    this.trace('setVideoMaxBandwidthKbps', maxBandwidthKbps);\n  }\n\n  setVideoCodecSendPreferences(preferences: VideoCodecCapability[]): void {\n    this.audioVideoController.setVideoCodecSendPreferences(preferences);\n    this.trace('setVideoCodecSendPreferences', preferences);\n  }\n\n  getVideoInputQualitySettings(): VideoQualitySettings | null {\n    const result = this.deviceController.getVideoInputQualitySettings();\n    this.trace('getVideoInputQualitySettings');\n    return result;\n  }\n\n  setContentAudioProfile(audioProfile: AudioProfile): void {\n    this.trace('setContentAudioProfile', audioProfile);\n    this.contentShareController.setContentAudioProfile(audioProfile);\n  }\n\n  enableSimulcastForContentShare(\n    enable: boolean,\n    encodingParams?: ContentShareSimulcastEncodingParameters\n  ): void {\n    this.trace('enableSimulcastForContentShare');\n    this.contentShareController.enableSimulcastForContentShare(enable, encodingParams);\n  }\n\n  enableSVCForContentShare(enable: boolean): void {\n    this.trace('enableSVCForContentShare');\n    this.contentShareController.enableSVCForContentShare(enable);\n  }\n\n  startContentShare(stream: MediaStream): Promise<void> {\n    const result = this.contentShareController.startContentShare(stream);\n    this.trace('startContentShare');\n    return result;\n  }\n\n  startContentShareFromScreenCapture(sourceId?: string, frameRate?: number): Promise<MediaStream> {\n    const result = this.contentShareController.startContentShareFromScreenCapture(\n      sourceId,\n      frameRate\n    );\n    this.trace('startContentShareFromScreenCapture');\n    return result;\n  }\n\n  pauseContentShare(): void {\n    this.contentShareController.pauseContentShare();\n    this.trace('pauseContentShare');\n  }\n\n  unpauseContentShare(): void {\n    this.contentShareController.unpauseContentShare();\n    this.trace('unpauseContentShare');\n  }\n\n  stopContentShare(): void {\n    this.contentShareController.stopContentShare();\n    this.trace('stopContentShare');\n  }\n\n  addContentShareObserver(observer: ContentShareObserver): void {\n    this.contentShareController.addContentShareObserver(observer);\n    this.trace('addContentShareObserver');\n  }\n\n  removeContentShareObserver(observer: ContentShareObserver): void {\n    this.contentShareController.removeContentShareObserver(observer);\n    this.trace('removeContentShareObserver');\n  }\n\n  setContentShareVideoCodecPreferences(preferences: VideoCodecCapability[]): void {\n    this.contentShareController.setContentShareVideoCodecPreferences(preferences);\n    this.trace('setContentShareVideoCodecPreferences');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private trace(name: string, input?: any, output?: any): void {\n    const meetingId = this.audioVideoController.configuration.meetingId;\n    const attendeeId = this.audioVideoController.configuration.credentials.attendeeId;\n    let s = `API/DefaultAudioVideoFacade/${meetingId}/${attendeeId}/${name}`;\n    if (typeof input !== 'undefined') {\n      s += ` ${JSON.stringify(input)}`;\n    }\n    if (typeof output !== 'undefined') {\n      s += ` -> ${JSON.stringify(output)}`;\n    }\n    this.audioVideoController.logger.info(s);\n  }\n\n  getRemoteVideoSources(): VideoSource[] {\n    const result = this.audioVideoController.getRemoteVideoSources();\n    this.trace('getRemoteVideoSources', null, result);\n    return result;\n  }\n\n  get transcriptionController(): TranscriptionController {\n    return this.realtimeController.transcriptionController;\n  }\n\n  promoteToPrimaryMeeting(credentials: MeetingSessionCredentials): Promise<MeetingSessionStatus> {\n    this.audioVideoController.removeObserver(this); // Avoid adding multiple times\n    this.audioVideoController.addObserver(this); // See note in `audioVideoWasDemotedFromPrimaryMeeting`\n    const result = this.audioVideoController.promoteToPrimaryMeeting(credentials);\n    this.trace('promoteToPrimaryMeeting', null, result); // Don't trace credentials\n    return result;\n  }\n\n  demoteFromPrimaryMeeting(): void {\n    this.trace('demoteFromPrimaryMeeting');\n    this.audioVideoController.demoteFromPrimaryMeeting();\n  }\n\n  audioVideoWasDemotedFromPrimaryMeeting(_: MeetingSessionStatus): void {\n    // `DefaultContentShareController` currently does not respond to the connection ending\n    // so `contentShareDidStop` will not be called even if backend cleans up the connection.\n    // Thus we try to pre-emptively clean up on client side.\n    this.contentShareController.stopContentShare();\n    this.audioVideoController.removeObserver(this);\n  }\n}\n"]}