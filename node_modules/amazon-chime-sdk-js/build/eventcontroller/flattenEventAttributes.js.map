{"version":3,"file":"flattenEventAttributes.js","sourceRoot":"","sources":["../../src/eventcontroller/flattenEventAttributes.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;AAMtC;;;;;;GAMG;AACH,MAAM,sBAAsB,GAAG,CAC7B,UAAsF,EAClD,EAAE;IACtC,MAAM,mBAAmB,GAAuC,EAAE,CAAC;IACnE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QACrD,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,EAAE;YACzD,SAAS;SACV;aAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACjE,mBAAmB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SAClC;aAAM;YACL,MAAM,IAAI,SAAS,CAAC,sDAAsD,CAAC,CAAC;SAC7E;KACF;IACD,OAAO,mBAAmB,CAAC;AAC7B,CAAC,CAAC;AAEF,kBAAe,sBAAsB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AudioVideoEventAttributes from './AudioVideoEventAttributes';\nimport DeviceEventAttributes from './DeviceEventAttributes';\nimport VideoFXEventAttributes from './VideoFXEventAttributes';\n\n/**\n *\n * @param attributes Event attributes to flatten.\n * @returns flattened event attributes.\n * Note: This function needs to be extended to support 'Array', 'object'\n * as value types within the event attributes if added later.\n */\nconst flattenEventAttributes = (\n  attributes: AudioVideoEventAttributes | DeviceEventAttributes | VideoFXEventAttributes\n): { [key: string]: string | number } => {\n  const flattenedAttributes: { [key: string]: string | number } = {};\n  for (const [key, value] of Object.entries(attributes)) {\n    if (value === null || value === undefined || value === '') {\n      continue;\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      flattenedAttributes[key] = value;\n    } else {\n      throw new TypeError('Unhandled type received while flattening attributes.');\n    }\n  }\n  return flattenedAttributes;\n};\n\nexport default flattenEventAttributes;\n"]}