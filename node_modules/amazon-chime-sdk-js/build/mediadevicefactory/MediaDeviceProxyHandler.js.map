{"version":3,"file":"MediaDeviceProxyHandler.js","sourceRoot":"","sources":["../../src/mediadevicefactory/MediaDeviceProxyHandler.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AsyncScheduler from '../scheduler/AsyncScheduler';\nimport IntervalScheduler from '../scheduler/IntervalScheduler';\n\ntype ListenerFunction = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions\n) => // eslint-disable-next-line @typescript-eslint/no-explicit-any\nany;\n\nexport default class MediaDeviceProxyHandler implements ProxyHandler<MediaDevices> {\n  private static INTERVAL_MS: number = 1000;\n\n  private scheduler: IntervalScheduler | null = null;\n  private devices: MediaDeviceInfo[] | null = null;\n  private deviceChangeListeners: Set<EventListenerOrEventListenerObject> = new Set();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\n  get = (target: MediaDevices, property: PropertyKey, receiver: any): any => {\n    if (!Reflect.has(target, property)) {\n      return undefined;\n    }\n    if (!('ondevicechange' in navigator.mediaDevices)) {\n      if (property === 'addEventListener') {\n        return this.patchAddEventListener(target, property, receiver);\n      } else if (property === 'removeEventListener') {\n        return this.patchRemoveEventListener(target, property, receiver);\n      }\n    }\n    const value = Reflect.get(target, property, receiver);\n    return typeof value === 'function' ? value.bind(target) : value;\n  };\n\n  private patchAddEventListener = (\n    target: MediaDevices,\n    property: PropertyKey,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    receiver: any\n  ): ListenerFunction => {\n    const value = Reflect.get(target, property, receiver);\n    return (\n      type: string,\n      listener: EventListenerOrEventListenerObject,\n      options?: boolean | AddEventListenerOptions\n    ) => {\n      if (type === 'devicechange') {\n        this.deviceChangeListeners.add(listener);\n        if (!this.scheduler) {\n          this.scheduler = new IntervalScheduler(MediaDeviceProxyHandler.INTERVAL_MS);\n          this.scheduler.start(this.pollDeviceLists);\n        }\n      } else {\n        return Reflect.apply(value, target, [type, listener, options]);\n      }\n    };\n  };\n\n  private patchRemoveEventListener = (\n    target: MediaDevices,\n    property: PropertyKey,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    receiver: any\n  ): ListenerFunction => {\n    const value = Reflect.get(target, property, receiver);\n    return (\n      type: string,\n      listener: EventListenerOrEventListenerObject,\n      options?: boolean | EventListenerOptions\n    ) => {\n      if (type === 'devicechange') {\n        this.deviceChangeListeners.delete(listener);\n        if (this.deviceChangeListeners.size === 0 && this.scheduler) {\n          this.scheduler.stop();\n          this.scheduler = null;\n        }\n      } else {\n        return Reflect.apply(value, target, [type, listener, options]);\n      }\n    };\n  };\n\n  private pollDeviceLists = async (): Promise<void> => {\n    const newDevices = await this.sortedDeviceList();\n    if (this.devices) {\n      const changed =\n        newDevices.length !== this.devices.length ||\n        newDevices.some((device: MediaDeviceInfo, index: number) => {\n          return device.deviceId !== this.devices[index].deviceId;\n        });\n      if (changed) {\n        this.handleDeviceChangeEvent();\n      }\n    }\n    this.devices = newDevices;\n  };\n\n  private async sortedDeviceList(): Promise<MediaDeviceInfo[]> {\n    // @ts-ignore\n    const newDevices = await navigator.mediaDevices.enumerateDevices();\n    return newDevices.sort((device1: MediaDeviceInfo, device2: MediaDeviceInfo) => {\n      if (device1.deviceId < device2.deviceId) {\n        return 1;\n      }\n      if (device1.deviceId > device2.deviceId) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  private handleDeviceChangeEvent(): void {\n    for (const listener of this.deviceChangeListeners) {\n      AsyncScheduler.nextTick(() => {\n        /* istanbul ignore else */\n        if (this.deviceChangeListeners.has(listener)) {\n          const event = new Event('devicechange');\n          if (typeof listener === 'function') {\n            listener(event);\n          } else {\n            listener.handleEvent(event);\n          }\n        }\n      });\n    }\n  }\n}\n"]}