{"version":3,"file":"DefaultMediaDeviceFactory.js","sourceRoot":"","sources":["../../src/mediadevicefactory/DefaultMediaDeviceFactory.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;;;;AAGtC,wFAAgE;AAEhE,MAAqB,yBAAyB;IAG5C;QACE,IAAI,CAAC,uBAAuB,GAAG,OAAO,SAAS,KAAK,WAAW,IAAI,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC;IAC9F,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE;YACjC,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;aAAM;YACL,OAAO,IAAI,KAAK,CAAe,SAAS,CAAC,YAAY,EAAE,IAAI,iCAAuB,EAAE,CAAC,CAAC;SACvF;IACH,CAAC;CACF;AAdD,4CAcC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport MediaDeviceFactory from './MediaDeviceFactory';\nimport MediaDeviceProxyHandler from './MediaDeviceProxyHandler';\n\nexport default class DefaultMediaDeviceFactory implements MediaDeviceFactory {\n  private isMediaDevicesSupported: boolean;\n\n  constructor() {\n    this.isMediaDevicesSupported = typeof navigator !== 'undefined' && !!navigator.mediaDevices;\n  }\n\n  create(): MediaDevices {\n    if (!this.isMediaDevicesSupported) {\n      throw new Error(`navigator.mediaDevices is not supported`);\n    } else {\n      return new Proxy<MediaDevices>(navigator.mediaDevices, new MediaDeviceProxyHandler());\n    }\n  }\n}\n"]}