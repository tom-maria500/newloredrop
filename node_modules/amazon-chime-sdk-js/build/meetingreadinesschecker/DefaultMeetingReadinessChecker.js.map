{"version":3,"file":"DefaultMeetingReadinessChecker.js","sourceRoot":"","sources":["../../src/meetingreadinesschecker/DefaultMeetingReadinessChecker.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport DefaultAudioMixController from '../audiomixcontroller/DefaultAudioMixController';\nimport AudioVideoObserver from '../audiovideoobserver/AudioVideoObserver';\nimport DefaultBrowserBehavior from '../browserbehavior/DefaultBrowserBehavior';\nimport ClientMetricReport from '../clientmetricreport/ClientMetricReport';\nimport ContentShareObserver from '../contentshareobserver/ContentShareObserver';\nimport DefaultDeviceController from '../devicecontroller/DefaultDeviceController';\nimport Device from '../devicecontroller/Device';\nimport PermissionDeniedError from '../devicecontroller/PermissionDeniedError';\nimport Logger from '../logger/Logger';\nimport MeetingSession from '../meetingsession/MeetingSession';\nimport MeetingSessionStatus from '../meetingsession/MeetingSessionStatus';\nimport BaseTask from '../task/BaseTask';\nimport TimeoutTask from '../task/TimeoutTask';\nimport CheckAudioConnectivityFeedback from './CheckAudioConnectivityFeedback';\nimport CheckAudioInputFeedback from './CheckAudioInputFeedback';\nimport CheckAudioOutputFeedback from './CheckAudioOutputFeedback';\nimport CheckCameraResolutionFeedback from './CheckCameraResolutionFeedback';\nimport CheckContentShareConnectivityFeedback from './CheckContentShareConnectivityFeedback';\nimport CheckNetworkTCPConnectivityFeedback from './CheckNetworkTCPConnectivityFeedback';\nimport CheckNetworkUDPConnectivityFeedback from './CheckNetworkUDPConnectivityFeedback';\nimport CheckVideoConnectivityFeedback from './CheckVideoConnectivityFeedback';\nimport CheckVideoInputFeedback from './CheckVideoInputFeedback';\nimport MeetingReadinessChecker from './MeetingReadinessChecker';\nimport MeetingReadinessCheckerConfiguration from './MeetingReadinessCheckerConfiguration';\n\nexport default class DefaultMeetingReadinessChecker implements MeetingReadinessChecker {\n  private static async delay(timeoutMs: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, timeoutMs));\n  }\n\n  private audioContext: AudioContext;\n  private gainNode: GainNode;\n  private oscillatorNode: OscillatorNode;\n  private destinationStream: MediaStreamAudioDestinationNode;\n  private originalURLRewriter: (url: string) => string;\n\n  private browserBehavior: DefaultBrowserBehavior = new DefaultBrowserBehavior();\n\n  constructor(\n    private logger: Logger,\n    private meetingSession: MeetingSession,\n    private configuration: MeetingReadinessCheckerConfiguration = new MeetingReadinessCheckerConfiguration()\n  ) {}\n\n  async checkAudioInput(audioInputDevice: Device): Promise<CheckAudioInputFeedback> {\n    try {\n      await this.meetingSession.audioVideo.startAudioInput(audioInputDevice);\n      await this.meetingSession.audioVideo.stopAudioInput();\n      return CheckAudioInputFeedback.Succeeded;\n    } catch (error) {\n      this.logger.error(`MeetingReadinessChecker: Audio input check failed with error ${error}`);\n      if (error instanceof PermissionDeniedError) {\n        return CheckAudioInputFeedback.PermissionDenied;\n      }\n      return CheckAudioInputFeedback.Failed;\n    }\n  }\n\n  async checkAudioOutput(\n    audioOutputDeviceInfo: MediaDeviceInfo | string,\n    audioOutputVerificationCallback: () => Promise<boolean>,\n    audioElement: HTMLAudioElement = null\n  ): Promise<CheckAudioOutputFeedback> {\n    try {\n      const audioOutputDeviceId = audioOutputDeviceInfo\n        ? (DefaultDeviceController.getIntrinsicDeviceId(audioOutputDeviceInfo) as string)\n        : '';\n      await this.playTone(\n        audioOutputDeviceId,\n        this.configuration.audioOutputFrequency,\n        audioElement\n      );\n      const userFeedback = await audioOutputVerificationCallback();\n      if (userFeedback) {\n        return CheckAudioOutputFeedback.Succeeded;\n      }\n      return CheckAudioOutputFeedback.Failed;\n    } catch (error) {\n      this.logger.error(`MeetingReadinessChecker: Audio output check failed with error: ${error}`);\n      return CheckAudioOutputFeedback.Failed;\n    } finally {\n      this.stopTone();\n    }\n  }\n\n  private async playTone(\n    sinkId: string | null,\n    frequency: number | 440,\n    audioElement: HTMLAudioElement | null\n  ): Promise<void> {\n    const rampSec = 0.1;\n    const maxGainValue = this.configuration.audioOutputGain;\n\n    if (this.oscillatorNode) {\n      this.stopTone();\n    }\n    this.audioContext = DefaultDeviceController.getAudioContext();\n    this.gainNode = this.audioContext.createGain();\n    this.gainNode.gain.value = 0;\n    this.oscillatorNode = this.audioContext.createOscillator();\n    this.oscillatorNode.frequency.value = frequency;\n    this.oscillatorNode.connect(this.gainNode);\n    this.destinationStream = this.audioContext.createMediaStreamDestination();\n    this.gainNode.connect(this.destinationStream);\n    const currentTime = this.audioContext.currentTime;\n    const startTime = currentTime + 0.1;\n    this.gainNode.gain.linearRampToValueAtTime(0, startTime);\n    this.gainNode.gain.linearRampToValueAtTime(maxGainValue, startTime + rampSec);\n    this.oscillatorNode.start();\n\n    // Because we always use `DefaultAudioMixController`, and both this class\n    // and DAMC use `DefaultBrowserBehavior`, it is not possible for the `bindAudioDevice` call here to throw.\n    // Nevertheless, we `catch` here and disable code coverage.\n\n    const audioMixController = new DefaultAudioMixController(this.logger);\n\n    try {\n      if (this.browserBehavior.supportsSetSinkId()) {\n        await audioMixController.bindAudioDevice({ deviceId: sinkId } as MediaDeviceInfo);\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      this.logger.error(`Failed to bind audio device: ${e}`);\n    }\n    try {\n      await audioMixController.bindAudioElement(audioElement || new Audio());\n    } catch (e) {\n      this.logger.error(`Failed to bind audio element: ${e}`);\n    }\n    await audioMixController.bindAudioStream(this.destinationStream.stream);\n  }\n\n  private stopTone(): void {\n    if (!this.audioContext || !this.gainNode || !this.oscillatorNode || !this.destinationStream) {\n      return;\n    }\n    const durationSec = 1;\n    const rampSec = 0.1;\n    const maxGainValue = this.configuration.audioOutputGain;\n    const currentTime = this.audioContext.currentTime;\n    this.gainNode.gain.linearRampToValueAtTime(maxGainValue, currentTime + rampSec + durationSec);\n    this.gainNode.gain.linearRampToValueAtTime(0, currentTime + rampSec * 2 + durationSec);\n    this.oscillatorNode.stop();\n    this.oscillatorNode.disconnect(this.gainNode);\n    this.gainNode.disconnect(this.destinationStream);\n    this.oscillatorNode = null;\n    this.gainNode = null;\n    this.destinationStream = null;\n  }\n\n  async checkVideoInput(videoInputDevice: Device): Promise<CheckVideoInputFeedback> {\n    try {\n      await this.meetingSession.audioVideo.startVideoInput(videoInputDevice);\n      await this.meetingSession.audioVideo.stopVideoInput();\n      return CheckVideoInputFeedback.Succeeded;\n    } catch (error) {\n      this.logger.error(`MeetingReadinessChecker: Video check failed with error ${error}`);\n      if (error instanceof PermissionDeniedError) {\n        return CheckVideoInputFeedback.PermissionDenied;\n      }\n      return CheckVideoInputFeedback.Failed;\n    }\n  }\n\n  async checkCameraResolution(\n    videoInputDevice: MediaDeviceInfo | string,\n    width: number,\n    height: number\n  ): Promise<CheckCameraResolutionFeedback> {\n    let stream: MediaStream;\n    try {\n      const videoInputDeviceId = DefaultDeviceController.getIntrinsicDeviceId(\n        videoInputDevice\n      ) as string;\n      const videoConstraint = {\n        video: this.calculateVideoConstraint(videoInputDeviceId, width, height),\n      };\n      stream = await navigator.mediaDevices.getUserMedia(videoConstraint);\n    } catch (error) {\n      this.logger.error(\n        `MeetingReadinessChecker: Camera resolution check with width: ${width} height ${height} failed with error ${error}`\n      );\n      if (error && error.name === 'OverconstrainedError') {\n        return CheckCameraResolutionFeedback.ResolutionNotSupported;\n      }\n      if (error && error.name === 'NotAllowedError') {\n        return CheckCameraResolutionFeedback.PermissionDenied;\n      }\n      return CheckCameraResolutionFeedback.Failed;\n    } finally {\n      if (stream) {\n        stream.getTracks().forEach(function (track) {\n          track.stop();\n        });\n      }\n    }\n    return CheckCameraResolutionFeedback.Succeeded;\n  }\n\n  private calculateVideoConstraint(\n    videoInputDeviceId: string,\n    width: number,\n    height: number\n  ): MediaTrackConstraints {\n    const dimension = this.browserBehavior.requiresResolutionAlignment(width, height);\n    const trackConstraints: MediaTrackConstraints = {};\n    if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n      trackConstraints.deviceId = videoInputDeviceId;\n      trackConstraints.width = width;\n      trackConstraints.height = height;\n    } else {\n      trackConstraints.deviceId = { exact: videoInputDeviceId };\n      trackConstraints.width = { exact: dimension[0] };\n      trackConstraints.height = { exact: dimension[1] };\n    }\n    return trackConstraints;\n  }\n\n  async checkContentShareConnectivity(\n    sourceId?: string\n  ): Promise<CheckContentShareConnectivityFeedback> {\n    let isContentShareStarted = false;\n    let isAudioVideoStarted = false;\n\n    const contentShareObserver: ContentShareObserver = {\n      contentShareDidStart: () => {\n        isContentShareStarted = true;\n      },\n    };\n    const observer: AudioVideoObserver = {\n      audioVideoDidStart: () => {\n        isAudioVideoStarted = true;\n      },\n    };\n\n    try {\n      this.meetingSession.audioVideo.addObserver(observer);\n      this.meetingSession.audioVideo.start();\n\n      this.meetingSession.audioVideo.addContentShareObserver(contentShareObserver);\n      await this.meetingSession.audioVideo.startContentShareFromScreenCapture(sourceId);\n\n      await this.executeTimeoutTask(async () => {\n        return isAudioVideoStarted && isContentShareStarted;\n      });\n\n      if (!isAudioVideoStarted) {\n        return CheckContentShareConnectivityFeedback.ConnectionFailed;\n      }\n      await this.stopMeeting();\n      return isContentShareStarted\n        ? CheckContentShareConnectivityFeedback.Succeeded\n        : CheckContentShareConnectivityFeedback.TimedOut;\n    } catch (error) {\n      this.logger.error(`MeetingReadinessChecker: Content share check failed with error ${error}`);\n      if (error.name === 'NotAllowedError') {\n        return CheckContentShareConnectivityFeedback.PermissionDenied;\n      } else {\n        return CheckContentShareConnectivityFeedback.Failed;\n      }\n    } finally {\n      this.meetingSession.audioVideo.removeObserver(observer);\n      this.meetingSession.audioVideo.stopContentShare();\n      this.meetingSession.audioVideo.removeContentShareObserver(contentShareObserver);\n    }\n  }\n\n  async checkAudioConnectivity(audioInputDevice: Device): Promise<CheckAudioConnectivityFeedback> {\n    let audioPresence = false;\n    const audioConnectivityMetrics = {\n      packetsReceived: 0,\n    };\n    const audioVideo = this.meetingSession.audioVideo;\n\n    const checkAudioConnectivityMetricsObserver: AudioVideoObserver = {\n      metricsDidReceive(clientMetricReport: ClientMetricReport) {\n        clientMetricReport.getRTCStatsReport().forEach(report => {\n          // TODO: remove mediaType in next version as it is deprecated\n          // mediaType was deprecated and replaced with kind\n          if (\n            report.type === 'inbound-rtp' &&\n            (report.mediaType === 'audio' || report.kind === 'audio')\n          ) {\n            audioConnectivityMetrics.packetsReceived = report.packetsReceived;\n          }\n        });\n      },\n    };\n\n    const attendeePresenceHandler = (\n      attendeeId: string,\n      present: boolean,\n      _externalUserId: string,\n      _dropped: boolean\n    ): void => {\n      if (attendeeId === this.meetingSession.configuration.credentials.attendeeId && present) {\n        audioPresence = true;\n      }\n    };\n    try {\n      await audioVideo.startAudioInput(audioInputDevice);\n    } catch (error) {\n      this.logger.error(\n        `MeetingReadinessChecker: Failed to get audio input device with error ${error}`\n      );\n      if (error instanceof PermissionDeniedError) {\n        return CheckAudioConnectivityFeedback.AudioInputPermissionDenied;\n      }\n      return CheckAudioConnectivityFeedback.AudioInputRequestFailed;\n    }\n    audioVideo.realtimeSubscribeToAttendeeIdPresence(attendeePresenceHandler);\n    audioVideo.addObserver(checkAudioConnectivityMetricsObserver);\n\n    if (!(await this.startMeeting())) {\n      audioVideo.removeObserver(checkAudioConnectivityMetricsObserver);\n      audioVideo.realtimeUnsubscribeToAttendeeIdPresence(attendeePresenceHandler);\n      await this.meetingSession.audioVideo.stopAudioInput();\n      return CheckAudioConnectivityFeedback.ConnectionFailed;\n    }\n    await this.executeTimeoutTask(async () => {\n      return this.isAudioConnectionSuccessful(audioPresence, audioConnectivityMetrics);\n    });\n    audioVideo.removeObserver(checkAudioConnectivityMetricsObserver);\n    audioVideo.realtimeUnsubscribeToAttendeeIdPresence(attendeePresenceHandler);\n    await this.stopMeeting();\n    await this.meetingSession.audioVideo.stopAudioInput();\n    return this.isAudioConnectionSuccessful(audioPresence, audioConnectivityMetrics)\n      ? CheckAudioConnectivityFeedback.Succeeded\n      : CheckAudioConnectivityFeedback.AudioNotReceived;\n  }\n\n  async checkVideoConnectivity(videoInputDevice: Device): Promise<CheckVideoConnectivityFeedback> {\n    const audioVideo = this.meetingSession.audioVideo;\n    let packetsSent = 0;\n    const observer: AudioVideoObserver = {\n      metricsDidReceive(clientMetricReport: ClientMetricReport) {\n        const rawStats = clientMetricReport.getRTCStatsReport();\n        rawStats.forEach(report => {\n          // TODO: remove mediaType in next version as it is deprecated\n          if (\n            report.type === 'outbound-rtp' &&\n            (report.mediaType === 'video' || report.kind === 'video')\n          ) {\n            packetsSent = report.packetsSent;\n          }\n        });\n      },\n    };\n    try {\n      await audioVideo.startVideoInput(videoInputDevice);\n    } catch (error) {\n      this.logger.error(\n        `MeetingReadinessChecker: Failed to get video input device with error ${error}`\n      );\n      if (error instanceof PermissionDeniedError) {\n        return CheckVideoConnectivityFeedback.VideoInputPermissionDenied;\n      }\n      return CheckVideoConnectivityFeedback.VideoInputRequestFailed;\n    }\n\n    audioVideo.addObserver(observer);\n    if (!(await this.startMeeting())) {\n      return CheckVideoConnectivityFeedback.ConnectionFailed;\n    }\n\n    audioVideo.startLocalVideoTile();\n    await this.executeTimeoutTask(async () => {\n      return packetsSent > 0;\n    });\n    await audioVideo.stopVideoInput();\n    await this.stopMeeting();\n    audioVideo.removeObserver(observer);\n    if (packetsSent <= 0) {\n      return CheckVideoConnectivityFeedback.VideoNotSent;\n    }\n    return CheckVideoConnectivityFeedback.Succeeded;\n  }\n\n  async checkNetworkUDPConnectivity(): Promise<CheckNetworkUDPConnectivityFeedback> {\n    let candidatePairSucceed = false;\n    const observer: AudioVideoObserver = {\n      metricsDidReceive(clientMetricReport: ClientMetricReport) {\n        const rawStats = clientMetricReport.getRTCStatsReport();\n        rawStats.forEach(report => {\n          if (report.type === 'candidate-pair' && report.state === 'succeeded') {\n            candidatePairSucceed = true;\n          }\n        });\n      },\n    };\n    try {\n      this.originalURLRewriter = this.meetingSession.configuration.urls.urlRewriter;\n    } catch (error) {\n      this.logger.error(`MeetingSessionConfiguration.urls doesn't exist. Error: ${error}`);\n      return CheckNetworkUDPConnectivityFeedback.MeetingSessionURLsNotInitialized;\n    }\n    this.meetingSession.configuration.urls.urlRewriter = (uri: string) => {\n      const transformedUri = this.originalURLRewriter(uri);\n      if (transformedUri.includes('transport=tcp')) {\n        return '';\n      }\n      return transformedUri;\n    };\n\n    const audioVideo = this.meetingSession.audioVideo;\n    audioVideo.addObserver(observer);\n    if (!(await this.startMeeting())) {\n      this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n      return CheckNetworkUDPConnectivityFeedback.ConnectionFailed;\n    }\n    await this.executeTimeoutTask(async () => {\n      return candidatePairSucceed;\n    });\n    this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n    await this.stopMeeting();\n    audioVideo.removeObserver(observer);\n    if (!candidatePairSucceed) {\n      return CheckNetworkUDPConnectivityFeedback.ICENegotiationFailed;\n    }\n    return CheckNetworkUDPConnectivityFeedback.Succeeded;\n  }\n\n  async checkNetworkTCPConnectivity(): Promise<CheckNetworkTCPConnectivityFeedback> {\n    let candidatePairSucceed = false;\n    const observer: AudioVideoObserver = {\n      metricsDidReceive(clientMetricReport: ClientMetricReport) {\n        const rawStats = clientMetricReport.getRTCStatsReport();\n        rawStats.forEach(report => {\n          if (report.type === 'candidate-pair' && report.state === 'succeeded') {\n            candidatePairSucceed = true;\n          }\n        });\n      },\n    };\n    try {\n      this.originalURLRewriter = this.meetingSession.configuration.urls.urlRewriter;\n    } catch (error) {\n      this.logger.error(`MeetingSessionConfiguration.urls doesn't exist. Error: ${error}`);\n      return CheckNetworkTCPConnectivityFeedback.MeetingSessionURLsNotInitialized;\n    }\n\n    this.meetingSession.configuration.urls.urlRewriter = (uri: string) => {\n      const transformedUri = this.originalURLRewriter(uri);\n      if (transformedUri.includes('transport=udp')) {\n        return '';\n      }\n      return transformedUri;\n    };\n\n    const audioVideo = this.meetingSession.audioVideo;\n    audioVideo.addObserver(observer);\n    if (!(await this.startMeeting())) {\n      this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n      return CheckNetworkTCPConnectivityFeedback.ConnectionFailed;\n    }\n    await this.executeTimeoutTask(async () => {\n      return candidatePairSucceed;\n    });\n    this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n    await this.stopMeeting();\n    audioVideo.removeObserver(observer);\n    if (!candidatePairSucceed) {\n      return CheckNetworkTCPConnectivityFeedback.ICENegotiationFailed;\n    }\n    return CheckNetworkTCPConnectivityFeedback.Succeeded;\n  }\n\n  private async startMeeting(): Promise<boolean> {\n    let isStarted = false;\n    const observer: AudioVideoObserver = {\n      audioVideoDidStart: () => {\n        isStarted = true;\n      },\n    };\n    this.meetingSession.audioVideo.addObserver(observer);\n    this.meetingSession.audioVideo.start();\n    await this.executeTimeoutTask(async () => {\n      return isStarted;\n    });\n    this.meetingSession.audioVideo.removeObserver(observer);\n    return isStarted;\n  }\n\n  private async stopMeeting(): Promise<boolean> {\n    let isStopped = false;\n    const observer: AudioVideoObserver = {\n      audioVideoDidStop: (_sessionStatus: MeetingSessionStatus) => {\n        isStopped = true;\n      },\n    };\n    this.meetingSession.audioVideo.addObserver(observer);\n    this.meetingSession.audioVideo.stop();\n    await this.executeTimeoutTask(async () => {\n      return isStopped;\n    });\n    this.meetingSession.audioVideo.removeObserver(observer);\n    return isStopped;\n  }\n\n  private async executeTimeoutTask(conditionCheck: () => Promise<boolean>): Promise<boolean> {\n    let isSuccess = false;\n    class CheckForConditionTask extends BaseTask {\n      private isCancelled = false;\n\n      constructor(logger: Logger, private waitDurationMs: number) {\n        super(logger);\n      }\n\n      cancel(): void {\n        this.isCancelled = true;\n      }\n\n      async run(): Promise<void> {\n        while (!this.isCancelled) {\n          if (await conditionCheck()) {\n            isSuccess = true;\n            break;\n          }\n          await DefaultMeetingReadinessChecker.delay(this.waitDurationMs);\n        }\n      }\n    }\n    const timeoutTask = new TimeoutTask(\n      this.logger,\n      new CheckForConditionTask(this.logger, this.configuration.waitDurationMs),\n      this.configuration.timeoutMs\n    );\n    await timeoutTask.run();\n    return isSuccess;\n  }\n\n  private isAudioConnectionSuccessful(\n    audioPresence: boolean,\n    audioConnectivityMetrics: { packetsReceived: number }\n  ): boolean {\n    return audioPresence && audioConnectivityMetrics.packetsReceived > 0;\n  }\n}\n"]}