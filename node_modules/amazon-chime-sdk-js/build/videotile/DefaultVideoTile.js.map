{"version":3,"file":"DefaultVideoTile.js","sourceRoot":"","sources":["../../src/videotile/DefaultVideoTile.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport DefaultBrowserBehavior from '../browserbehavior/DefaultBrowserBehavior';\nimport DevicePixelRatioMonitor from '../devicepixelratiomonitor/DevicePixelRatioMonitor';\nimport DevicePixelRatioObserver from '../devicepixelratioobserver/DevicePixelRatioObserver';\nimport DefaultModality from '../modality/DefaultModality';\nimport VideoTileController from '../videotilecontroller/VideoTileController';\nimport VideoTile from './VideoTile';\nimport VideoTileState from './VideoTileState';\n\nexport default class DefaultVideoTile implements DevicePixelRatioObserver, VideoTile {\n  private tileState: VideoTileState = new VideoTileState();\n\n  /**\n   * Connect a video stream to a video element by setting the srcObject of the video element to the video stream.\n   * @param videoStream The video stream input.\n   * @param videoElement The video element input.\n   * @param localTile Flag to indicate whether this is a local video.\n   */\n  static connectVideoStreamToVideoElement(\n    videoStream: MediaStream,\n    videoElement: HTMLVideoElement,\n    localTile: boolean\n  ): void {\n    const transform =\n      localTile && videoStream.getVideoTracks()[0].getSettings().facingMode !== 'environment'\n        ? 'rotateY(180deg)'\n        : '';\n\n    DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', localTile);\n    DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', localTile);\n\n    if (videoElement.style.transform !== transform) {\n      videoElement.style.transform = transform;\n    }\n    if (videoElement.hasAttribute('controls')) {\n      videoElement.removeAttribute('controls');\n    }\n    if (!videoElement.hasAttribute('autoplay')) {\n      videoElement.setAttribute('autoplay', 'true');\n    }\n    // playsinline is needed for video to play in iPhone in non-fullscreen mode.\n    // See https://developer.apple.com/documentation/webkit/safari_tools_and_features/delivering_video_content_for_safari#3030250\n    if (!videoElement.hasAttribute('playsinline')) {\n      videoElement.setAttribute('playsinline', 'true');\n    }\n\n    // Note that setting the *attribute* 'muted' affects whether the element\n    // is muted *by default* (`.defaultMuted`), not whether it is currently muted (`.muted`).\n    // https://html.spec.whatwg.org/#dom-media-defaultmuted\n    if (!videoElement.hasAttribute('muted')) {\n      // The default value…\n      videoElement.setAttribute('muted', 'true');\n\n      // … and the value right now.\n      videoElement.muted = true;\n    }\n\n    if (videoElement.srcObject !== videoStream) {\n      videoElement.srcObject = videoStream;\n\n      // In Safari, a hidden video element can show a black screen.\n      // See https://bugs.webkit.org/show_bug.cgi?id=241152 for more information.\n      if (new DefaultBrowserBehavior().requiresVideoPlayWorkaround() && videoElement.paused) {\n        const promise = videoElement.play();\n        // See https://bugs.webkit.org/show_bug.cgi?id=243519 for more information.\n        // https://webkit.org/blog/7734/auto-play-policy-changes-for-macos/\n        /* istanbul ignore else */\n        if (promise !== undefined) {\n          promise\n            .catch(error => {\n              console.warn('Error playing video in Safari', error);\n            })\n            .then(() => {\n              // `then` block is needed, without it we run into black tile issue even though we catch the error.\n              console.debug('Video played successfully in Safari');\n            });\n        }\n      }\n    }\n  }\n\n  /**\n   * Disconnect a video stream from a video element by setting `HTMLVideoElement.srcObject` to `null`.\n   * @param videoElement The video element input.\n   * @param dueToPause A flag to indicate whether this function is called due to pausing video tile.\n   * Based on `keepLastFrameWhenPaused`, it sets `HTMLVideoElement.srcObject` to `null`.\n   * @param keepLastFrameWhenPaused If `true` and `dueToPause` is also `true`, then we will not set `HTMLVideoElement.srcObject` of the\n   * video element to `null` when it is paused and therefore, the last frame of the stream will be shown.\n   */\n  static disconnectVideoStreamFromVideoElement(\n    videoElement: HTMLVideoElement | null,\n    dueToPause: boolean,\n    keepLastFrameWhenPaused: boolean | undefined = false\n  ): void {\n    if (!videoElement) {\n      return;\n    }\n\n    if (dueToPause) {\n      if (!keepLastFrameWhenPaused) {\n        videoElement.srcObject = null;\n        videoElement.style.transform = '';\n      }\n    } else {\n      if (!videoElement.srcObject) {\n        return;\n      }\n      videoElement.pause();\n      videoElement.style.transform = '';\n\n      DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', false);\n      DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', false);\n\n      videoElement.srcObject = null;\n    }\n  }\n\n  constructor(\n    tileId: number,\n    localTile: boolean,\n    private tileController: VideoTileController,\n    private devicePixelRatioMonitor: DevicePixelRatioMonitor\n  ) {\n    this.tileState.tileId = tileId;\n    this.tileState.localTile = localTile;\n    this.devicePixelRatioMonitor.registerObserver(this);\n  }\n\n  destroy(): void {\n    this.devicePixelRatioMonitor.removeObserver(this);\n    if (\n      this.tileState.boundVideoElement &&\n      this.tileState.boundVideoElement.srcObject === this.tileState.boundVideoStream\n    ) {\n      DefaultVideoTile.disconnectVideoStreamFromVideoElement(\n        this.tileState.boundVideoElement,\n        false\n      );\n    }\n    this.tileState = new VideoTileState();\n  }\n\n  devicePixelRatioChanged(newDevicePixelRatio: number): void {\n    this.tileState.devicePixelRatio = newDevicePixelRatio;\n    this.sendTileStateUpdate();\n  }\n\n  id(): number {\n    return this.tileState.tileId;\n  }\n\n  state(): VideoTileState {\n    return this.tileState.clone();\n  }\n\n  stateRef(): VideoTileState {\n    return this.tileState;\n  }\n\n  bindVideoStream(\n    attendeeId: string,\n    localTile: boolean,\n    mediaStream: MediaStream | null,\n    contentWidth: number | null,\n    contentHeight: number | null,\n    streamId: number | null,\n    externalUserId?: string,\n    groupId?: number | null\n  ): void {\n    let tileUpdated = false;\n    if (this.tileState.boundAttendeeId !== attendeeId) {\n      this.tileState.boundAttendeeId = attendeeId;\n      if (new DefaultModality(attendeeId).hasModality(DefaultModality.MODALITY_CONTENT)) {\n        this.tileState.isContent = true;\n      }\n      tileUpdated = true;\n    }\n    if (this.tileState.boundExternalUserId !== externalUserId) {\n      this.tileState.boundExternalUserId = externalUserId;\n      tileUpdated = true;\n    }\n    if (this.tileState.localTile !== localTile) {\n      this.tileState.localTile = localTile;\n      tileUpdated = true;\n    }\n    if (this.tileState.boundVideoStream !== mediaStream) {\n      this.tileState.boundVideoStream = mediaStream;\n      tileUpdated = true;\n    }\n    if (this.tileState.videoStreamContentWidth !== contentWidth) {\n      this.tileState.videoStreamContentWidth = contentWidth;\n      tileUpdated = true;\n    }\n    if (this.tileState.videoStreamContentHeight !== contentHeight) {\n      this.tileState.videoStreamContentHeight = contentHeight;\n      tileUpdated = true;\n    }\n    if (this.tileState.streamId !== streamId) {\n      this.tileState.streamId = streamId;\n      tileUpdated = true;\n    }\n    if (this.tileState.groupId !== groupId) {\n      this.tileState.groupId = groupId;\n      tileUpdated = true;\n    }\n    if (tileUpdated) {\n      this.sendTileStateUpdate();\n    }\n  }\n\n  bindVideoElement(videoElement: HTMLVideoElement | null): void {\n    let tileUpdated = false;\n    if (this.tileState.boundVideoElement !== videoElement) {\n      this.tileState.boundVideoElement = videoElement;\n      tileUpdated = true;\n    }\n    if (this.tileState.boundVideoElement !== null) {\n      if (this.tileState.videoElementCSSWidthPixels !== videoElement.clientWidth) {\n        this.tileState.videoElementCSSWidthPixels = videoElement.clientWidth;\n        tileUpdated = true;\n      }\n      if (this.tileState.videoElementCSSHeightPixels !== videoElement.clientHeight) {\n        this.tileState.videoElementCSSHeightPixels = videoElement.clientHeight;\n        tileUpdated = true;\n      }\n    } else {\n      this.tileState.videoElementCSSWidthPixels = null;\n      this.tileState.videoElementCSSHeightPixels = null;\n    }\n    if (tileUpdated) {\n      this.sendTileStateUpdate();\n    }\n  }\n\n  pause(): void {\n    if (!this.tileState.paused) {\n      this.tileState.paused = true;\n      this.sendTileStateUpdate();\n    }\n  }\n\n  unpause(): void {\n    if (this.tileState.paused) {\n      this.tileState.paused = false;\n      this.sendTileStateUpdate();\n    }\n  }\n\n  markPoorConnection(): boolean {\n    if (this.tileState.poorConnection) {\n      return false;\n    }\n    this.tileState.poorConnection = true;\n    this.sendTileStateUpdate();\n    return true;\n  }\n\n  unmarkPoorConnection(): boolean {\n    if (!this.tileState.poorConnection) {\n      return false;\n    }\n    this.tileState.poorConnection = false;\n    this.sendTileStateUpdate();\n    return true;\n  }\n\n  capture(): ImageData | null {\n    if (!this.tileState.active) {\n      return null;\n    }\n    const canvas = document.createElement('canvas') as HTMLCanvasElement;\n    const video = this.tileState.boundVideoElement;\n    canvas.width = video.videoWidth || video.width;\n    canvas.height = video.videoHeight || video.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    return ctx.getImageData(0, 0, canvas.width, canvas.height);\n  }\n\n  setStreamId(id: number): void {\n    this.tileState.streamId = id;\n    // `streamId` is not likely used by builders but we can't\n    // be sure so send a tile state update just in case.\n    this.tileController.sendTileStateUpdate(this.state());\n  }\n\n  private sendTileStateUpdate(): void {\n    this.updateActiveState();\n    this.updateVideoStreamOnVideoElement();\n    this.updateVideoElementPhysicalPixels();\n    this.tileController.sendTileStateUpdate(this.state());\n  }\n\n  private updateActiveState(): void {\n    this.tileState.active = !!(\n      !this.tileState.paused &&\n      !this.tileState.poorConnection &&\n      this.tileState.boundAttendeeId &&\n      this.tileState.boundVideoElement &&\n      this.tileState.boundVideoStream\n    );\n  }\n\n  private updateVideoElementPhysicalPixels(): void {\n    if (\n      typeof this.tileState.videoElementCSSWidthPixels === 'number' &&\n      typeof this.tileState.videoElementCSSHeightPixels === 'number'\n    ) {\n      this.tileState.videoElementPhysicalWidthPixels =\n        this.tileState.devicePixelRatio * this.tileState.videoElementCSSWidthPixels;\n      this.tileState.videoElementPhysicalHeightPixels =\n        this.tileState.devicePixelRatio * this.tileState.videoElementCSSHeightPixels;\n    } else {\n      this.tileState.videoElementPhysicalWidthPixels = null;\n      this.tileState.videoElementPhysicalHeightPixels = null;\n    }\n  }\n\n  private updateVideoStreamOnVideoElement(): void {\n    if (this.tileState.active) {\n      DefaultVideoTile.connectVideoStreamToVideoElement(\n        this.tileState.boundVideoStream,\n        this.tileState.boundVideoElement,\n        this.tileState.localTile\n      );\n    } else {\n      DefaultVideoTile.disconnectVideoStreamFromVideoElement(\n        this.tileState.boundVideoElement,\n        this.tileState.paused,\n        this.tileController.keepLastFrameWhenPaused\n      );\n    }\n  }\n\n  private static setVideoElementFlag(\n    videoElement: HTMLVideoElement,\n    flag: string,\n    value: boolean\n  ): void {\n    if (flag in videoElement) {\n      // @ts-ignore\n      videoElement[flag] = value;\n    }\n  }\n}\n"]}