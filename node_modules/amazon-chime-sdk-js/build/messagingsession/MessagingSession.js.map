{"version":3,"file":"MessagingSession.js","sourceRoot":"","sources":["../../src/messagingsession/MessagingSession.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport MessagingSessionObserver from '../messagingsessionobserver/MessagingSessionObserver';\n\nexport default interface MessagingSession {\n  /**\n   * Start a messaging session. This promise is fulfilled when messaging session is established successfully.\n   * Promise is rejected when there are errors in communicating to messaging endpoint or connection is Unauthorized.\n   */\n  start(): Promise<void>;\n\n  /**\n   * Stop a messaging session.\n   */\n  stop(): void;\n\n  /**\n   * Add an observer.\n   */\n  addObserver(observer: MessagingSessionObserver): void;\n\n  /**\n   * Remove an observer.\n   */\n  removeObserver(observer: MessagingSessionObserver): void;\n\n  /**\n   * Iterates through each observer, so that their notification functions may\n   * be called.\n   */\n  forEachObserver(observerFunc: (observer: MessagingSessionObserver) => void): void;\n}\n"]}