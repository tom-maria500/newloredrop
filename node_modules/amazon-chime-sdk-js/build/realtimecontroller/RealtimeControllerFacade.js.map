{"version":3,"file":"RealtimeControllerFacade.js","sourceRoot":"","sources":["../../src/realtimecontroller/RealtimeControllerFacade.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport DataMessage from '../datamessage/DataMessage';\nimport TranscriptionController from '../transcript/TranscriptionController';\nimport RealtimeAttendeePositionInFrame from './RealtimeAttendeePositionInFrame';\nimport type VolumeIndicatorCallback from './VolumeIndicatorCallback';\n\nexport default interface RealtimeControllerFacade {\n  realtimeSubscribeToAttendeeIdPresence(\n    callback: (\n      attendeeId: string,\n      present: boolean,\n      externalUserId?: string,\n      dropped?: boolean,\n      posInFrame?: RealtimeAttendeePositionInFrame | null\n    ) => void\n  ): void;\n  realtimeUnsubscribeToAttendeeIdPresence(\n    callback: (\n      attendeeId: string,\n      present: boolean,\n      externalUserId?: string,\n      dropped?: boolean,\n      posInFrame?: RealtimeAttendeePositionInFrame | null\n    ) => void\n  ): void;\n  realtimeSetCanUnmuteLocalAudio(canUnmute: boolean): void;\n  realtimeSubscribeToSetCanUnmuteLocalAudio(callback: (canUnmute: boolean) => void): void;\n  realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback: (canUnmute: boolean) => void): void;\n  realtimeCanUnmuteLocalAudio(): boolean;\n  realtimeMuteLocalAudio(): void;\n  realtimeUnmuteLocalAudio(): boolean;\n  realtimeSubscribeToMuteAndUnmuteLocalAudio(callback: (muted: boolean) => void): void;\n  realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback: (muted: boolean) => void): void;\n  realtimeIsLocalAudioMuted(): boolean;\n  realtimeSubscribeToVolumeIndicator(attendeeId: string, callback: VolumeIndicatorCallback): void;\n  realtimeUnsubscribeFromVolumeIndicator(\n    attendeeId: string,\n    callback?: VolumeIndicatorCallback\n  ): void;\n  realtimeSubscribeToLocalSignalStrengthChange(callback: (signalStrength: number) => void): void;\n  realtimeUnsubscribeToLocalSignalStrengthChange(callback: (signalStrength: number) => void): void;\n  realtimeSendDataMessage(\n    topic: string,\n    data: Uint8Array | string | any, // eslint-disable-line @typescript-eslint/no-explicit-any\n    lifetimeMs?: number\n  ): void;\n  realtimeSubscribeToReceiveDataMessage(\n    topic: string,\n    callback: (dataMessage: DataMessage) => void\n  ): void;\n  realtimeUnsubscribeFromReceiveDataMessage(topic: string): void;\n  realtimeSubscribeToFatalError(callback: (error: Error) => void): void;\n  realtimeUnsubscribeToFatalError(callback: (error: Error) => void): void;\n\n  readonly transcriptionController?: TranscriptionController;\n}\n"]}