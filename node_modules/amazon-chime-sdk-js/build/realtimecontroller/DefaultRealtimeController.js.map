{"version":3,"file":"DefaultRealtimeController.js","sourceRoot":"","sources":["../../src/realtimecontroller/DefaultRealtimeController.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport DataMessage from '../datamessage/DataMessage';\nimport MediaStreamBroker from '../mediastreambroker/MediaStreamBroker';\nimport DefaultTranscriptionController from '../transcript/DefaultTranscriptionController';\nimport TranscriptionController from '../transcript/TranscriptionController';\nimport { iterateEvery } from '../utils/Utils';\nimport RealtimeAttendeePositionInFrame from './RealtimeAttendeePositionInFrame';\nimport RealtimeController from './RealtimeController';\nimport RealtimeState from './RealtimeState';\nimport RealtimeVolumeIndicator from './RealtimeVolumeIndicator';\nimport type VolumeIndicatorCallback from './VolumeIndicatorCallback';\n\n/**\n * [[DefaultRealtimeController]] is written to adhere to the following tenets to\n * make privacy and performance bugs significantly less likely.\n *\n * 1. Any call to the object is guaranteed to succeed from the caller's\n *    perspective to the maximum extent that this can be ensured. However, all\n *    failures of the object are reported as fatal errors. For example, if local\n *    mute fails, then that is a privacy issue and we must tear down the\n *    connection and try starting over.\n *\n * 2. State is owned by the object and is considered authoritative at all times.\n *    For example, if [[realtimeIsLocalAudioMuted]] is true then the user *is*\n *    muted.\n *\n * 3. Callbacks are fired synchronously and do their work synchronously. Any\n *    unnecessary asynchronous implementation only invites latency and\n *    increases the surface error for potential errors.\n *\n * 4. Mutation only occurs when state changes. All state-changing functions are\n *    idempotent.\n *\n * 5. Every conditional branch gets its own if statement and test coverage is\n *    100% for this object.\n *\n * 6. Function parameters and returns use primitives only (no classes or enums).\n *    This minimizes the number of dependencies that consumers have to take on\n *    and allows the object to be more easily wrapped. Values are normalized\n *    where possible.\n *\n * 7. The object takes no other non-realtime dependencies.\n *\n * 8. Interface functions begin with `realtime` to make boundaries between the\n *    RealtimeController interface and the UI or business logic explicit and\n *    auditable.\n *\n * 9. Local state overrides remote state but not vice-versa. For example, if\n *    locally muted with an active audio input and a remote state indicates the\n *    same user is unmuted because the muted state has not yet propagated, then\n *    the volume indicator update for the user would show the remote mute state\n *    as muted. However, if locally muted without an active audio input and a\n *    remote state indicates the user is unmuted (since they are dialed in), the\n *    remote state persists but does not override the local state so\n *    [[realtimeIsLocalAudioMuted]] still returns true.\n */\nexport default class DefaultRealtimeController implements RealtimeController {\n  private readonly state: RealtimeState = new RealtimeState();\n  private readonly _transcriptionController: TranscriptionController;\n\n  constructor(\n    private mediaStreamBroker: MediaStreamBroker,\n    transcriptionController?: TranscriptionController\n  ) {\n    this._transcriptionController =\n      transcriptionController || new DefaultTranscriptionController(this);\n  }\n\n  realtimeSetLocalAttendeeId(attendeeId: string, externalUserId: string): void {\n    this.state.localAttendeeId = attendeeId;\n    this.state.localExternalUserId = externalUserId;\n  }\n\n  realtimeSetAttendeeIdPresence(\n    attendeeId: string,\n    present: boolean,\n    externalUserId: string | null,\n    dropped: boolean | null,\n    posInFrame: RealtimeAttendeePositionInFrame | null\n  ): void {\n    try {\n      if (present) {\n        this.state.attendeeIdToExternalUserId[attendeeId] = externalUserId;\n      }\n      for (const fn of this.state.attendeeIdChangesCallbacks) {\n        fn(attendeeId, present, externalUserId, dropped, posInFrame);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToAttendeeIdPresence(\n    callback: (\n      attendeeId: string,\n      present: boolean,\n      externalUserId?: string,\n      dropped?: boolean,\n      posInFrame?: RealtimeAttendeePositionInFrame | null\n    ) => void\n  ): void {\n    try {\n      this.state.attendeeIdChangesCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToAttendeeIdPresence(\n    callback: (\n      attendeeId: string,\n      present: boolean,\n      externalUserId?: string,\n      dropped?: boolean,\n      posInFrame?: RealtimeAttendeePositionInFrame | null\n    ) => void\n  ): void {\n    try {\n      const index = this.state.attendeeIdChangesCallbacks.indexOf(callback);\n      if (index !== -1) {\n        this.state.attendeeIdChangesCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  // Muting\n\n  realtimeSetCanUnmuteLocalAudio(canUnmute: boolean): void {\n    try {\n      if (this.state.canUnmute === canUnmute) {\n        return;\n      }\n      this.state.canUnmute = canUnmute;\n      for (const fn of this.state.setCanUnmuteLocalAudioCallbacks) {\n        fn(canUnmute);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToSetCanUnmuteLocalAudio(callback: (canUnmute: boolean) => void): void {\n    try {\n      this.state.setCanUnmuteLocalAudioCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback: (canUnmute: boolean) => void): void {\n    try {\n      const index = this.state.setCanUnmuteLocalAudioCallbacks.indexOf(callback);\n      if (index !== -1) {\n        this.state.setCanUnmuteLocalAudioCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeCanUnmuteLocalAudio(): boolean {\n    return this.state.canUnmute;\n  }\n\n  realtimeMuteLocalAudio(): void {\n    if (this.state.muted) {\n      return;\n    }\n    try {\n      this.setAudioInputEnabled(false);\n      this.state.muted = true;\n      this.realtimeUpdateVolumeIndicator(\n        this.state.localAttendeeId,\n        null,\n        null,\n        null,\n        this.state.localExternalUserId\n      );\n      for (const fn of this.state.muteAndUnmuteLocalAudioCallbacks) {\n        fn(true);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnmuteLocalAudio(): boolean {\n    if (!this.state.muted) {\n      return true;\n    }\n    if (!this.state.canUnmute) {\n      return false;\n    }\n    try {\n      this.setAudioInputEnabled(true);\n      this.state.muted = false;\n      this.realtimeUpdateVolumeIndicator(\n        this.state.localAttendeeId,\n        null,\n        null,\n        null,\n        this.state.localExternalUserId\n      );\n      for (const fn of this.state.muteAndUnmuteLocalAudioCallbacks) {\n        fn(false);\n      }\n      return true;\n    } catch (e) {\n      this.onError(e);\n      return false;\n    }\n  }\n\n  realtimeSubscribeToMuteAndUnmuteLocalAudio(callback: (muted: boolean) => void): void {\n    try {\n      this.state.muteAndUnmuteLocalAudioCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback: (muted: boolean) => void): void {\n    try {\n      const index = this.state.muteAndUnmuteLocalAudioCallbacks.indexOf(callback);\n      if (index !== -1) {\n        this.state.muteAndUnmuteLocalAudioCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeIsLocalAudioMuted(): boolean {\n    return this.state.muted;\n  }\n\n  // Volume Indicators\n\n  realtimeSubscribeToVolumeIndicator(attendeeId: string, callback: VolumeIndicatorCallback): void {\n    try {\n      if (!this.state.volumeIndicatorCallbacks.hasOwnProperty(attendeeId)) {\n        this.state.volumeIndicatorCallbacks[attendeeId] = [];\n      }\n      this.state.volumeIndicatorCallbacks[attendeeId].push(callback);\n      this.sendVolumeIndicatorChange(\n        attendeeId,\n        true,\n        true,\n        true,\n        this.state.attendeeIdToExternalUserId[attendeeId]\n      );\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeFromVolumeIndicator(\n    attendeeId: string,\n    callback?: VolumeIndicatorCallback\n  ): void {\n    const callbacks = this.state.volumeIndicatorCallbacks[attendeeId];\n    if (!callbacks) {\n      return;\n    }\n    if (callback) {\n      const index = this.state.volumeIndicatorCallbacks[attendeeId].indexOf(callback);\n      if (index >= 0) {\n        this.state.volumeIndicatorCallbacks[attendeeId].splice(index, 1);\n      }\n    } else {\n      delete this.state.volumeIndicatorCallbacks[attendeeId];\n    }\n  }\n\n  realtimeUpdateVolumeIndicator(\n    attendeeId: string,\n    volume: number | null,\n    muted: boolean | null,\n    signalStrength: number | null,\n    externalUserId: string | null\n  ): void {\n    try {\n      muted = this.applyLocalMuteOverride(attendeeId, muted);\n      const state = this.getVolumeIndicatorState(attendeeId);\n      let volumeUpdated = false;\n      let mutedUpdated = false;\n      let signalStrengthUpdated = false;\n      if (muted !== null) {\n        if (state.muted !== muted) {\n          state.muted = muted;\n          mutedUpdated = true;\n          if (state.muted && state.volume !== 0.0) {\n            state.volume = 0.0;\n            volumeUpdated = true;\n          }\n        }\n      }\n      if (!state.muted && volume !== null) {\n        if (state.volume !== volume) {\n          state.volume = volume;\n          volumeUpdated = true;\n        }\n        if (state.muted === null) {\n          state.muted = false;\n          mutedUpdated = true;\n        }\n      }\n      if (signalStrength !== null) {\n        if (state.signalStrength !== signalStrength) {\n          state.signalStrength = signalStrength;\n          signalStrengthUpdated = true;\n        }\n      }\n      this.sendVolumeIndicatorChange(\n        attendeeId,\n        volumeUpdated,\n        mutedUpdated,\n        signalStrengthUpdated,\n        externalUserId\n      );\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToLocalSignalStrengthChange(callback: (signalStrength: number) => void): void {\n    try {\n      this.state.localSignalStrengthChangeCallbacks.push(callback);\n      if (this.state.localAttendeeId === null) {\n        return;\n      }\n      this.sendLocalSignalStrengthChange(this.state.localAttendeeId, true);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToLocalSignalStrengthChange(callback: (signalStrength: number) => void): void {\n    try {\n      const index = this.state.localSignalStrengthChangeCallbacks.indexOf(callback);\n      if (index !== -1) {\n        this.state.localSignalStrengthChangeCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToSendDataMessage(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback: (topic: string, data: Uint8Array | string | any, lifetimeMs?: number) => void\n  ): void {\n    try {\n      this.state.sendDataMessageCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeFromSendDataMessage(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback: (topic: string, data: Uint8Array | string | any, lifetimeMs?: number) => void\n  ): void {\n    try {\n      const index = this.state.sendDataMessageCallbacks.indexOf(callback);\n      if (index !== -1) {\n        this.state.sendDataMessageCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSendDataMessage(\n    topic: string,\n    data: Uint8Array | string | any, // eslint-disable-line @typescript-eslint/no-explicit-any\n    lifetimeMs?: number\n  ): void {\n    try {\n      for (const fn of this.state.sendDataMessageCallbacks) {\n        fn(topic, data, lifetimeMs);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeSubscribeToReceiveDataMessage(\n    topic: string,\n    callback: (dataMessage: DataMessage) => void\n  ): void {\n    try {\n      if (this.state.receiveDataMessageCallbacks.has(topic)) {\n        this.state.receiveDataMessageCallbacks.get(topic).push(callback);\n      } else {\n        this.state.receiveDataMessageCallbacks.set(topic, [callback]);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeFromReceiveDataMessage(topic: string): void {\n    try {\n      this.state.receiveDataMessageCallbacks.delete(topic);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeReceiveDataMessage(dataMessage: DataMessage): void {\n    try {\n      iterateEvery(this.state.receiveDataMessageCallbacks.get(dataMessage.topic), fn => {\n        fn(dataMessage);\n      });\n    } catch (e) {\n      // We don't want to throw to our caller, but we still want to surface the error in the console\n      Promise.reject(e);\n    }\n  }\n\n  // Error Handling\n\n  realtimeSubscribeToFatalError(callback: (error: Error) => void): void {\n    try {\n      this.state.fatalErrorCallbacks.push(callback);\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  realtimeUnsubscribeToFatalError(callback: (error: Error) => void): void {\n    try {\n      const index = this.state.fatalErrorCallbacks.indexOf(callback);\n      if (index !== -1) {\n        this.state.fatalErrorCallbacks.splice(index, 1);\n      }\n    } catch (e) {\n      this.onError(e);\n    }\n  }\n\n  get transcriptionController(): TranscriptionController {\n    return this._transcriptionController;\n  }\n\n  // Internals\n\n  private setAudioInputEnabled(enabled: boolean): void {\n    if (enabled) {\n      this.mediaStreamBroker.unmuteLocalAudioInputStream();\n    } else {\n      this.mediaStreamBroker.muteLocalAudioInputStream();\n    }\n  }\n\n  private applyLocalMuteOverride(\n    attendeeIdRemote: string,\n    mutedRemote: boolean | null\n  ): boolean | null {\n    const attendeeIdLocal = this.state.localAttendeeId;\n    const mutedLocal = this.state.muted;\n    if (attendeeIdRemote !== attendeeIdLocal) {\n      return mutedRemote;\n    }\n    // This is a workaround to check if no audio input then just use the remote value\n    if (\n      // @ts-ignore\n      !('activeDevices' in this.mediaStreamBroker && this.mediaStreamBroker.activeDevices['audio'])\n    ) {\n      return mutedRemote;\n    }\n    return mutedLocal;\n  }\n\n  private sendVolumeIndicatorChange(\n    attendeeId: string,\n    volumeUpdated: boolean,\n    mutedUpdated: boolean,\n    signalStrengthUpdated: boolean,\n    externalUserId: string\n  ): void {\n    this.sendLocalSignalStrengthChange(attendeeId, signalStrengthUpdated);\n    if (!this.state.volumeIndicatorCallbacks.hasOwnProperty(attendeeId)) {\n      return;\n    }\n    const state = this.getVolumeIndicatorState(attendeeId);\n    const updateState = new RealtimeVolumeIndicator();\n    if (volumeUpdated) {\n      updateState.volume = state.volume;\n    }\n    if (mutedUpdated) {\n      updateState.muted = state.muted;\n    }\n    if (signalStrengthUpdated) {\n      updateState.signalStrength = state.signalStrength;\n    }\n    if (this.stateIsEmpty(updateState)) {\n      return;\n    }\n    for (const fn of this.state.volumeIndicatorCallbacks[attendeeId]) {\n      fn(\n        attendeeId,\n        updateState.volume,\n        updateState.muted,\n        updateState.signalStrength,\n        externalUserId\n      );\n    }\n  }\n\n  private sendLocalSignalStrengthChange(attendeeId: string, signalStrengthUpdated: boolean): void {\n    if (!signalStrengthUpdated) {\n      return;\n    }\n    if (attendeeId !== this.state.localAttendeeId) {\n      return;\n    }\n    const state = this.getVolumeIndicatorState(attendeeId);\n    const signalStrength: number | null = state.signalStrength;\n    if (signalStrength === null) {\n      return;\n    }\n    for (const fn of this.state.localSignalStrengthChangeCallbacks) {\n      fn(signalStrength);\n    }\n  }\n\n  private getVolumeIndicatorState(id: string): RealtimeVolumeIndicator {\n    if (!this.state.volumeIndicatorState.hasOwnProperty(id)) {\n      this.state.volumeIndicatorState[id] = new RealtimeVolumeIndicator();\n    }\n    return this.state.volumeIndicatorState[id];\n  }\n\n  private stateIsEmpty(state: RealtimeVolumeIndicator): boolean {\n    return state.volume === null && state.muted === null && state.signalStrength === null;\n  }\n\n  private onError(error: Error): void {\n    try {\n      // 1) try the fatal error callbacks so that the issue is reported in\n      //    logs and to give the handler a chance to clean up and reset.\n      for (const callback of this.state.fatalErrorCallbacks) {\n        callback(error);\n      }\n    } catch (eventError) {\n      try {\n        // 2) if the error event fails, fall back to console.error so that\n        //    it at least prints out to the console before moving on.\n        console.error(error);\n        console.error(eventError);\n      } catch (consoleError) {\n        // 3) if all else fails, swallow the error and give up to guarantee\n        //    that the API call returns cleanly.\n      }\n    }\n  }\n}\n"]}