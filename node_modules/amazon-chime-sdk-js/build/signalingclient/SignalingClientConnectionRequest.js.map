{"version":3,"file":"SignalingClientConnectionRequest.js","sourceRoot":"","sources":["../../src/signalingclient/SignalingClientConnectionRequest.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;AAEtC;;GAEG;AACH,MAAqB,gCAAgC;IACnD;;;;OAIG;IACH,YAAmB,YAAoB,EAAS,SAAiB;QAA9C,iBAAY,GAAZ,YAAY,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAQ;IAAG,CAAC;IAErE,uDAAuD;IACvD,GAAG;QACD,OAAO,CACL,IAAI,CAAC,YAAY,GAAG,wEAAwE,CAC7F,CAAC;IACJ,CAAC;IAED,sDAAsD;IACtD,SAAS;QACP,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;CACF;AAnBD,mDAmBC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/*\n * [[SignalingClientConnectionRequest]] represents an connection request.\n */\nexport default class SignalingClientConnectionRequest {\n  /** Creates a request with the given URL, conference id, and join token.\n   *\n   * @param signalingURL The URL of the signaling proxy.\n   * @param joinToken The join token that will authenticate the connection.\n   */\n  constructor(public signalingURL: string, public joinToken: string) {}\n\n  /** Gets the signaling URL representing this request.*/\n  url(): string {\n    return (\n      this.signalingURL + '?X-Chime-Control-Protocol-Version=3&X-Amzn-Chime-Send-Close-On-Error=1'\n    );\n  }\n\n  /** Gets the protocols associated with this request.*/\n  protocols(): string[] {\n    return ['_aws_wt_session', this.joinToken];\n  }\n}\n"]}