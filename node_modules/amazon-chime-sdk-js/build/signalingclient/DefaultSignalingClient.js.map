{"version":3,"file":"DefaultSignalingClient.js","sourceRoot":"","sources":["../../src/signalingclient/DefaultSignalingClient.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { MeetingSessionCredentials } from '..';\nimport DefaultBrowserBehavior from '../browserbehavior/DefaultBrowserBehavior';\nimport Logger from '../logger/Logger';\nimport TimeoutScheduler from '../scheduler/TimeoutScheduler';\nimport SignalingClientObserver from '../signalingclientobserver/SignalingClientObserver';\nimport {\n  ISdkClientDetails,\n  SdkAudioControlFrame,\n  SdkClientDetails,\n  SdkClientMetricFrame,\n  SdkDataMessageFrame,\n  SdkJoinFlags,\n  SdkJoinFrame,\n  SdkLeaveFrame,\n  SdkMeetingSessionCredentials,\n  SdkPauseResumeFrame,\n  SdkPingPongFrame,\n  SdkPrimaryMeetingJoinFrame,\n  SdkPrimaryMeetingLeaveFrame,\n  SdkRemoteVideoUpdateFrame,\n  SdkSignalFrame,\n  SdkStreamDescriptor,\n  SdkStreamMediaType,\n  SdkStreamServiceType,\n  SdkSubscribeFrame,\n  SdkVideoQualityAdaptationPreference,\n  SdkVideoSubscriptionConfiguration,\n} from '../signalingprotocol/SignalingProtocol.js';\nimport { getFormattedOffset, getRandomValues } from '../utils/Utils';\nimport Versioning from '../versioning/Versioning';\nimport VideoQualityAdaptationPreference from '../videodownlinkbandwidthpolicy/VideoQualityAdaptationPreference';\nimport WebSocketAdapter from '../websocketadapter/WebSocketAdapter';\nimport WebSocketReadyState from '../websocketadapter/WebSocketReadyState';\nimport { convertServerSideNetworkAdaptionEnumToSignaled } from './ServerSideNetworkAdaption';\nimport SignalingClient from './SignalingClient';\nimport SignalingClientConnectionRequest from './SignalingClientConnectionRequest';\nimport SignalingClientEvent from './SignalingClientEvent';\nimport SignalingClientEventType from './SignalingClientEventType';\nimport SignalingClientJoin from './SignalingClientJoin';\nimport SignalingClientSubscribe from './SignalingClientSubscribe';\nimport SignalingClientVideoSubscriptionConfiguration from './SignalingClientVideoSubscriptionConfiguration';\n\n/**\n * [[DefaultSignalingClient]] implements the SignalingClient interface.\n */\nexport default class DefaultSignalingClient implements SignalingClient {\n  private static FRAME_TYPE_RTC: number = 0x5;\n  private static CLOSE_EVENT_TIMEOUT_MS: number = 2000;\n  private static CLIENT_SUPPORTS_COMPRESSION: boolean = true;\n\n  private observerQueue: Set<SignalingClientObserver>;\n  private wasOpened: boolean;\n  private isClosing: boolean;\n  private connectionRequestQueue: SignalingClientConnectionRequest[];\n  private unloadHandler: () => void | null = null;\n  private audioSessionId: number;\n\n  constructor(private webSocket: WebSocketAdapter, private logger: Logger) {\n    this.observerQueue = new Set<SignalingClientObserver>();\n    this.connectionRequestQueue = [];\n    this.resetConnection();\n    this.logger.debug(() => 'signaling client init');\n    this.audioSessionId = this.generateNewAudioSessionId();\n  }\n\n  registerObserver(observer: SignalingClientObserver): void {\n    this.logger.debug(() => 'registering signaling client observer');\n    this.observerQueue.add(observer);\n  }\n\n  removeObserver(observer: SignalingClientObserver): void {\n    this.logger.debug(() => 'removing signaling client observer');\n    this.observerQueue.delete(observer);\n  }\n\n  openConnection(request: SignalingClientConnectionRequest): void {\n    this.logger.info('adding connection request to queue: ' + request.url());\n    this.connectionRequestQueue.push(request);\n    this.closeConnection();\n  }\n\n  pingPong(pingPongFrame: SdkPingPongFrame): number {\n    this.logger.debug(() => 'sending ping');\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.PING_PONG;\n    message.pingPong = pingPongFrame;\n    this.sendMessage(message);\n    return message.timestampMs as number;\n  }\n\n  join(settings: SignalingClientJoin): void {\n    this.logger.info('sending join');\n    const joinFrame = SdkJoinFrame.create();\n    joinFrame.protocolVersion = 2;\n    joinFrame.flags = SdkJoinFlags.HAS_STREAM_UPDATE;\n    const browserBehavior = new DefaultBrowserBehavior();\n    const sdkClientDetails: ISdkClientDetails = {\n      platformName: browserBehavior.name(),\n      platformVersion: browserBehavior.version(),\n      clientSource: Versioning.sdkName,\n      chimeSdkVersion: Versioning.sdkVersion,\n      clientUtcOffset: getFormattedOffset(new Date().getTimezoneOffset()),\n    };\n    if (settings.applicationMetadata) {\n      const { appName, appVersion } = settings.applicationMetadata;\n      sdkClientDetails.appName = appName;\n      sdkClientDetails.appVersion = appVersion;\n    }\n    joinFrame.clientDetails = SdkClientDetails.create(sdkClientDetails);\n    joinFrame.audioSessionId = this.audioSessionId;\n    joinFrame.wantsCompressedSdp = DefaultSignalingClient.CLIENT_SUPPORTS_COMPRESSION;\n    joinFrame.disablePeriodicKeyframeRequestOnContentSender =\n      settings.disablePeriodicKeyframeRequestOnContentSender;\n    joinFrame.serverSideNetworkAdaption = convertServerSideNetworkAdaptionEnumToSignaled(\n      settings.serverSideNetworkAdaption\n    );\n    joinFrame.supportedServerSideNetworkAdaptions = settings.supportedServerSideNetworkAdaptions.map(\n      convertServerSideNetworkAdaptionEnumToSignaled\n    );\n    joinFrame.wantsAllTemporalLayersInIndex = settings.wantsAllTemporalLayersInIndex;\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.JOIN;\n    message.join = joinFrame;\n    this.sendMessage(message);\n  }\n\n  subscribe(settings: SignalingClientSubscribe): void {\n    const subscribeFrame = SdkSubscribeFrame.create();\n    subscribeFrame.sendStreams = [];\n    subscribeFrame.sdpOffer = settings.sdpOffer;\n    if (settings.connectionTypeHasVideo) {\n      subscribeFrame.receiveStreamIds = settings.receiveStreamIds;\n    }\n\n    if (settings.audioHost) {\n      subscribeFrame.audioCheckin = settings.audioCheckin;\n      subscribeFrame.audioHost = settings.audioHost;\n      subscribeFrame.audioMuted = settings.audioMuted;\n      if (!settings.audioCheckin) {\n        const audioStream = SdkStreamDescriptor.create();\n        audioStream.mediaType = SdkStreamMediaType.AUDIO;\n        audioStream.trackLabel = 'AmazonChimeExpressAudio';\n        audioStream.attendeeId = settings.attendeeId;\n        audioStream.streamId = 1;\n        audioStream.groupId = 1;\n        audioStream.framerate = 15;\n        audioStream.maxBitrateKbps = 600;\n        audioStream.avgBitrateBps = 400000;\n        subscribeFrame.sendStreams.push(audioStream);\n      }\n    }\n    subscribeFrame.compressedSdpOffer = settings.compressedSdpOffer;\n\n    subscribeFrame.duplex = SdkStreamServiceType.RX;\n    if (settings.localVideoEnabled) {\n      subscribeFrame.duplex = SdkStreamServiceType.DUPLEX;\n      for (let i = 0; i < settings.videoStreamDescriptions.length; i++) {\n        // Non-simulcast use DefaultVideoStreamIndex.localStreamDescriptions\n        // which is the exact old behavior\n        const streamDescription = settings.videoStreamDescriptions[i].clone();\n        streamDescription.attendeeId = settings.attendeeId;\n        subscribeFrame.sendStreams.push(streamDescription.toStreamDescriptor());\n      }\n    }\n\n    if (settings.videoSubscriptionConfiguration.length > 0) {\n      subscribeFrame.videoSubscriptionConfiguration = settings.videoSubscriptionConfiguration.map(\n        this.convertSignalingClientVideoSubscriptionConfiguration\n      );\n    }\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.SUBSCRIBE;\n    message.sub = subscribeFrame;\n    this.sendMessage(message);\n  }\n\n  remoteVideoUpdate(\n    addedOrUpdated: SignalingClientVideoSubscriptionConfiguration[],\n    removed: string[]\n  ): void {\n    const remoteVideoUpdate = SdkRemoteVideoUpdateFrame.create();\n    remoteVideoUpdate.addedOrUpdatedVideoSubscriptions = addedOrUpdated.map(\n      this.convertSignalingClientVideoSubscriptionConfiguration\n    );\n    remoteVideoUpdate.removedVideoSubscriptionMids = removed;\n\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.REMOTE_VIDEO_UPDATE;\n    message.remoteVideoUpdate = remoteVideoUpdate;\n    this.sendMessage(message);\n  }\n\n  private convertSignalingClientVideoSubscriptionConfiguration(\n    config: SignalingClientVideoSubscriptionConfiguration\n  ): SdkVideoSubscriptionConfiguration {\n    const signalConfig = new SdkVideoSubscriptionConfiguration();\n    signalConfig.mid = config.mid;\n    signalConfig.attendeeId = config.attendeeId;\n    signalConfig.streamId = config.streamId;\n    signalConfig.groupId = config.groupId;\n    signalConfig.priority = config.priority;\n    signalConfig.targetBitrateKbps = config.targetBitrateKbps;\n    switch (config.qualityAdaptationPreference) {\n      case VideoQualityAdaptationPreference.Balanced:\n        signalConfig.qualityAdaptationPreference = SdkVideoQualityAdaptationPreference.BALANCED;\n        break;\n      case VideoQualityAdaptationPreference.MaintainFramerate:\n        signalConfig.qualityAdaptationPreference =\n          SdkVideoQualityAdaptationPreference.MAINTAIN_FRAMERATE;\n        break;\n      case VideoQualityAdaptationPreference.MaintainResolution:\n        signalConfig.qualityAdaptationPreference =\n          SdkVideoQualityAdaptationPreference.MAINTAIN_RESOLUTION;\n        break;\n      default:\n        signalConfig.qualityAdaptationPreference = SdkVideoQualityAdaptationPreference.BALANCED;\n    }\n\n    return signalConfig;\n  }\n\n  leave(): void {\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.LEAVE;\n    message.leave = SdkLeaveFrame.create();\n    this.sendMessage(message);\n    this.logger.debug(() => {\n      return 'sent leave';\n    });\n  }\n\n  sendClientMetrics(clientMetricFrame: SdkClientMetricFrame): void {\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.CLIENT_METRIC;\n    message.clientMetric = clientMetricFrame;\n    this.sendMessage(message);\n  }\n\n  sendDataMessage(messageFrame: SdkDataMessageFrame): void {\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.DATA_MESSAGE;\n    message.dataMessage = messageFrame;\n    this.sendMessage(message);\n  }\n\n  closeConnection(): void {\n    if (\n      this.webSocket.readyState() !== WebSocketReadyState.None &&\n      this.webSocket.readyState() !== WebSocketReadyState.Closed\n    ) {\n      this.isClosing = true;\n      this.sendEvent(\n        new SignalingClientEvent(this, SignalingClientEventType.WebSocketClosing, null)\n      );\n\n      // Continue resetting the connection even if SDK does not receive the \"close\" event.\n      const scheduler: TimeoutScheduler = new TimeoutScheduler(\n        DefaultSignalingClient.CLOSE_EVENT_TIMEOUT_MS\n      );\n      const handler = (event: CloseEvent): void => {\n        /* istanbul ignore next */\n        this.webSocket.removeEventListener?.('close', handler);\n        scheduler.stop();\n        this.closeEventHandler(event);\n      };\n\n      // Remove the existing close handler to prevent SDK from opening a new connection.\n      /* istanbul ignore next */\n      this.webSocket.removeEventListener?.('close', this.closeEventHandler);\n      this.webSocket.addEventListener('close', handler);\n      scheduler.start(() => {\n        // SDK has not received the \"close\" event on WebSocket for two seconds.\n        // Handle a fake close event with 1006 to indicate that the client abnormally closed the connection.\n        handler(\n          new CloseEvent('close', { wasClean: false, code: 1006, reason: '', bubbles: false })\n        );\n      });\n      this.webSocket.close();\n      this.deactivatePageUnloadHandler();\n    } else {\n      this.logger.info('no existing signaling client connection needs closing');\n      this.serviceConnectionRequestQueue();\n    }\n  }\n\n  ready(): boolean {\n    return (\n      this.webSocket.readyState() === WebSocketReadyState.Open && !this.isClosing && this.wasOpened\n    );\n  }\n\n  mute(muted: boolean): void {\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.AUDIO_CONTROL;\n    const audioControl = SdkAudioControlFrame.create();\n    audioControl.muted = muted;\n    message.audioControl = audioControl;\n    this.sendMessage(message);\n  }\n\n  pause(streamIds: number[]): void {\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.PAUSE;\n    message.pause = SdkPauseResumeFrame.create();\n    message.pause.streamIds = streamIds;\n    this.sendMessage(message);\n  }\n\n  resume(streamIds: number[]): void {\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.RESUME;\n    message.pause = SdkPauseResumeFrame.create();\n    message.pause.streamIds = streamIds;\n    this.sendMessage(message);\n  }\n\n  private resetConnection(): void {\n    this.webSocket.destroy();\n    this.wasOpened = false;\n  }\n\n  private sendMessage(message: SdkSignalFrame): void {\n    message.timestampMs = Date.now();\n    this.logger.debug(() => `sending: ${JSON.stringify(message)}`);\n    const buffer = this.prependWithFrameTypeRTC(SdkSignalFrame.encode(message).finish());\n    if (this.ready()) {\n      if (!this.webSocket.send(buffer)) {\n        this.sendEvent(\n          new SignalingClientEvent(this, SignalingClientEventType.WebSocketSendMessageFailure, null)\n        );\n        return;\n      }\n      this.sendEvent(\n        new SignalingClientEvent(this, SignalingClientEventType.WebSocketSentMessage, null)\n      );\n    } else {\n      this.sendEvent(\n        new SignalingClientEvent(this, SignalingClientEventType.WebSocketSkippedMessage, null)\n      );\n    }\n  }\n\n  private receiveMessage(inBuffer: Uint8Array): void {\n    let message: SdkSignalFrame;\n    try {\n      message = SdkSignalFrame.decode(inBuffer);\n    } catch (e) {\n      this.logger.info(`failed to decode: ${inBuffer}`);\n      this.sendEvent(\n        new SignalingClientEvent(this, SignalingClientEventType.ProtocolDecodeFailure, null)\n      );\n      return;\n    }\n    this.logger.debug(() => `received: ${JSON.stringify(message)}`);\n    if (this.webSocket.readyState() === WebSocketReadyState.Open) {\n      this.sendEvent(\n        new SignalingClientEvent(this, SignalingClientEventType.ReceivedSignalFrame, message)\n      );\n    } else {\n      this.logger.info(\n        `skipping notification of message since WebSocket is not open: ${JSON.stringify(message)}`\n      );\n    }\n  }\n\n  private stripFrameTypeRTC(inBuffer: Uint8Array): Uint8Array {\n    const frameType = inBuffer[0];\n    // TODO: change server frame type to send 0x05\n    if (frameType !== DefaultSignalingClient.FRAME_TYPE_RTC && frameType !== 0x02) {\n      this.logger.warn(`expected FrameTypeRTC for message but got ${frameType}`);\n    }\n    return inBuffer.slice(1);\n  }\n\n  private prependWithFrameTypeRTC(inBuffer: Uint8Array): Uint8Array {\n    const outBuffer = new Uint8Array(inBuffer.length + 1);\n    outBuffer[0] = DefaultSignalingClient.FRAME_TYPE_RTC;\n    outBuffer.set(inBuffer, 1);\n    return outBuffer;\n  }\n\n  private serviceConnectionRequestQueue(): void {\n    if (this.connectionRequestQueue.length === 0) {\n      this.logger.info('no connection requests to service');\n      return;\n    }\n    const request = this.connectionRequestQueue.shift();\n    this.logger.info(`opening connection to ${request.url()}`);\n    this.isClosing = false;\n    this.webSocket.create(request.url(), request.protocols());\n    this.setUpEventListeners();\n    this.sendEvent(\n      new SignalingClientEvent(this, SignalingClientEventType.WebSocketConnecting, null)\n    );\n  }\n\n  private sendEvent(event: SignalingClientEvent): void {\n    switch (event.type) {\n      case SignalingClientEventType.WebSocketMessage:\n      case SignalingClientEventType.ReceivedSignalFrame:\n      case SignalingClientEventType.WebSocketSentMessage:\n        this.logger.debug(() => `notifying event: ${SignalingClientEventType[event.type]}`);\n        break;\n      case SignalingClientEventType.WebSocketSkippedMessage:\n        this.logger.debug(\n          () =>\n            `notifying event: ${SignalingClientEventType[event.type]}, websocket state=${\n              WebSocketReadyState[this.webSocket.readyState()]\n            }`\n        );\n        break;\n      default:\n        this.logger.info(`notifying event: ${SignalingClientEventType[event.type]}`);\n        break;\n    }\n\n    for (const observer of this.observerQueue) {\n      observer.handleSignalingClientEvent(event);\n    }\n  }\n\n  private setUpEventListeners(): void {\n    this.webSocket.addEventListener('open', () => {\n      this.activatePageUnloadHandler();\n      this.wasOpened = true;\n      this.sendEvent(new SignalingClientEvent(this, SignalingClientEventType.WebSocketOpen, null));\n    });\n    this.webSocket.addEventListener('message', (event: MessageEvent) => {\n      this.sendEvent(\n        new SignalingClientEvent(this, SignalingClientEventType.WebSocketMessage, null)\n      );\n      this.receiveMessage(this.stripFrameTypeRTC(new Uint8Array(event.data)));\n    });\n    this.webSocket.addEventListener('close', this.closeEventHandler);\n    this.webSocket.addEventListener('error', () => {\n      if (this.isClosing && !this.wasOpened) {\n        this.logger.info('Signaling WebSocket ignoring error closing while connecting');\n        return;\n      }\n      if (this.wasOpened) {\n        this.logger.error('Signaling WebSocket received error while connected');\n        this.sendEvent(\n          new SignalingClientEvent(this, SignalingClientEventType.WebSocketError, null)\n        );\n      } else {\n        this.logger.error('Signaling WebSocket received error while connecting');\n        this.sendEvent(\n          new SignalingClientEvent(this, SignalingClientEventType.WebSocketFailed, null)\n        );\n      }\n    });\n  }\n\n  private activatePageUnloadHandler(): void {\n    this.unloadHandler = () => {\n      this.leave();\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const GlobalAny = global as any;\n    GlobalAny['window'] &&\n      GlobalAny['window']['addEventListener'] &&\n      window.addEventListener('unload', this.unloadHandler);\n  }\n\n  private deactivatePageUnloadHandler(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const GlobalAny = global as any;\n    GlobalAny['window'] &&\n      GlobalAny['window']['removeEventListener'] &&\n      window.removeEventListener('unload', this.unloadHandler);\n    this.unloadHandler = null;\n  }\n\n  private generateNewAudioSessionId(): number {\n    const num = new Uint32Array(1);\n    getRandomValues(num);\n    return num[0];\n  }\n\n  private closeEventHandler = (event: CloseEvent): void => {\n    this.deactivatePageUnloadHandler();\n    this.resetConnection();\n    this.sendEvent(\n      new SignalingClientEvent(\n        this,\n        SignalingClientEventType.WebSocketClosed,\n        null,\n        event.code,\n        event.reason\n      )\n    );\n    this.serviceConnectionRequestQueue();\n  };\n\n  promoteToPrimaryMeeting(credentials: MeetingSessionCredentials): void {\n    const signaledCredentials = SdkMeetingSessionCredentials.create();\n    signaledCredentials.attendeeId = credentials.attendeeId;\n    signaledCredentials.externalUserId = credentials.externalUserId;\n    signaledCredentials.joinToken = credentials.joinToken;\n\n    const primaryMeetingJoin = SdkPrimaryMeetingJoinFrame.create();\n    primaryMeetingJoin.credentials = signaledCredentials;\n\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.PRIMARY_MEETING_JOIN;\n    message.primaryMeetingJoin = primaryMeetingJoin;\n    this.sendMessage(message);\n  }\n\n  demoteFromPrimaryMeeting(): void {\n    const primaryMeetingLeave = SdkPrimaryMeetingLeaveFrame.create();\n\n    const message = SdkSignalFrame.create();\n    message.type = SdkSignalFrame.Type.PRIMARY_MEETING_LEAVE;\n    message.primaryMeetingLeave = primaryMeetingLeave;\n    this.sendMessage(message);\n  }\n}\n"]}