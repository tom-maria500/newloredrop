{"version":3,"file":"VideoFrameProcessor.js","sourceRoot":"","sources":["../../src/videoframeprocessor/VideoFrameProcessor.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport Destroyable from '../destroyable/Destroyable';\nimport EventController from '../eventcontroller/EventController';\nimport VideoFrameBuffer from './VideoFrameBuffer';\n\n/**\n * [[VideoFrameProcessor]] is defined as a unit of video processing.\n * It transforms an array of {@link VideoFrameBuffer} and produces an array of {@link VideoFrameBuffer}.\n * It can be chained together to be used with {@link VideoFrameProcessorPipeline}.\n */\nexport default interface VideoFrameProcessor extends Destroyable {\n  /**\n   * Processes the array of {@link VideoFrameBuffer} and returns an array of {@link VideoFrameBuffer}.\n   */\n  process(buffers: VideoFrameBuffer[]): Promise<VideoFrameBuffer[]>;\n\n  /**\n   * Destroys the processor.\n   */\n  destroy(): Promise<void>;\n\n  /**\n   * Set the {@link EventController} to the VideoFrameProcessor\n   * @param eventController\n   */\n  setEventController?(eventController: EventController): void;\n}\n"]}