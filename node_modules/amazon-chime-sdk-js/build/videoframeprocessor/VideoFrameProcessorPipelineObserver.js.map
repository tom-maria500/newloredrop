{"version":3,"file":"VideoFrameProcessorPipelineObserver.js","sourceRoot":"","sources":["../../src/videoframeprocessor/VideoFrameProcessorPipelineObserver.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * [[VideoFrameProcessorPipelineObserver]] is the observer for {@link VideoFrameProcessorPipeline} to receive lifecycle or performance callbacks.\n */\nexport default interface VideoFrameProcessorPipelineObserver {\n  /**\n   * `processingDidStart` will be called when {@link VideoFrameProcessorPipeline} starts streaming.\n   */\n  processingDidStart?(): void;\n\n  /**\n   * `processingDidFailToStart` will be called when {@link VideoFrameProcessorPipeline} could not start streaming due to runtime errors.\n   */\n  processingDidFailToStart?(): void;\n\n  /**\n   * `processingDidStop` will be called when {@link VideoFrameProcessorPipeline} stops streaming expectedly.\n   */\n  processingDidStop?(): void;\n\n  /**\n   * `processingLatencyTooHigh` will be called when the execution of {@link VideoFrameProcessorPipeline} slows the frame rate down by half.\n   */\n  processingLatencyTooHigh?(latencyMs: number): void;\n}\n"]}