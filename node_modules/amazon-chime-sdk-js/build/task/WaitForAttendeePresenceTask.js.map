{"version":3,"file":"WaitForAttendeePresenceTask.js","sourceRoot":"","sources":["../../src/task/WaitForAttendeePresenceTask.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;;;;;;;;;;;;;AAGtC,0GAAkF;AAElF,0DAAkC;AAElC;;GAEG;AACH,MAAqB,2BAA4B,SAAQ,kBAAQ;IAK/D,YAAoB,OAAkC;QACpD,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QADJ,YAAO,GAAP,OAAO,CAA2B;QAJ5C,aAAQ,GAAG,6BAA6B,CAAC;IAMnD,CAAC;IAED,MAAM;QACJ,6DAA6D;QAC7D,0BAA0B;QAC1B,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,MAAM,KAAK,GAAG,IAAI,KAAK,CACrB,aAAa,IAAI,CAAC,IAAI,EAAE,oCACtB,kCAAwB,CAAC,iBAC3B,EAAE,CACH,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC,aAAa,CAAC;SAC3B;IACH,CAAC;IAEK,GAAG;;YACP,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,WAAW,CAAC,UAAU,CAAC;YACnF,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAC3C,MAAM,OAAO,GAAG,CACd,iBAAyB,EACzB,OAAgB,EAChB,eAAmC,EACnC,QAA6B,EAC7B,IAAiD,EAC3C,EAAE;oBACR,IAAI,UAAU,KAAK,iBAAiB,IAAI,OAAO,EAAE;wBAC/C,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,uCAAuC,CAAC,OAAO,CAAC,CAAC;wBACjF,OAAO,EAAE,CAAC;wBACV,OAAO,IAAI,CAAC,aAAa,CAAC;qBAC3B;gBACH,CAAC,CAAC;gBAEF,IAAI,CAAC,aAAa,GAAG,CAAC,KAAY,EAAE,EAAE;oBACpC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,uCAAuC,CAAC,OAAO,CAAC,CAAC;oBACjF,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC,CAAC;gBAEF,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,qCAAqC,CAAC,OAAO,CAAC,CAAC;YACjF,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;CACF;AAhDD,8CAgDC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AudioVideoControllerState from '../audiovideocontroller/AudioVideoControllerState';\nimport MeetingSessionStatusCode from '../meetingsession/MeetingSessionStatusCode';\nimport RealtimeAttendeePositionInFrame from '../realtimecontroller/RealtimeAttendeePositionInFrame';\nimport BaseTask from './BaseTask';\n\n/*\n * [[WaitForAttendeePresenceTask]] waits until an attendee presence event happens.\n */\nexport default class WaitForAttendeePresenceTask extends BaseTask {\n  protected taskName = 'WaitForAttendeePresenceTask';\n\n  private cancelPromise: undefined | ((error: Error) => void);\n\n  constructor(private context: AudioVideoControllerState) {\n    super(context.logger);\n  }\n\n  cancel(): void {\n    // Just in case. The baseCancel behavior should prevent this.\n    /* istanbul ignore else */\n    if (this.cancelPromise) {\n      const error = new Error(\n        `canceling ${this.name()} due to the meeting status code: ${\n          MeetingSessionStatusCode.NoAttendeePresent\n        }`\n      );\n      this.cancelPromise(error);\n      delete this.cancelPromise;\n    }\n  }\n\n  async run(): Promise<void> {\n    const attendeeId = this.context.meetingSessionConfiguration.credentials.attendeeId;\n    return new Promise<void>((resolve, reject) => {\n      const handler = (\n        presentAttendeeId: string,\n        present: boolean,\n        _externalUserId: string | undefined,\n        _dropped: boolean | undefined,\n        _pos: RealtimeAttendeePositionInFrame | undefined\n      ): void => {\n        if (attendeeId === presentAttendeeId && present) {\n          this.context.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(handler);\n          resolve();\n          delete this.cancelPromise;\n        }\n      };\n\n      this.cancelPromise = (error: Error) => {\n        this.context.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(handler);\n        reject(error);\n      };\n\n      this.context.realtimeController.realtimeSubscribeToAttendeeIdPresence(handler);\n    });\n  }\n}\n"]}