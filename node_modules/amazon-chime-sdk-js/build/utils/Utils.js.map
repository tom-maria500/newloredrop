{"version":3,"file":"Utils.js","sourceRoot":"","sources":["../../src/utils/Utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { AssetSpec } from '../../libs/voicefocus/voicefocus';\nimport Versioning from '../versioning/Versioning';\n\nexport function wait(waitTimeMs: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, waitTimeMs));\n}\n\n// This is impossible to adequately test in Node, so Istanbul ignore.\n/* istanbul ignore next */\nexport function isIFramed(): boolean {\n  // Same-origin iframes can check `nodeName`.\n  // We can also check whether the parent window and the top window are the same.\n  // Cross-origin iframes will throw on the `parent` check, so catch here.\n  try {\n    return window.frameElement?.nodeName === 'IFRAME' || parent !== top;\n  } catch (e) {\n    // Very likely to be a cross-origin iframe.\n    return true;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function toLowerCasePropertyNames(input: any): any {\n  if (input === null) {\n    return null;\n  } else if (typeof input !== 'object') {\n    return input;\n  } else if (Array.isArray(input)) {\n    return input.map(toLowerCasePropertyNames);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return Object.keys(input).reduce((result: any, key: string) => {\n    const value = input[key];\n    const newValue = typeof value === 'object' ? toLowerCasePropertyNames(value) : value;\n    result[key.toLowerCase()] = newValue;\n    return result;\n  }, {});\n}\n\n/**\n * Based on the SDK version, return an asset group.\n *\n * @returns the default asset spec, based on the SDK version.\n */\nexport function getDefaultAssetSpec(): AssetSpec {\n  const version = Versioning.sdkVersionSemVer;\n\n  return {\n    assetGroup: `sdk-${version.major}.${version.minor}`,\n  };\n}\n\n/**\n * Get UTC offset in (+|-)HH:mm format\n * E.g. For Asia/Calcutta timezone, +05:30 UTC offset value is returned\n */\nexport function getFormattedOffset(utcOffset: number): string {\n  const offset = Math.abs(utcOffset);\n  const offsetOperator = utcOffset <= 0 ? '+' : '-';\n  const offsetHours = Math.floor(offset / 60)\n    .toString()\n    .padStart(2, '0');\n  const offsetMinutes = Math.floor(offset % 60)\n    .toString()\n    .padStart(2, '0');\n\n  return `${offsetOperator}${offsetHours}:${offsetMinutes}`;\n}\n\nexport function getRandomValues(buffer: Uint32Array): void {\n  try {\n    // Browser environment\n    window.crypto.getRandomValues(buffer);\n  } catch (error) {\n    // Node environment for unit test\n    const view = new DataView(buffer.buffer);\n    view.setUint32(0, Math.trunc(Math.random() * 2 ** 32), true);\n  }\n}\n\n/**\n * Shim for SuppressedError\n * https://github.com/tc39/proposal-explicit-resource-management?tab=readme-ov-file#the-suppressederror-error\n */\nexport class SuppressedError extends Error {\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public readonly error: any,\n    public readonly suppressed?: SuppressedError,\n    message?: string\n  ) {\n    /* istanbul ignore next -- because coverage can't detect all the branches */\n    super(message ?? `${error?.message ?? error}`);\n  }\n}\n\n/**\n * Run a callback over the set of all values, suppress any errors, and only throw after iteration completes.\n * @param iterable - The iterable to iterate over\n * @param callback - The callback to run on each iteration\n * @throws If any of the callbacks throw an error\n */\nexport function iterateEvery<T>(\n  iterable: Iterable<T> | undefined | null,\n  callback: (value: T) => void\n): void {\n  if (!iterable) return;\n  let suppressedError: SuppressedError | undefined;\n  for (const value of iterable) {\n    try {\n      callback(value);\n    } catch (err) {\n      suppressedError = new SuppressedError(err, suppressedError);\n    }\n  }\n  if (suppressedError) {\n    throw suppressedError;\n  }\n}\n"]}