import { AssetSpec } from '../../libs/voicefocus/voicefocus';
export declare function wait(waitTimeMs: number): Promise<void>;
export declare function isIFramed(): boolean;
export declare function toLowerCasePropertyNames(input: any): any;
/**
 * Based on the SDK version, return an asset group.
 *
 * @returns the default asset spec, based on the SDK version.
 */
export declare function getDefaultAssetSpec(): AssetSpec;
/**
 * Get UTC offset in (+|-)HH:mm format
 * E.g. For Asia/Calcutta timezone, +05:30 UTC offset value is returned
 */
export declare function getFormattedOffset(utcOffset: number): string;
export declare function getRandomValues(buffer: Uint32Array): void;
/**
 * Shim for SuppressedError
 * https://github.com/tc39/proposal-explicit-resource-management?tab=readme-ov-file#the-suppressederror-error
 */
export declare class SuppressedError extends Error {
    readonly error: any;
    readonly suppressed?: SuppressedError;
    constructor(error: any, suppressed?: SuppressedError, message?: string);
}
/**
 * Run a callback over the set of all values, suppress any errors, and only throw after iteration completes.
 * @param iterable - The iterable to iterate over
 * @param callback - The callback to run on each iteration
 * @throws If any of the callbacks throw an error
 */
export declare function iterateEvery<T>(iterable: Iterable<T> | undefined | null, callback: (value: T) => void): void;
