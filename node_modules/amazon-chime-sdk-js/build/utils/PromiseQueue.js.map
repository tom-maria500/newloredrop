{"version":3,"file":"PromiseQueue.js","sourceRoot":"","sources":["../../src/utils/PromiseQueue.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;AAEtC;;GAEG;AACH,MAAqB,YAAY;IAAjC;QACE,UAAK,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAQ5B,CAAC;IANC,2BAA2B;IAC3B,GAAG,CAAI,IAAsB;QAC3B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AATD,+BASC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * A simple promise queue to enforce the order of async APIs for example, start/stop video/audio input.\n */\nexport default class PromiseQueue {\n  queue = Promise.resolve();\n\n  // eslint-disable-next-line\n  add<T>(func: () => Promise<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.queue = this.queue.then(func).then(resolve).catch(reject);\n    });\n  }\n}\n"]}