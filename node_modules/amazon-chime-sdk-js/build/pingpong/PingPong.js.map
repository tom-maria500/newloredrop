{"version":3,"file":"PingPong.js","sourceRoot":"","sources":["../../src/pingpong/PingPong.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport PingPongObserver from '../pingpongobserver/PingPongObserver';\n\n/**\n * [[PingPong]] sends ping-pongs across the signaling connection via the\n * [[SignalingClient]]. It measures the round-trip time between the client ping\n * and server pong and acts as a heartbeat to keep the underlying WebSocket\n * connection alive.\n */\nexport default interface PingPong {\n  /**\n   * Adds observer to receive callbacks for pong events.\n   */\n  addObserver(observer: PingPongObserver): void;\n\n  /**\n   * Removes observer to stop receiving callbacks for pong events.\n   */\n  removeObserver(observer: PingPongObserver): void;\n\n  /**\n   * Iterates through each observer, so that their notification functions may\n   * be called.\n   */\n  forEachObserver(observerFunc: (observer: PingPongObserver) => void): void;\n\n  /**\n   * Starts sending pings on an interval and receiving pongs.\n   */\n  start(): void;\n\n  /**\n   * Stops ping-pongs.\n   */\n  stop(): void;\n}\n"]}