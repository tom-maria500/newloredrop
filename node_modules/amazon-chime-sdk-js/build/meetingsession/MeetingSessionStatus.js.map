{"version":3,"file":"MeetingSessionStatus.js","sourceRoot":"","sources":["../../src/meetingsession/MeetingSessionStatus.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SdkSignalFrame } from '../signalingprotocol/SignalingProtocol.js';\nimport MeetingSessionStatusCode from './MeetingSessionStatusCode';\n\n/**\n * [[MeetingSessionStatus]] indicates a status received regarding the session.\n */\nexport default class MeetingSessionStatus {\n  constructor(private _statusCode: MeetingSessionStatusCode) {}\n\n  statusCode(): MeetingSessionStatusCode {\n    return this._statusCode;\n  }\n\n  isFailure(): boolean {\n    switch (this._statusCode) {\n      case MeetingSessionStatusCode.AudioAuthenticationRejected:\n      case MeetingSessionStatusCode.AudioCallAtCapacity:\n      case MeetingSessionStatusCode.AudioInternalServerError:\n      case MeetingSessionStatusCode.AudioServiceUnavailable:\n      case MeetingSessionStatusCode.AudioDisconnected:\n      case MeetingSessionStatusCode.VideoCallAtSourceCapacity:\n      case MeetingSessionStatusCode.SignalingBadRequest:\n      case MeetingSessionStatusCode.SignalingInternalServerError:\n      case MeetingSessionStatusCode.SignalingRequestFailed:\n      case MeetingSessionStatusCode.ICEGatheringTimeoutWorkaround:\n      case MeetingSessionStatusCode.ConnectionHealthReconnect:\n      case MeetingSessionStatusCode.RealtimeApiFailed:\n      case MeetingSessionStatusCode.TaskFailed:\n      case MeetingSessionStatusCode.NoAttendeePresent:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  isTerminal(): boolean {\n    switch (this._statusCode) {\n      case MeetingSessionStatusCode.Left:\n      case MeetingSessionStatusCode.AudioJoinedFromAnotherDevice:\n      case MeetingSessionStatusCode.AudioAuthenticationRejected:\n      case MeetingSessionStatusCode.AudioCallAtCapacity:\n      case MeetingSessionStatusCode.MeetingEnded:\n      case MeetingSessionStatusCode.AudioDisconnected:\n      case MeetingSessionStatusCode.TURNCredentialsForbidden:\n      case MeetingSessionStatusCode.SignalingBadRequest:\n      case MeetingSessionStatusCode.SignalingRequestFailed:\n      case MeetingSessionStatusCode.VideoCallAtSourceCapacity:\n      case MeetingSessionStatusCode.RealtimeApiFailed:\n      case MeetingSessionStatusCode.AudioAttendeeRemoved:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  isAudioConnectionFailure(): boolean {\n    switch (this._statusCode) {\n      case MeetingSessionStatusCode.AudioAuthenticationRejected:\n      case MeetingSessionStatusCode.AudioInternalServerError:\n      case MeetingSessionStatusCode.AudioServiceUnavailable:\n      case MeetingSessionStatusCode.ICEGatheringTimeoutWorkaround:\n      case MeetingSessionStatusCode.SignalingBadRequest:\n      case MeetingSessionStatusCode.SignalingInternalServerError:\n      case MeetingSessionStatusCode.SignalingRequestFailed:\n      case MeetingSessionStatusCode.RealtimeApiFailed:\n      case MeetingSessionStatusCode.NoAttendeePresent:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  toString?(): string {\n    switch (this._statusCode) {\n      case MeetingSessionStatusCode.OK:\n        return 'Everything is OK so far.';\n      case MeetingSessionStatusCode.Left:\n        return 'The attendee left the meeting.';\n      case MeetingSessionStatusCode.AudioJoinedFromAnotherDevice:\n        return 'The attendee joined from another device.';\n      case MeetingSessionStatusCode.AudioAuthenticationRejected:\n        return 'The meeting rejected the attendee.';\n      case MeetingSessionStatusCode.AudioCallAtCapacity:\n        return \"The attendee couldn't join because the meeting was at capacity.\";\n      case MeetingSessionStatusCode.MeetingEnded:\n        return 'The meeting ended.';\n      case MeetingSessionStatusCode.AudioInternalServerError:\n      case MeetingSessionStatusCode.AudioServiceUnavailable:\n      case MeetingSessionStatusCode.AudioDisconnected:\n        return 'The audio connection failed.';\n      case MeetingSessionStatusCode.VideoCallSwitchToViewOnly:\n        return \"The attendee couldn't start the local video because the maximum video capacity was reached.\";\n      case MeetingSessionStatusCode.VideoCallAtSourceCapacity:\n        return 'The connection failed due to an internal server error.';\n      case MeetingSessionStatusCode.SignalingBadRequest:\n      case MeetingSessionStatusCode.SignalingInternalServerError:\n      case MeetingSessionStatusCode.SignalingRequestFailed:\n        return 'The signaling connection failed.';\n      case MeetingSessionStatusCode.ICEGatheringTimeoutWorkaround:\n        return 'Gathering ICE candidates timed out. In Chrome, this might indicate that the browser is in a bad state after reconnecting to VPN.';\n      case MeetingSessionStatusCode.ConnectionHealthReconnect:\n        return 'The meeting was reconnected.';\n      case MeetingSessionStatusCode.RealtimeApiFailed:\n        return 'The real-time API failed. This status code might indicate that the callback you passed to the real-time API threw an exception.';\n      case MeetingSessionStatusCode.TaskFailed:\n        return 'The connection failed. See the error message for more details.';\n      case MeetingSessionStatusCode.IncompatibleSDP:\n        return 'The connection failed due to incompatible SDP.';\n      case MeetingSessionStatusCode.TURNCredentialsForbidden:\n        return 'The meeting ended, or the attendee was removed.';\n      case MeetingSessionStatusCode.NoAttendeePresent:\n        return 'The attendee was not present.';\n      case MeetingSessionStatusCode.AudioAttendeeRemoved:\n        return 'The meeting ended because attendee removed.';\n      case MeetingSessionStatusCode.AudioVideoWasRemovedFromPrimaryMeeting:\n        return 'The Primary meeting credentials provided are no longer valid. chime::DeleteAttendee may have been called on them.';\n      case MeetingSessionStatusCode.AudioVideoDisconnectedWhilePromoted:\n        return 'The client disconnected while promoted, which will automatically demote. The attendee must promote again to participate.';\n      case MeetingSessionStatusCode.AudioDisconnectAudio:\n        return 'The audio connection failed.';\n      /* istanbul ignore next */\n      default: {\n        // You get a compile-time error if you do not handle any status code.\n        const exhaustiveCheck: never = this._statusCode;\n        throw new Error(`Unhandled case: ${exhaustiveCheck}`);\n      }\n    }\n  }\n\n  static fromSignalFrame(frame: SdkSignalFrame): MeetingSessionStatus {\n    if (frame.error && frame.error.status) {\n      return this.fromSignalingStatus(frame.error.status);\n    } else if (frame.type === SdkSignalFrame.Type.AUDIO_STATUS) {\n      if (frame.audioStatus) {\n        return this.fromAudioStatus(frame.audioStatus.audioStatus);\n      }\n      return new MeetingSessionStatus(MeetingSessionStatusCode.SignalingRequestFailed);\n    } else if (frame.type === SdkSignalFrame.Type.PRIMARY_MEETING_LEAVE) {\n      return new MeetingSessionStatus(\n        MeetingSessionStatusCode.AudioVideoWasRemovedFromPrimaryMeeting\n      );\n    }\n    return new MeetingSessionStatus(MeetingSessionStatusCode.OK);\n  }\n\n  private static fromAudioStatus(status: number): MeetingSessionStatus {\n    // TODO: Add these numbers to proto definition and reference them here.\n    switch (status) {\n      case 200:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.OK);\n      case 301:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.AudioJoinedFromAnotherDevice);\n      case 302:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.AudioDisconnectAudio);\n      case 403:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.AudioAuthenticationRejected);\n      case 409:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.AudioCallAtCapacity);\n      case 410:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.MeetingEnded);\n      case 411:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.AudioAttendeeRemoved);\n      case 500:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.AudioInternalServerError);\n      case 503:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.AudioServiceUnavailable);\n      default:\n        switch (Math.floor(status / 100)) {\n          case 2:\n            return new MeetingSessionStatus(MeetingSessionStatusCode.OK);\n          default:\n            return new MeetingSessionStatus(MeetingSessionStatusCode.AudioDisconnected);\n        }\n    }\n  }\n\n  private static fromSignalingStatus(status: number): MeetingSessionStatus {\n    // TODO: Add these numbers to proto definition and reference them here.\n    //\n    // We don't bother adding additional codes with different prefixes, and we probably\n    // shouldn't be prefixing all these errors (e.g. `AuthenticationRejected`) with the media type\n    // since that doesn't make sense.\n    switch (status) {\n      case 206:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.VideoCallSwitchToViewOnly);\n      case 509:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.VideoCallAtSourceCapacity);\n      case 403:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.AudioAuthenticationRejected);\n      case 409:\n        return new MeetingSessionStatus(MeetingSessionStatusCode.AudioCallAtCapacity);\n      default:\n        switch (Math.floor(status / 100)) {\n          case 2:\n            return new MeetingSessionStatus(MeetingSessionStatusCode.OK);\n          case 4:\n            return new MeetingSessionStatus(MeetingSessionStatusCode.SignalingBadRequest);\n          case 5:\n            return new MeetingSessionStatus(MeetingSessionStatusCode.SignalingInternalServerError);\n          default:\n            return new MeetingSessionStatus(MeetingSessionStatusCode.SignalingRequestFailed);\n        }\n    }\n  }\n}\n"]}