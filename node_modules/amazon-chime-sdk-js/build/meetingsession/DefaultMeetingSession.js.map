{"version":3,"file":"DefaultMeetingSession.js","sourceRoot":"","sources":["../../src/meetingsession/DefaultMeetingSession.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AudioVideoController from '../audiovideocontroller/AudioVideoController';\nimport DefaultAudioVideoController from '../audiovideocontroller/DefaultAudioVideoController';\nimport AudioVideoFacade from '../audiovideofacade/AudioVideoFacade';\nimport DefaultAudioVideoFacade from '../audiovideofacade/DefaultAudioVideoFacade';\nimport FullJitterBackoff from '../backoff/FullJitterBackoff';\nimport DefaultBrowserBehavior from '../browserbehavior/DefaultBrowserBehavior';\nimport ContentShareController from '../contentsharecontroller/ContentShareController';\nimport ContentShareMediaStreamBroker from '../contentsharecontroller/ContentShareMediaStreamBroker';\nimport DefaultContentShareController from '../contentsharecontroller/DefaultContentShareController';\nimport CSPMonitor from '../cspmonitor/CSPMonitor';\nimport Destroyable, { isDestroyable } from '../destroyable/Destroyable';\nimport DeviceController from '../devicecontroller/DeviceController';\nimport DefaultEventController from '../eventcontroller/DefaultEventController';\nimport EventController from '../eventcontroller/EventController';\nimport Logger from '../logger/Logger';\nimport DeviceControllerBasedMediaStreamBroker from '../mediastreambroker/DeviceControllerBasedMediaStreamBroker';\nimport DefaultReconnectController from '../reconnectcontroller/DefaultReconnectController';\nimport SimulcastUplinkPolicy from '../videouplinkbandwidthpolicy/SimulcastUplinkPolicy';\nimport VideoUplinkBandwidthPolicy from '../videouplinkbandwidthpolicy/VideoUplinkBandwidthPolicy';\nimport DefaultWebSocketAdapter from '../websocketadapter/DefaultWebSocketAdapter';\nimport MeetingSession from './MeetingSession';\nimport MeetingSessionConfiguration from './MeetingSessionConfiguration';\n\nexport default class DefaultMeetingSession implements MeetingSession, Destroyable {\n  private _configuration: MeetingSessionConfiguration;\n  private _logger: Logger;\n  private audioVideoController: AudioVideoController;\n  private contentShareController: ContentShareController;\n  private _deviceController: DeviceController;\n  private audioVideoFacade: AudioVideoFacade;\n\n  constructor(\n    configuration: MeetingSessionConfiguration,\n    logger: Logger,\n    deviceController: DeviceControllerBasedMediaStreamBroker,\n    private _eventController?: EventController\n  ) {\n    this._configuration = configuration;\n    this._logger = logger;\n\n    this.checkBrowserSupportAndFeatureConfiguration();\n\n    CSPMonitor.addLogger(this._logger);\n    CSPMonitor.register();\n    if (!this._eventController) {\n      this._eventController = new DefaultEventController(configuration, logger);\n    }\n    /* istanbul ignore else */\n    if (!deviceController.eventController) {\n      deviceController.eventController = this.eventController;\n    }\n    this.audioVideoController = new DefaultAudioVideoController(\n      this._configuration,\n      this._logger,\n      new DefaultWebSocketAdapter(this._logger),\n      deviceController,\n      new DefaultReconnectController(\n        this._configuration.reconnectTimeoutMs,\n        new FullJitterBackoff(\n          this._configuration.reconnectFixedWaitMs,\n          this._configuration.reconnectShortBackOffMs,\n          this._configuration.reconnectLongBackOffMs\n        )\n      ),\n      this.eventController\n    );\n    this._deviceController = deviceController;\n    this.logger.info(`MeetingFeatures: ${JSON.stringify(configuration.meetingFeatures)}`);\n    const contentShareMediaStreamBroker = new ContentShareMediaStreamBroker(this._logger);\n    this.contentShareController = new DefaultContentShareController(\n      contentShareMediaStreamBroker,\n      new DefaultAudioVideoController(\n        DefaultContentShareController.createContentShareMeetingSessionConfigure(\n          this._configuration\n        ),\n        this._logger,\n        new DefaultWebSocketAdapter(this._logger),\n        contentShareMediaStreamBroker,\n        new DefaultReconnectController(\n          this._configuration.reconnectTimeoutMs,\n          new FullJitterBackoff(\n            this._configuration.reconnectFixedWaitMs,\n            this._configuration.reconnectShortBackOffMs,\n            this._configuration.reconnectLongBackOffMs\n          )\n        )\n      ),\n      this.audioVideoController\n    );\n    this.audioVideoFacade = new DefaultAudioVideoFacade(\n      this.audioVideoController,\n      this.audioVideoController.videoTileController,\n      this.audioVideoController.realtimeController,\n      this.audioVideoController.audioMixController,\n      this._deviceController,\n      this.contentShareController\n    );\n  }\n\n  get configuration(): MeetingSessionConfiguration {\n    return this._configuration;\n  }\n\n  get logger(): Logger {\n    return this._logger;\n  }\n\n  get audioVideo(): AudioVideoFacade {\n    return this.audioVideoFacade;\n  }\n\n  get contentShare(): ContentShareController {\n    return this.contentShareController;\n  }\n\n  get deviceController(): DeviceController {\n    return this._deviceController;\n  }\n\n  get eventController(): EventController {\n    return this._eventController;\n  }\n\n  /**\n   * Clean up this instance and resources that it created.\n   *\n   * After calling `destroy`, internal fields like `audioVideoController` will be unavailable.\n   */\n  async destroy(): Promise<void> {\n    if (isDestroyable(this.contentShareController)) {\n      await this.contentShareController.destroy();\n    }\n    if (isDestroyable(this.audioVideoController)) {\n      await this.audioVideoController.destroy();\n    }\n    if (isDestroyable(this.eventController)) {\n      await this.eventController.destroy();\n    }\n\n    CSPMonitor.removeLogger(this._logger);\n\n    this._logger = undefined;\n    this._configuration = undefined;\n    this._deviceController = undefined;\n    this.audioVideoFacade = undefined;\n    this.audioVideoController = undefined;\n    this.contentShareController = undefined;\n    this._eventController = undefined;\n  }\n\n  private checkBrowserSupportAndFeatureConfiguration(): void {\n    const browserBehavior = new DefaultBrowserBehavior();\n    const browser = `${browserBehavior.name()} ${browserBehavior.majorVersion()} (${browserBehavior.version()})`;\n    this.logger.info(`browser is ${browser}`);\n    if (!browserBehavior.isSupported()) {\n      this.logger.warn(\n        'this browser is not currently supported. ' +\n          'Stability may suffer. ' +\n          `Supported browsers are: ${browserBehavior.supportString()}.`\n      );\n    }\n\n    // Validation if a custom video uplink policy is specified\n    if (this._configuration.videoUplinkBandwidthPolicy) {\n      if (this.isSimulcastUplinkPolicy(this._configuration.videoUplinkBandwidthPolicy)) {\n        if (!browserBehavior.hasChromiumWebRTC()) {\n          throw new Error('Simulcast is only supported on Chromium-based browsers');\n        }\n        this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = true;\n      } else {\n        this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n      }\n    }\n\n    if (this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers) {\n      if (browserBehavior.hasChromiumWebRTC()) {\n        this.logger.info(`Simulcast is enabled for ${browserBehavior.name()}`);\n      } else {\n        this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n        this.logger.info('Simulcast is only supported on Chromium-based browsers');\n      }\n\n      if (this._configuration.enableSVC) {\n        this._configuration.enableSVC = false;\n        this.logger.info('SVC is not successfully enabled since simulcast is enabled');\n      }\n    }\n\n    if (this._configuration.enableSVC && !browserBehavior.supportsScalableVideoCoding()) {\n      this._configuration.enableSVC = false;\n      this.logger.info(\n        'SVC is only supported on Chromium-based browsers with version 111 or above'\n      );\n    }\n  }\n\n  private isSimulcastUplinkPolicy(policy: VideoUplinkBandwidthPolicy | undefined): boolean {\n    return !!(policy && (policy as SimulcastUplinkPolicy).addObserver);\n  }\n}\n"]}