{"version":3,"file":"MeetingSessionConfiguration.js","sourceRoot":"","sources":["../../src/meetingsession/MeetingSessionConfiguration.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport ApplicationMetadata from '../applicationmetadata/ApplicationMetadata';\nimport ConnectionHealthPolicyConfiguration from '../connectionhealthpolicy/ConnectionHealthPolicyConfiguration';\nimport VideoQualitySettings from '../devicecontroller/VideoQualitySettings';\nimport { toLowerCasePropertyNames } from '../utils/Utils';\nimport VideoDownlinkBandwidthPolicy from '../videodownlinkbandwidthpolicy/VideoDownlinkBandwidthPolicy';\nimport VideoUplinkBandwidthPolicy from '../videouplinkbandwidthpolicy/VideoUplinkBandwidthPolicy';\nimport MeetingFeatures from './MeetingFeatures';\nimport MeetingSessionCredentials from './MeetingSessionCredentials';\nimport MeetingSessionURLs from './MeetingSessionURLs';\n\n/**\n * [[MeetingSessionConfiguration]] contains the information necessary to start\n * a session.\n */\nexport default class MeetingSessionConfiguration {\n  /**\n   * The id of the meeting the session is joining.\n   */\n  meetingId: string | null = null;\n\n  /**\n   * The external meeting id of the meeting the session is joining.\n   */\n  externalMeetingId: string | null = null;\n\n  /**\n   * The credentials used to authenticate the session.\n   */\n  credentials: MeetingSessionCredentials | null = null;\n\n  /**\n   * The URLs the session uses to reach the meeting service.\n   */\n  urls: MeetingSessionURLs | null = null;\n\n  /**\n   * Maximum amount of time in milliseconds to allow for connecting.\n   */\n  connectionTimeoutMs: number = 15000;\n\n  /**\n   * Maximum amount of time in milliseconds to wait for the current attendee to be present\n   * after initial connection.\n   */\n  attendeePresenceTimeoutMs: number = 0;\n\n  /**\n   * Configuration for connection health policies: reconnection, unusable audio warning connection,\n   * and signal strength bars connection.\n   */\n  connectionHealthPolicyConfiguration: ConnectionHealthPolicyConfiguration = new ConnectionHealthPolicyConfiguration();\n\n  /**\n   * Maximum amount of time in milliseconds to allow for reconnecting.\n   */\n  reconnectTimeoutMs = 120 * 1000;\n\n  /**\n   * Fixed wait amount in milliseconds between reconnecting attempts.\n   */\n  reconnectFixedWaitMs = 0;\n\n  /**\n   * The short back-off time in milliseconds between reconnecting attempts.\n   */\n  reconnectShortBackOffMs = 1 * 1000;\n\n  /**\n   * The long back-off time in milliseconds between reconnecting attempts.\n   */\n  reconnectLongBackOffMs = 5 * 1000;\n\n  /**\n   * Feature flag to enable Simulcast\n   */\n  enableSimulcastForUnifiedPlanChromiumBasedBrowsers: boolean = false;\n\n  /**\n   * Feature flag to enable scalable video coding (SVC) on supported browsers, which is determined by `BrowserBehavior.supportsScalableVideoCoding`\n   */\n  enableSVC: boolean = false;\n\n  /**\n   * Video downlink bandwidth policy to determine which remote videos\n   * are subscribed to.\n   */\n  videoDownlinkBandwidthPolicy: VideoDownlinkBandwidthPolicy = null;\n\n  /**\n   * Video uplink bandwidth policy to determine the bandwidth constraints\n   * of the local video.\n   */\n  videoUplinkBandwidthPolicy: VideoUplinkBandwidthPolicy = null;\n\n  /**\n   * Builder's application metadata such as application name or version.\n   * This is an optional parameter. Please check [[ApplicationMetadata]] for more information.\n   */\n  applicationMetadata: ApplicationMetadata;\n\n  /**\n   * Keep the last frame of the video when a remote video is paused via the pauseVideoTile API.\n   * This is done by not clearing the srcObject property of the videoElement.\n   */\n  keepLastFrameWhenPaused: boolean = false;\n\n  /**\n   * The Amazon Chime SDK media backends currently send a keyframe request to content share senders every 10 seconds to help mitigate\n   * decoder issues on receivers. This flag requests the backed to disable that feature.\n   *\n   * Setting this flag to true may or may not lead to issues with content received for your application, as it depends on browsers used\n   * and whether they have fixed previous issues leading to the introduction of this periodic keyframe request. It will however\n   * reduce CPU consumption on content senders which no longer have to generate as many expensive keyframes.\n   */\n  disablePeriodicKeyframeRequestOnContentSender: boolean = false;\n\n  /**\n   * Additional features in the meeting\n   */\n  meetingFeatures: MeetingFeatures = new MeetingFeatures();\n\n  /**\n   * Constructs a MeetingSessionConfiguration optionally with a chime:CreateMeeting and\n   * chime:CreateAttendee response. You can pass in either a JSON object containing the\n   * responses, or a JSON object containing the information in the Meeting and Attendee\n   * root-level fields. Examples:\n   *\n   * ```\n   * const configuration = new MeetingSessionConfiguration({\n   *   \"Meeting\": {\n   *      \"MeetingId\": \"...\",\n   *      \"MediaPlacement\": {\n   *        \"AudioHostUrl\": \"...\",\n   *        \"SignalingUrl\": \"...\",\n   *        \"TurnControlUrl\": \"...\"\n   *      },\n   *      \"MeetingFeatures\":{\n   *        \"Audio\":\"...\",\n   *        \"Video\":\"....\",\n   *        \"Content\":\"...\",\n   *        \"Attendee\":\"...\"\n   *      },\n   *    }\n   *   }\n   * }, {\n   *   \"Attendee\": {\n   *     \"ExternalUserId\": \"...\",\n   *     \"AttendeeId\": \"...\",\n   *     \"JoinToken\": \"...\"\n   *   }\n   * });\n   * ```\n   *\n   * ```\n   * const configuration = new MeetingSessionConfiguration({\n   *   \"MeetingId\": \"...\",\n   *   \"MediaPlacement\": {\n   *     \"AudioHostUrl\": \"...\",\n   *     \"SignalingUrl\": \"...\",\n   *     \"TurnControlUrl\": \"...\"\n   *   }\n   * }, {\n   *   \"ExternalUserId\": \"...\",\n   *   \"AttendeeId\": \"...\",\n   *   \"JoinToken\": \"...\"\n   * });\n   * ```\n   */\n  constructor(createMeetingResponse?: any, createAttendeeResponse?: any) { // eslint-disable-line\n    if (createMeetingResponse) {\n      createMeetingResponse = toLowerCasePropertyNames(createMeetingResponse);\n      if (createMeetingResponse.meeting) {\n        createMeetingResponse = createMeetingResponse.meeting;\n      }\n      this.meetingId = createMeetingResponse.meetingid;\n      this.externalMeetingId = createMeetingResponse.externalmeetingid;\n      this.urls = new MeetingSessionURLs();\n      this.urls.audioHostURL = createMeetingResponse.mediaplacement.audiohosturl;\n      this.urls.signalingURL = createMeetingResponse.mediaplacement.signalingurl;\n      this.urls.turnControlURL = createMeetingResponse.mediaplacement.turncontrolurl;\n      if (createMeetingResponse.mediaplacement.eventingestionurl) {\n        this.urls.eventIngestionURL = createMeetingResponse.mediaplacement.eventingestionurl;\n      }\n\n      const parseVideoResolution = (\n        resolution: string,\n        defaultValue: VideoQualitySettings\n      ): VideoQualitySettings => {\n        switch (resolution) {\n          case 'None':\n            return VideoQualitySettings.VideoDisabled;\n          case 'HD':\n            return VideoQualitySettings.VideoResolutionHD;\n          case 'FHD':\n            return VideoQualitySettings.VideoResolutionFHD;\n          case 'UHD':\n            return VideoQualitySettings.VideoResolutionUHD;\n          default:\n            return defaultValue;\n        }\n      };\n      if (\n        createMeetingResponse.meetingfeatures?.video !== undefined ||\n        createMeetingResponse.meetingfeatures?.content !== undefined\n      ) {\n        const videoMaxResolution =\n          createMeetingResponse.meetingfeatures.video === undefined\n            ? 'HD'\n            : createMeetingResponse.meetingfeatures.video.maxresolution;\n        const contentMaxResolution =\n          createMeetingResponse.meetingfeatures.content === undefined\n            ? 'FHD'\n            : createMeetingResponse.meetingfeatures.content.maxresolution;\n        this.meetingFeatures = new MeetingFeatures(\n          parseVideoResolution(videoMaxResolution, VideoQualitySettings.VideoResolutionHD),\n          parseVideoResolution(contentMaxResolution, VideoQualitySettings.VideoResolutionFHD)\n        );\n      }\n    }\n    if (createAttendeeResponse) {\n      createAttendeeResponse = toLowerCasePropertyNames(createAttendeeResponse);\n      if (createAttendeeResponse.attendee) {\n        createAttendeeResponse = createAttendeeResponse.attendee;\n      }\n      this.credentials = new MeetingSessionCredentials();\n      this.credentials.attendeeId = createAttendeeResponse.attendeeid;\n      this.credentials.externalUserId = createAttendeeResponse.externaluserid;\n      this.credentials.joinToken = createAttendeeResponse.jointoken;\n    }\n  }\n}\n"]}