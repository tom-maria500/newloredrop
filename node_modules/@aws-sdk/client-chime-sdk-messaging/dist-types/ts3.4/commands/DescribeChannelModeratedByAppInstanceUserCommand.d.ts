import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import {
  ChimeSDKMessagingClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ChimeSDKMessagingClient";
import {
  DescribeChannelModeratedByAppInstanceUserRequest,
  DescribeChannelModeratedByAppInstanceUserResponse,
} from "../models/models_0";
export { __MetadataBearer };
export { $Command };
export interface DescribeChannelModeratedByAppInstanceUserCommandInput
  extends DescribeChannelModeratedByAppInstanceUserRequest {}
export interface DescribeChannelModeratedByAppInstanceUserCommandOutput
  extends DescribeChannelModeratedByAppInstanceUserResponse,
    __MetadataBearer {}
declare const DescribeChannelModeratedByAppInstanceUserCommand_base: {
  new (
    input: DescribeChannelModeratedByAppInstanceUserCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    DescribeChannelModeratedByAppInstanceUserCommandInput,
    DescribeChannelModeratedByAppInstanceUserCommandOutput,
    ChimeSDKMessagingClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    __0_0: DescribeChannelModeratedByAppInstanceUserCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    DescribeChannelModeratedByAppInstanceUserCommandInput,
    DescribeChannelModeratedByAppInstanceUserCommandOutput,
    ChimeSDKMessagingClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class DescribeChannelModeratedByAppInstanceUserCommand extends DescribeChannelModeratedByAppInstanceUserCommand_base {
  protected static __types: {
    api: {
      input: DescribeChannelModeratedByAppInstanceUserRequest;
      output: DescribeChannelModeratedByAppInstanceUserResponse;
    };
    sdk: {
      input: DescribeChannelModeratedByAppInstanceUserCommandInput;
      output: DescribeChannelModeratedByAppInstanceUserCommandOutput;
    };
  };
}
