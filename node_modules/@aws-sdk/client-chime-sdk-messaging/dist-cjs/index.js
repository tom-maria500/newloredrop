"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AllowNotifications: () => AllowNotifications,
  AssociateChannelFlowCommand: () => AssociateChannelFlowCommand,
  BadRequestException: () => BadRequestException,
  BatchChannelMembershipsFilterSensitiveLog: () => BatchChannelMembershipsFilterSensitiveLog,
  BatchCreateChannelMembershipCommand: () => BatchCreateChannelMembershipCommand,
  BatchCreateChannelMembershipResponseFilterSensitiveLog: () => BatchCreateChannelMembershipResponseFilterSensitiveLog,
  ChannelAssociatedWithFlowSummaryFilterSensitiveLog: () => ChannelAssociatedWithFlowSummaryFilterSensitiveLog,
  ChannelBanFilterSensitiveLog: () => ChannelBanFilterSensitiveLog,
  ChannelBanSummaryFilterSensitiveLog: () => ChannelBanSummaryFilterSensitiveLog,
  ChannelFilterSensitiveLog: () => ChannelFilterSensitiveLog,
  ChannelFlowCallbackCommand: () => ChannelFlowCallbackCommand,
  ChannelFlowCallbackRequestFilterSensitiveLog: () => ChannelFlowCallbackRequestFilterSensitiveLog,
  ChannelFlowFilterSensitiveLog: () => ChannelFlowFilterSensitiveLog,
  ChannelFlowSummaryFilterSensitiveLog: () => ChannelFlowSummaryFilterSensitiveLog,
  ChannelMembershipFilterSensitiveLog: () => ChannelMembershipFilterSensitiveLog,
  ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog: () => ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog,
  ChannelMembershipPreferencesFilterSensitiveLog: () => ChannelMembershipPreferencesFilterSensitiveLog,
  ChannelMembershipSummaryFilterSensitiveLog: () => ChannelMembershipSummaryFilterSensitiveLog,
  ChannelMembershipType: () => ChannelMembershipType,
  ChannelMessageCallbackFilterSensitiveLog: () => ChannelMessageCallbackFilterSensitiveLog,
  ChannelMessageFilterSensitiveLog: () => ChannelMessageFilterSensitiveLog,
  ChannelMessagePersistenceType: () => ChannelMessagePersistenceType,
  ChannelMessageStatus: () => ChannelMessageStatus,
  ChannelMessageSummaryFilterSensitiveLog: () => ChannelMessageSummaryFilterSensitiveLog,
  ChannelMessageType: () => ChannelMessageType,
  ChannelMode: () => ChannelMode,
  ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog: () => ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog,
  ChannelModeratorFilterSensitiveLog: () => ChannelModeratorFilterSensitiveLog,
  ChannelModeratorSummaryFilterSensitiveLog: () => ChannelModeratorSummaryFilterSensitiveLog,
  ChannelPrivacy: () => ChannelPrivacy,
  ChannelSummaryFilterSensitiveLog: () => ChannelSummaryFilterSensitiveLog,
  ChimeSDKMessaging: () => ChimeSDKMessaging,
  ChimeSDKMessagingClient: () => ChimeSDKMessagingClient,
  ChimeSDKMessagingServiceException: () => ChimeSDKMessagingServiceException,
  ConflictException: () => ConflictException,
  CreateChannelBanCommand: () => CreateChannelBanCommand,
  CreateChannelBanResponseFilterSensitiveLog: () => CreateChannelBanResponseFilterSensitiveLog,
  CreateChannelCommand: () => CreateChannelCommand,
  CreateChannelFlowCommand: () => CreateChannelFlowCommand,
  CreateChannelFlowRequestFilterSensitiveLog: () => CreateChannelFlowRequestFilterSensitiveLog,
  CreateChannelMembershipCommand: () => CreateChannelMembershipCommand,
  CreateChannelMembershipResponseFilterSensitiveLog: () => CreateChannelMembershipResponseFilterSensitiveLog,
  CreateChannelModeratorCommand: () => CreateChannelModeratorCommand,
  CreateChannelModeratorResponseFilterSensitiveLog: () => CreateChannelModeratorResponseFilterSensitiveLog,
  CreateChannelRequestFilterSensitiveLog: () => CreateChannelRequestFilterSensitiveLog,
  DeleteChannelBanCommand: () => DeleteChannelBanCommand,
  DeleteChannelCommand: () => DeleteChannelCommand,
  DeleteChannelFlowCommand: () => DeleteChannelFlowCommand,
  DeleteChannelMembershipCommand: () => DeleteChannelMembershipCommand,
  DeleteChannelMessageCommand: () => DeleteChannelMessageCommand,
  DeleteChannelModeratorCommand: () => DeleteChannelModeratorCommand,
  DeleteMessagingStreamingConfigurationsCommand: () => DeleteMessagingStreamingConfigurationsCommand,
  DescribeChannelBanCommand: () => DescribeChannelBanCommand,
  DescribeChannelBanResponseFilterSensitiveLog: () => DescribeChannelBanResponseFilterSensitiveLog,
  DescribeChannelCommand: () => DescribeChannelCommand,
  DescribeChannelFlowCommand: () => DescribeChannelFlowCommand,
  DescribeChannelFlowResponseFilterSensitiveLog: () => DescribeChannelFlowResponseFilterSensitiveLog,
  DescribeChannelMembershipCommand: () => DescribeChannelMembershipCommand,
  DescribeChannelMembershipForAppInstanceUserCommand: () => DescribeChannelMembershipForAppInstanceUserCommand,
  DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog: () => DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog,
  DescribeChannelMembershipResponseFilterSensitiveLog: () => DescribeChannelMembershipResponseFilterSensitiveLog,
  DescribeChannelModeratedByAppInstanceUserCommand: () => DescribeChannelModeratedByAppInstanceUserCommand,
  DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog: () => DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog,
  DescribeChannelModeratorCommand: () => DescribeChannelModeratorCommand,
  DescribeChannelModeratorResponseFilterSensitiveLog: () => DescribeChannelModeratorResponseFilterSensitiveLog,
  DescribeChannelResponseFilterSensitiveLog: () => DescribeChannelResponseFilterSensitiveLog,
  DisassociateChannelFlowCommand: () => DisassociateChannelFlowCommand,
  ErrorCode: () => ErrorCode,
  ExpirationCriterion: () => ExpirationCriterion,
  FallbackAction: () => FallbackAction,
  ForbiddenException: () => ForbiddenException,
  GetChannelMembershipPreferencesCommand: () => GetChannelMembershipPreferencesCommand,
  GetChannelMembershipPreferencesResponseFilterSensitiveLog: () => GetChannelMembershipPreferencesResponseFilterSensitiveLog,
  GetChannelMessageCommand: () => GetChannelMessageCommand,
  GetChannelMessageResponseFilterSensitiveLog: () => GetChannelMessageResponseFilterSensitiveLog,
  GetChannelMessageStatusCommand: () => GetChannelMessageStatusCommand,
  GetMessagingSessionEndpointCommand: () => GetMessagingSessionEndpointCommand,
  GetMessagingStreamingConfigurationsCommand: () => GetMessagingStreamingConfigurationsCommand,
  IdentityFilterSensitiveLog: () => IdentityFilterSensitiveLog,
  InvocationType: () => InvocationType,
  ListChannelBansCommand: () => ListChannelBansCommand,
  ListChannelBansRequestFilterSensitiveLog: () => ListChannelBansRequestFilterSensitiveLog,
  ListChannelBansResponseFilterSensitiveLog: () => ListChannelBansResponseFilterSensitiveLog,
  ListChannelFlowsCommand: () => ListChannelFlowsCommand,
  ListChannelFlowsRequestFilterSensitiveLog: () => ListChannelFlowsRequestFilterSensitiveLog,
  ListChannelFlowsResponseFilterSensitiveLog: () => ListChannelFlowsResponseFilterSensitiveLog,
  ListChannelMembershipsCommand: () => ListChannelMembershipsCommand,
  ListChannelMembershipsForAppInstanceUserCommand: () => ListChannelMembershipsForAppInstanceUserCommand,
  ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog: () => ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog,
  ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog: () => ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog,
  ListChannelMembershipsRequestFilterSensitiveLog: () => ListChannelMembershipsRequestFilterSensitiveLog,
  ListChannelMembershipsResponseFilterSensitiveLog: () => ListChannelMembershipsResponseFilterSensitiveLog,
  ListChannelMessagesCommand: () => ListChannelMessagesCommand,
  ListChannelMessagesRequestFilterSensitiveLog: () => ListChannelMessagesRequestFilterSensitiveLog,
  ListChannelMessagesResponseFilterSensitiveLog: () => ListChannelMessagesResponseFilterSensitiveLog,
  ListChannelModeratorsCommand: () => ListChannelModeratorsCommand,
  ListChannelModeratorsRequestFilterSensitiveLog: () => ListChannelModeratorsRequestFilterSensitiveLog,
  ListChannelModeratorsResponseFilterSensitiveLog: () => ListChannelModeratorsResponseFilterSensitiveLog,
  ListChannelsAssociatedWithChannelFlowCommand: () => ListChannelsAssociatedWithChannelFlowCommand,
  ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog: () => ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog,
  ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog: () => ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog,
  ListChannelsCommand: () => ListChannelsCommand,
  ListChannelsModeratedByAppInstanceUserCommand: () => ListChannelsModeratedByAppInstanceUserCommand,
  ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog: () => ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog,
  ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog: () => ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog,
  ListChannelsRequestFilterSensitiveLog: () => ListChannelsRequestFilterSensitiveLog,
  ListChannelsResponseFilterSensitiveLog: () => ListChannelsResponseFilterSensitiveLog,
  ListSubChannelsCommand: () => ListSubChannelsCommand,
  ListSubChannelsRequestFilterSensitiveLog: () => ListSubChannelsRequestFilterSensitiveLog,
  ListSubChannelsResponseFilterSensitiveLog: () => ListSubChannelsResponseFilterSensitiveLog,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListTagsForResourceResponseFilterSensitiveLog: () => ListTagsForResourceResponseFilterSensitiveLog,
  MessageAttributeValueFilterSensitiveLog: () => MessageAttributeValueFilterSensitiveLog,
  MessagingDataType: () => MessagingDataType,
  NotFoundException: () => NotFoundException,
  ProcessorFilterSensitiveLog: () => ProcessorFilterSensitiveLog,
  PushNotificationConfigurationFilterSensitiveLog: () => PushNotificationConfigurationFilterSensitiveLog,
  PushNotificationPreferencesFilterSensitiveLog: () => PushNotificationPreferencesFilterSensitiveLog,
  PushNotificationType: () => PushNotificationType,
  PutChannelExpirationSettingsCommand: () => PutChannelExpirationSettingsCommand,
  PutChannelMembershipPreferencesCommand: () => PutChannelMembershipPreferencesCommand,
  PutChannelMembershipPreferencesRequestFilterSensitiveLog: () => PutChannelMembershipPreferencesRequestFilterSensitiveLog,
  PutChannelMembershipPreferencesResponseFilterSensitiveLog: () => PutChannelMembershipPreferencesResponseFilterSensitiveLog,
  PutMessagingStreamingConfigurationsCommand: () => PutMessagingStreamingConfigurationsCommand,
  RedactChannelMessageCommand: () => RedactChannelMessageCommand,
  ResourceLimitExceededException: () => ResourceLimitExceededException,
  SearchChannelsCommand: () => SearchChannelsCommand,
  SearchChannelsRequestFilterSensitiveLog: () => SearchChannelsRequestFilterSensitiveLog,
  SearchChannelsResponseFilterSensitiveLog: () => SearchChannelsResponseFilterSensitiveLog,
  SearchFieldKey: () => SearchFieldKey,
  SearchFieldOperator: () => SearchFieldOperator,
  SendChannelMessageCommand: () => SendChannelMessageCommand,
  SendChannelMessageRequestFilterSensitiveLog: () => SendChannelMessageRequestFilterSensitiveLog,
  ServiceFailureException: () => ServiceFailureException,
  ServiceUnavailableException: () => ServiceUnavailableException,
  SortOrder: () => SortOrder,
  TagFilterSensitiveLog: () => TagFilterSensitiveLog,
  TagResourceCommand: () => TagResourceCommand,
  TagResourceRequestFilterSensitiveLog: () => TagResourceRequestFilterSensitiveLog,
  ThrottledClientException: () => ThrottledClientException,
  UnauthorizedClientException: () => UnauthorizedClientException,
  UntagResourceCommand: () => UntagResourceCommand,
  UntagResourceRequestFilterSensitiveLog: () => UntagResourceRequestFilterSensitiveLog,
  UpdateChannelCommand: () => UpdateChannelCommand,
  UpdateChannelFlowCommand: () => UpdateChannelFlowCommand,
  UpdateChannelFlowRequestFilterSensitiveLog: () => UpdateChannelFlowRequestFilterSensitiveLog,
  UpdateChannelMessageCommand: () => UpdateChannelMessageCommand,
  UpdateChannelMessageRequestFilterSensitiveLog: () => UpdateChannelMessageRequestFilterSensitiveLog,
  UpdateChannelReadMarkerCommand: () => UpdateChannelReadMarkerCommand,
  UpdateChannelRequestFilterSensitiveLog: () => UpdateChannelRequestFilterSensitiveLog,
  __Client: () => import_smithy_client.Client,
  paginateListChannelBans: () => paginateListChannelBans,
  paginateListChannelFlows: () => paginateListChannelFlows,
  paginateListChannelMemberships: () => paginateListChannelMemberships,
  paginateListChannelMembershipsForAppInstanceUser: () => paginateListChannelMembershipsForAppInstanceUser,
  paginateListChannelMessages: () => paginateListChannelMessages,
  paginateListChannelModerators: () => paginateListChannelModerators,
  paginateListChannels: () => paginateListChannels,
  paginateListChannelsAssociatedWithChannelFlow: () => paginateListChannelsAssociatedWithChannelFlow,
  paginateListChannelsModeratedByAppInstanceUser: () => paginateListChannelsModeratedByAppInstanceUser,
  paginateListSubChannels: () => paginateListSubChannels,
  paginateSearchChannels: () => paginateSearchChannels
});
module.exports = __toCommonJS(src_exports);

// src/ChimeSDKMessagingClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "chime"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ChimeSDKMessagingClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/ChimeSDKMessagingClient.ts
var ChimeSDKMessagingClient = class extends import_smithy_client.Client {
  static {
    __name(this, "ChimeSDKMessagingClient");
  }
  /**
   * The resolved configuration of ChimeSDKMessagingClient class. This is resolved and normalized from the {@link ChimeSDKMessagingClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultChimeSDKMessagingHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        })
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/ChimeSDKMessaging.ts


// src/commands/AssociateChannelFlowCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/ChimeSDKMessagingServiceException.ts

var ChimeSDKMessagingServiceException = class _ChimeSDKMessagingServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "ChimeSDKMessagingServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ChimeSDKMessagingServiceException.prototype);
  }
};

// src/models/models_0.ts

var AllowNotifications = {
  ALL: "ALL",
  FILTERED: "FILTERED",
  NONE: "NONE"
};
var ChannelMembershipType = {
  DEFAULT: "DEFAULT",
  HIDDEN: "HIDDEN"
};
var ErrorCode = {
  AccessDenied: "AccessDenied",
  BadRequest: "BadRequest",
  Conflict: "Conflict",
  Forbidden: "Forbidden",
  NotFound: "NotFound",
  PhoneNumberAssociationsExist: "PhoneNumberAssociationsExist",
  PreconditionFailed: "PreconditionFailed",
  ResourceLimitExceeded: "ResourceLimitExceeded",
  ServiceFailure: "ServiceFailure",
  ServiceUnavailable: "ServiceUnavailable",
  Throttled: "Throttled",
  Throttling: "Throttling",
  Unauthorized: "Unauthorized",
  Unprocessable: "Unprocessable",
  VoiceConnectorGroupAssociationsExist: "VoiceConnectorGroupAssociationsExist"
};
var BadRequestException = class _BadRequestException extends ChimeSDKMessagingServiceException {
  static {
    __name(this, "BadRequestException");
  }
  name = "BadRequestException";
  $fault = "client";
  Code;
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _BadRequestException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
  }
};
var ConflictException = class _ConflictException extends ChimeSDKMessagingServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  Code;
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
  }
};
var ForbiddenException = class _ForbiddenException extends ChimeSDKMessagingServiceException {
  static {
    __name(this, "ForbiddenException");
  }
  name = "ForbiddenException";
  $fault = "client";
  Code;
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ForbiddenException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ForbiddenException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
  }
};
var NotFoundException = class _NotFoundException extends ChimeSDKMessagingServiceException {
  static {
    __name(this, "NotFoundException");
  }
  name = "NotFoundException";
  $fault = "client";
  Code;
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
  }
};
var ServiceFailureException = class _ServiceFailureException extends ChimeSDKMessagingServiceException {
  static {
    __name(this, "ServiceFailureException");
  }
  name = "ServiceFailureException";
  $fault = "server";
  Code;
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceFailureException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceFailureException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
  }
};
var ServiceUnavailableException = class _ServiceUnavailableException extends ChimeSDKMessagingServiceException {
  static {
    __name(this, "ServiceUnavailableException");
  }
  name = "ServiceUnavailableException";
  $fault = "server";
  Code;
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
  }
};
var ThrottledClientException = class _ThrottledClientException extends ChimeSDKMessagingServiceException {
  static {
    __name(this, "ThrottledClientException");
  }
  name = "ThrottledClientException";
  $fault = "client";
  Code;
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottledClientException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ThrottledClientException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
  }
};
var UnauthorizedClientException = class _UnauthorizedClientException extends ChimeSDKMessagingServiceException {
  static {
    __name(this, "UnauthorizedClientException");
  }
  name = "UnauthorizedClientException";
  $fault = "client";
  Code;
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnauthorizedClientException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _UnauthorizedClientException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
  }
};
var ResourceLimitExceededException = class _ResourceLimitExceededException extends ChimeSDKMessagingServiceException {
  static {
    __name(this, "ResourceLimitExceededException");
  }
  name = "ResourceLimitExceededException";
  $fault = "client";
  Code;
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceLimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceLimitExceededException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
  }
};
var ExpirationCriterion = {
  CREATED_TIMESTAMP: "CREATED_TIMESTAMP",
  LAST_MESSAGE_TIMESTAMP: "LAST_MESSAGE_TIMESTAMP"
};
var ChannelMode = {
  RESTRICTED: "RESTRICTED",
  UNRESTRICTED: "UNRESTRICTED"
};
var ChannelPrivacy = {
  PRIVATE: "PRIVATE",
  PUBLIC: "PUBLIC"
};
var InvocationType = {
  ASYNC: "ASYNC"
};
var FallbackAction = {
  ABORT: "ABORT",
  CONTINUE: "CONTINUE"
};
var PushNotificationType = {
  DEFAULT: "DEFAULT",
  VOIP: "VOIP"
};
var ChannelMessagePersistenceType = {
  NON_PERSISTENT: "NON_PERSISTENT",
  PERSISTENT: "PERSISTENT"
};
var ChannelMessageStatus = {
  DENIED: "DENIED",
  FAILED: "FAILED",
  PENDING: "PENDING",
  SENT: "SENT"
};
var ChannelMessageType = {
  CONTROL: "CONTROL",
  STANDARD: "STANDARD"
};
var MessagingDataType = {
  Channel: "Channel",
  ChannelMessage: "ChannelMessage"
};
var SortOrder = {
  ASCENDING: "ASCENDING",
  DESCENDING: "DESCENDING"
};
var SearchFieldKey = {
  MEMBERS: "MEMBERS"
};
var SearchFieldOperator = {
  EQUALS: "EQUALS",
  INCLUDES: "INCLUDES"
};
var IdentityFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING }
}), "IdentityFilterSensitiveLog");
var BatchChannelMembershipsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.InvitedBy && { InvitedBy: IdentityFilterSensitiveLog(obj.InvitedBy) },
  ...obj.Members && { Members: obj.Members.map((item) => IdentityFilterSensitiveLog(item)) }
}), "BatchChannelMembershipsFilterSensitiveLog");
var BatchCreateChannelMembershipResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.BatchChannelMemberships && {
    BatchChannelMemberships: BatchChannelMembershipsFilterSensitiveLog(obj.BatchChannelMemberships)
  }
}), "BatchCreateChannelMembershipResponseFilterSensitiveLog");
var ChannelFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.CreatedBy && { CreatedBy: IdentityFilterSensitiveLog(obj.CreatedBy) }
}), "ChannelFilterSensitiveLog");
var ChannelAssociatedWithFlowSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING }
}), "ChannelAssociatedWithFlowSummaryFilterSensitiveLog");
var ChannelBanFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) },
  ...obj.CreatedBy && { CreatedBy: IdentityFilterSensitiveLog(obj.CreatedBy) }
}), "ChannelBanFilterSensitiveLog");
var ChannelBanSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }
}), "ChannelBanSummaryFilterSensitiveLog");
var ProcessorFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING }
}), "ProcessorFilterSensitiveLog");
var ChannelFlowFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Processors && { Processors: obj.Processors.map((item) => ProcessorFilterSensitiveLog(item)) },
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING }
}), "ChannelFlowFilterSensitiveLog");
var MessageAttributeValueFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.StringValues && { StringValues: import_smithy_client.SENSITIVE_STRING }
}), "MessageAttributeValueFilterSensitiveLog");
var PushNotificationConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Title && { Title: import_smithy_client.SENSITIVE_STRING },
  ...obj.Body && { Body: import_smithy_client.SENSITIVE_STRING }
}), "PushNotificationConfigurationFilterSensitiveLog");
var ChannelMessageCallbackFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Content && { Content: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.PushNotification && {
    PushNotification: PushNotificationConfigurationFilterSensitiveLog(obj.PushNotification)
  },
  ...obj.MessageAttributes && {
    MessageAttributes: Object.entries(obj.MessageAttributes).reduce(
      (acc, [key, value]) => (acc[key] = MessageAttributeValueFilterSensitiveLog(value), acc),
      {}
    )
  },
  ...obj.ContentType && { ContentType: import_smithy_client.SENSITIVE_STRING }
}), "ChannelMessageCallbackFilterSensitiveLog");
var ChannelFlowCallbackRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelMessage && { ChannelMessage: ChannelMessageCallbackFilterSensitiveLog(obj.ChannelMessage) }
}), "ChannelFlowCallbackRequestFilterSensitiveLog");
var ChannelFlowSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Processors && { Processors: obj.Processors.map((item) => ProcessorFilterSensitiveLog(item)) }
}), "ChannelFlowSummaryFilterSensitiveLog");
var ChannelMembershipFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.InvitedBy && { InvitedBy: IdentityFilterSensitiveLog(obj.InvitedBy) },
  ...obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }
}), "ChannelMembershipFilterSensitiveLog");
var ChannelSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING }
}), "ChannelSummaryFilterSensitiveLog");
var ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelSummary && { ChannelSummary: ChannelSummaryFilterSensitiveLog(obj.ChannelSummary) }
}), "ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog");
var PushNotificationPreferencesFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FilterRule && { FilterRule: import_smithy_client.SENSITIVE_STRING }
}), "PushNotificationPreferencesFilterSensitiveLog");
var ChannelMembershipPreferencesFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.PushNotifications && {
    PushNotifications: PushNotificationPreferencesFilterSensitiveLog(obj.PushNotifications)
  }
}), "ChannelMembershipPreferencesFilterSensitiveLog");
var ChannelMembershipSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }
}), "ChannelMembershipSummaryFilterSensitiveLog");
var ChannelMessageFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Content && { Content: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.Sender && { Sender: IdentityFilterSensitiveLog(obj.Sender) },
  ...obj.MessageAttributes && {
    MessageAttributes: Object.entries(obj.MessageAttributes).reduce(
      (acc, [key, value]) => (acc[key] = MessageAttributeValueFilterSensitiveLog(value), acc),
      {}
    )
  },
  ...obj.ContentType && { ContentType: import_smithy_client.SENSITIVE_STRING }
}), "ChannelMessageFilterSensitiveLog");
var ChannelMessageSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Content && { Content: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.Sender && { Sender: IdentityFilterSensitiveLog(obj.Sender) },
  ...obj.MessageAttributes && {
    MessageAttributes: Object.entries(obj.MessageAttributes).reduce(
      (acc, [key, value]) => (acc[key] = MessageAttributeValueFilterSensitiveLog(value), acc),
      {}
    )
  },
  ...obj.ContentType && { ContentType: import_smithy_client.SENSITIVE_STRING }
}), "ChannelMessageSummaryFilterSensitiveLog");
var ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelSummary && { ChannelSummary: ChannelSummaryFilterSensitiveLog(obj.ChannelSummary) }
}), "ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog");
var ChannelModeratorFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Moderator && { Moderator: IdentityFilterSensitiveLog(obj.Moderator) },
  ...obj.CreatedBy && { CreatedBy: IdentityFilterSensitiveLog(obj.CreatedBy) }
}), "ChannelModeratorFilterSensitiveLog");
var ChannelModeratorSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Moderator && { Moderator: IdentityFilterSensitiveLog(obj.Moderator) }
}), "ChannelModeratorSummaryFilterSensitiveLog");
var TagFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Key && { Key: import_smithy_client.SENSITIVE_STRING },
  ...obj.Value && { Value: import_smithy_client.SENSITIVE_STRING }
}), "TagFilterSensitiveLog");
var CreateChannelRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.Tags && { Tags: obj.Tags.map((item) => TagFilterSensitiveLog(item)) },
  ...obj.ChannelId && { ChannelId: import_smithy_client.SENSITIVE_STRING }
}), "CreateChannelRequestFilterSensitiveLog");
var CreateChannelBanResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }
}), "CreateChannelBanResponseFilterSensitiveLog");
var CreateChannelFlowRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Processors && { Processors: obj.Processors.map((item) => ProcessorFilterSensitiveLog(item)) },
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Tags && { Tags: obj.Tags.map((item) => TagFilterSensitiveLog(item)) },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING }
}), "CreateChannelFlowRequestFilterSensitiveLog");
var CreateChannelMembershipResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }
}), "CreateChannelMembershipResponseFilterSensitiveLog");
var CreateChannelModeratorResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelModerator && { ChannelModerator: IdentityFilterSensitiveLog(obj.ChannelModerator) }
}), "CreateChannelModeratorResponseFilterSensitiveLog");
var DescribeChannelResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Channel && { Channel: ChannelFilterSensitiveLog(obj.Channel) }
}), "DescribeChannelResponseFilterSensitiveLog");
var DescribeChannelBanResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelBan && { ChannelBan: ChannelBanFilterSensitiveLog(obj.ChannelBan) }
}), "DescribeChannelBanResponseFilterSensitiveLog");
var DescribeChannelFlowResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelFlow && { ChannelFlow: ChannelFlowFilterSensitiveLog(obj.ChannelFlow) }
}), "DescribeChannelFlowResponseFilterSensitiveLog");
var DescribeChannelMembershipResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelMembership && { ChannelMembership: ChannelMembershipFilterSensitiveLog(obj.ChannelMembership) }
}), "DescribeChannelMembershipResponseFilterSensitiveLog");
var DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelMembership && {
    ChannelMembership: ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog(obj.ChannelMembership)
  }
}), "DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog");
var DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Channel && { Channel: ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog(obj.Channel) }
}), "DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog");
var DescribeChannelModeratorResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelModerator && { ChannelModerator: ChannelModeratorFilterSensitiveLog(obj.ChannelModerator) }
}), "DescribeChannelModeratorResponseFilterSensitiveLog");
var GetChannelMembershipPreferencesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) },
  ...obj.Preferences && { Preferences: ChannelMembershipPreferencesFilterSensitiveLog(obj.Preferences) }
}), "GetChannelMembershipPreferencesResponseFilterSensitiveLog");
var GetChannelMessageResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelMessage && { ChannelMessage: ChannelMessageFilterSensitiveLog(obj.ChannelMessage) }
}), "GetChannelMessageResponseFilterSensitiveLog");
var ListChannelBansRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelBansRequestFilterSensitiveLog");
var ListChannelBansResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.ChannelBans && { ChannelBans: obj.ChannelBans.map((item) => ChannelBanSummaryFilterSensitiveLog(item)) }
}), "ListChannelBansResponseFilterSensitiveLog");
var ListChannelFlowsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelFlowsRequestFilterSensitiveLog");
var ListChannelFlowsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelFlows && { ChannelFlows: obj.ChannelFlows.map((item) => ChannelFlowSummaryFilterSensitiveLog(item)) },
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelFlowsResponseFilterSensitiveLog");
var ListChannelMembershipsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelMembershipsRequestFilterSensitiveLog");
var ListChannelMembershipsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelMemberships && {
    ChannelMemberships: obj.ChannelMemberships.map((item) => ChannelMembershipSummaryFilterSensitiveLog(item))
  },
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelMembershipsResponseFilterSensitiveLog");
var ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog");
var ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChannelMemberships && {
    ChannelMemberships: obj.ChannelMemberships.map(
      (item) => ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog(item)
    )
  },
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog");
var ListChannelMessagesRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelMessagesRequestFilterSensitiveLog");
var ListChannelMessagesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.ChannelMessages && {
    ChannelMessages: obj.ChannelMessages.map((item) => ChannelMessageSummaryFilterSensitiveLog(item))
  }
}), "ListChannelMessagesResponseFilterSensitiveLog");
var ListChannelModeratorsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelModeratorsRequestFilterSensitiveLog");
var ListChannelModeratorsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.ChannelModerators && {
    ChannelModerators: obj.ChannelModerators.map((item) => ChannelModeratorSummaryFilterSensitiveLog(item))
  }
}), "ListChannelModeratorsResponseFilterSensitiveLog");
var ListChannelsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelsRequestFilterSensitiveLog");
var ListChannelsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Channels && { Channels: obj.Channels.map((item) => ChannelSummaryFilterSensitiveLog(item)) },
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelsResponseFilterSensitiveLog");
var ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog");
var ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Channels && {
    Channels: obj.Channels.map((item) => ChannelAssociatedWithFlowSummaryFilterSensitiveLog(item))
  },
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog");
var ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog");
var ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Channels && {
    Channels: obj.Channels.map((item) => ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog(item))
  },
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog");
var ListSubChannelsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListSubChannelsRequestFilterSensitiveLog");
var ListSubChannelsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "ListSubChannelsResponseFilterSensitiveLog");
var ListTagsForResourceResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Tags && { Tags: obj.Tags.map((item) => TagFilterSensitiveLog(item)) }
}), "ListTagsForResourceResponseFilterSensitiveLog");
var PutChannelMembershipPreferencesRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Preferences && { Preferences: ChannelMembershipPreferencesFilterSensitiveLog(obj.Preferences) }
}), "PutChannelMembershipPreferencesRequestFilterSensitiveLog");
var PutChannelMembershipPreferencesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) },
  ...obj.Preferences && { Preferences: ChannelMembershipPreferencesFilterSensitiveLog(obj.Preferences) }
}), "PutChannelMembershipPreferencesResponseFilterSensitiveLog");
var SearchChannelsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "SearchChannelsRequestFilterSensitiveLog");
var SearchChannelsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Channels && { Channels: obj.Channels.map((item) => ChannelSummaryFilterSensitiveLog(item)) },
  ...obj.NextToken && { NextToken: import_smithy_client.SENSITIVE_STRING }
}), "SearchChannelsResponseFilterSensitiveLog");
var SendChannelMessageRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Content && { Content: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.PushNotification && {
    PushNotification: PushNotificationConfigurationFilterSensitiveLog(obj.PushNotification)
  },
  ...obj.MessageAttributes && {
    MessageAttributes: Object.entries(obj.MessageAttributes).reduce(
      (acc, [key, value]) => (acc[key] = MessageAttributeValueFilterSensitiveLog(value), acc),
      {}
    )
  },
  ...obj.ContentType && { ContentType: import_smithy_client.SENSITIVE_STRING }
}), "SendChannelMessageRequestFilterSensitiveLog");
var TagResourceRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Tags && { Tags: obj.Tags.map((item) => TagFilterSensitiveLog(item)) }
}), "TagResourceRequestFilterSensitiveLog");
var UntagResourceRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.TagKeys && { TagKeys: import_smithy_client.SENSITIVE_STRING }
}), "UntagResourceRequestFilterSensitiveLog");
var UpdateChannelRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING }
}), "UpdateChannelRequestFilterSensitiveLog");
var UpdateChannelFlowRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Processors && { Processors: obj.Processors.map((item) => ProcessorFilterSensitiveLog(item)) },
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING }
}), "UpdateChannelFlowRequestFilterSensitiveLog");
var UpdateChannelMessageRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Content && { Content: import_smithy_client.SENSITIVE_STRING },
  ...obj.Metadata && { Metadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.ContentType && { ContentType: import_smithy_client.SENSITIVE_STRING }
}), "UpdateChannelMessageRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_AssociateChannelFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/channel-flow");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelFlowArn: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_AssociateChannelFlowCommand");
var se_BatchCreateChannelMembershipCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/memberships");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "batch-create"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MemberArns: (_) => (0, import_smithy_client._json)(_),
      SubChannelId: [],
      Type: []
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_BatchCreateChannelMembershipCommand");
var se_ChannelFlowCallbackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/channels/{ChannelArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "channel-flow-callback"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CallbackId: [true, (_) => _ ?? (0, import_uuid.v4)()],
      ChannelMessage: (_) => (0, import_smithy_client._json)(_),
      DeleteResource: []
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_ChannelFlowCallbackCommand");
var se_CreateChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AppInstanceArn: [],
      ChannelId: [],
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      ElasticChannelConfiguration: (_) => (0, import_smithy_client._json)(_),
      ExpirationSettings: (_) => (0, import_smithy_client._json)(_),
      MemberArns: (_) => (0, import_smithy_client._json)(_),
      Metadata: [],
      Mode: [],
      ModeratorArns: (_) => (0, import_smithy_client._json)(_),
      Name: [],
      Privacy: [],
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateChannelCommand");
var se_CreateChannelBanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/bans");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MemberArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateChannelBanCommand");
var se_CreateChannelFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/channel-flows");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AppInstanceArn: [],
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      Name: [],
      Processors: (_) => (0, import_smithy_client._json)(_),
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateChannelFlowCommand");
var se_CreateChannelMembershipCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/memberships");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MemberArn: [],
      SubChannelId: [],
      Type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateChannelMembershipCommand");
var se_CreateChannelModeratorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/moderators");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelModeratorArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateChannelModeratorCommand");
var se_DeleteChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteChannelCommand");
var se_DeleteChannelBanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/bans/{MemberArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MemberArn", () => input.MemberArn, "{MemberArn}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteChannelBanCommand");
var se_DeleteChannelFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/channel-flows/{ChannelFlowArn}");
  b.p("ChannelFlowArn", () => input.ChannelFlowArn, "{ChannelFlowArn}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteChannelFlowCommand");
var se_DeleteChannelMembershipCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/memberships/{MemberArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MemberArn", () => input.MemberArn, "{MemberArn}", false);
  const query = (0, import_smithy_client.map)({
    [_sci]: [, input[_SCI]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteChannelMembershipCommand");
var se_DeleteChannelMessageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/messages/{MessageId}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MessageId", () => input.MessageId, "{MessageId}", false);
  const query = (0, import_smithy_client.map)({
    [_sci]: [, input[_SCI]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteChannelMessageCommand");
var se_DeleteChannelModeratorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/moderators/{ChannelModeratorArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("ChannelModeratorArn", () => input.ChannelModeratorArn, "{ChannelModeratorArn}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteChannelModeratorCommand");
var se_DeleteMessagingStreamingConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/app-instances/{AppInstanceArn}/streaming-configurations");
  b.p("AppInstanceArn", () => input.AppInstanceArn, "{AppInstanceArn}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteMessagingStreamingConfigurationsCommand");
var se_DescribeChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeChannelCommand");
var se_DescribeChannelBanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/bans/{MemberArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MemberArn", () => input.MemberArn, "{MemberArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeChannelBanCommand");
var se_DescribeChannelFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/channel-flows/{ChannelFlowArn}");
  b.p("ChannelFlowArn", () => input.ChannelFlowArn, "{ChannelFlowArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeChannelFlowCommand");
var se_DescribeChannelMembershipCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/memberships/{MemberArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MemberArn", () => input.MemberArn, "{MemberArn}", false);
  const query = (0, import_smithy_client.map)({
    [_sci]: [, input[_SCI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeChannelMembershipCommand");
var se_DescribeChannelMembershipForAppInstanceUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  const query = (0, import_smithy_client.map)({
    [_s]: [, "app-instance-user-membership"],
    [_aiua]: [, (0, import_smithy_client.expectNonNull)(input[_AIUA], `AppInstanceUserArn`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeChannelMembershipForAppInstanceUserCommand");
var se_DescribeChannelModeratedByAppInstanceUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  const query = (0, import_smithy_client.map)({
    [_s]: [, "app-instance-user-moderated-channel"],
    [_aiua]: [, (0, import_smithy_client.expectNonNull)(input[_AIUA], `AppInstanceUserArn`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeChannelModeratedByAppInstanceUserCommand");
var se_DescribeChannelModeratorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/moderators/{ChannelModeratorArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("ChannelModeratorArn", () => input.ChannelModeratorArn, "{ChannelModeratorArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeChannelModeratorCommand");
var se_DisassociateChannelFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/channel-flow/{ChannelFlowArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("ChannelFlowArn", () => input.ChannelFlowArn, "{ChannelFlowArn}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DisassociateChannelFlowCommand");
var se_GetChannelMembershipPreferencesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/memberships/{MemberArn}/preferences");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MemberArn", () => input.MemberArn, "{MemberArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetChannelMembershipPreferencesCommand");
var se_GetChannelMessageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/messages/{MessageId}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MessageId", () => input.MessageId, "{MessageId}", false);
  const query = (0, import_smithy_client.map)({
    [_sci]: [, input[_SCI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetChannelMessageCommand");
var se_GetChannelMessageStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/messages/{MessageId}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MessageId", () => input.MessageId, "{MessageId}", false);
  const query = (0, import_smithy_client.map)({
    [_s]: [, "message-status"],
    [_sci]: [, input[_SCI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetChannelMessageStatusCommand");
var se_GetMessagingSessionEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/endpoints/messaging-session");
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMessagingSessionEndpointCommand");
var se_GetMessagingStreamingConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/app-instances/{AppInstanceArn}/streaming-configurations");
  b.p("AppInstanceArn", () => input.AppInstanceArn, "{AppInstanceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMessagingStreamingConfigurationsCommand");
var se_ListChannelBansCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/bans");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  const query = (0, import_smithy_client.map)({
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelBansCommand");
var se_ListChannelFlowsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/channel-flows");
  const query = (0, import_smithy_client.map)({
    [_aia]: [, (0, import_smithy_client.expectNonNull)(input[_AIA], `AppInstanceArn`)],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelFlowsCommand");
var se_ListChannelMembershipsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/memberships");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  const query = (0, import_smithy_client.map)({
    [_t]: [, input[_T]],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]],
    [_sci]: [, input[_SCI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelMembershipsCommand");
var se_ListChannelMembershipsForAppInstanceUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels");
  const query = (0, import_smithy_client.map)({
    [_s]: [, "app-instance-user-memberships"],
    [_aiua]: [, input[_AIUA]],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelMembershipsForAppInstanceUserCommand");
var se_ListChannelMessagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/messages");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  const query = (0, import_smithy_client.map)({
    [_so]: [, input[_SO]],
    [_nb]: [() => input.NotBefore !== void 0, () => (0, import_smithy_client.serializeDateTime)(input[_NB]).toString()],
    [_na]: [() => input.NotAfter !== void 0, () => (0, import_smithy_client.serializeDateTime)(input[_NA]).toString()],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]],
    [_sci]: [, input[_SCI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelMessagesCommand");
var se_ListChannelModeratorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/moderators");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  const query = (0, import_smithy_client.map)({
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelModeratorsCommand");
var se_ListChannelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels");
  const query = (0, import_smithy_client.map)({
    [_aia]: [, (0, import_smithy_client.expectNonNull)(input[_AIA], `AppInstanceArn`)],
    [_p]: [, input[_P]],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelsCommand");
var se_ListChannelsAssociatedWithChannelFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/channels");
  const query = (0, import_smithy_client.map)({
    [_s]: [, "channel-flow-associations"],
    [_cfa]: [, (0, import_smithy_client.expectNonNull)(input[_CFA], `ChannelFlowArn`)],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelsAssociatedWithChannelFlowCommand");
var se_ListChannelsModeratedByAppInstanceUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels");
  const query = (0, import_smithy_client.map)({
    [_s]: [, "app-instance-user-moderated-channels"],
    [_aiua]: [, input[_AIUA]],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelsModeratedByAppInstanceUserCommand");
var se_ListSubChannelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/subchannels");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  const query = (0, import_smithy_client.map)({
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListSubChannelsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_a]: [, (0, import_smithy_client.expectNonNull)(input[_RARN], `ResourceARN`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_PutChannelExpirationSettingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/expiration-settings");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ExpirationSettings: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutChannelExpirationSettingsCommand");
var se_PutChannelMembershipPreferencesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/memberships/{MemberArn}/preferences");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MemberArn", () => input.MemberArn, "{MemberArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Preferences: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutChannelMembershipPreferencesCommand");
var se_PutMessagingStreamingConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/app-instances/{AppInstanceArn}/streaming-configurations");
  b.p("AppInstanceArn", () => input.AppInstanceArn, "{AppInstanceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      StreamingConfigurations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutMessagingStreamingConfigurationsCommand");
var se_RedactChannelMessageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/messages/{MessageId}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MessageId", () => input.MessageId, "{MessageId}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "redact"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      SubChannelId: []
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_RedactChannelMessageCommand");
var se_SearchChannelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels");
  const query = (0, import_smithy_client.map)({
    [_o]: [, "search"],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Fields: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_SearchChannelsCommand");
var se_SendChannelMessageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/messages");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      Content: [],
      ContentType: [],
      MessageAttributes: (_) => (0, import_smithy_client._json)(_),
      Metadata: [],
      Persistence: [],
      PushNotification: (_) => (0, import_smithy_client._json)(_),
      SubChannelId: [],
      Target: (_) => (0, import_smithy_client._json)(_),
      Type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SendChannelMessageCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_o]: [, "tag-resource"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceARN: [],
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_o]: [, "untag-resource"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceARN: [],
      TagKeys: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Metadata: [],
      Mode: [],
      Name: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateChannelCommand");
var se_UpdateChannelFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/channel-flows/{ChannelFlowArn}");
  b.p("ChannelFlowArn", () => input.ChannelFlowArn, "{ChannelFlowArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Name: [],
      Processors: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateChannelFlowCommand");
var se_UpdateChannelMessageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/messages/{MessageId}");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  b.p("MessageId", () => input.MessageId, "{MessageId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Content: [],
      ContentType: [],
      Metadata: [],
      SubChannelId: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateChannelMessageCommand");
var se_UpdateChannelReadMarkerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xacb]: input[_CB]
  });
  b.bp("/channels/{ChannelArn}/readMarker");
  b.p("ChannelArn", () => input.ChannelArn, "{ChannelArn}", false);
  let body;
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateChannelReadMarkerCommand");
var de_AssociateChannelFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_AssociateChannelFlowCommand");
var de_BatchCreateChannelMembershipCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BatchChannelMemberships: import_smithy_client._json,
    Errors: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchCreateChannelMembershipCommand");
var de_ChannelFlowCallbackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CallbackId: import_smithy_client.expectString,
    ChannelArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ChannelFlowCallbackCommand");
var de_CreateChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateChannelCommand");
var de_CreateChannelBanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    Member: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateChannelBanCommand");
var de_CreateChannelFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelFlowArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateChannelFlowCommand");
var de_CreateChannelMembershipCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    Member: import_smithy_client._json,
    SubChannelId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateChannelMembershipCommand");
var de_CreateChannelModeratorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    ChannelModerator: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateChannelModeratorCommand");
var de_DeleteChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteChannelCommand");
var de_DeleteChannelBanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteChannelBanCommand");
var de_DeleteChannelFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteChannelFlowCommand");
var de_DeleteChannelMembershipCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteChannelMembershipCommand");
var de_DeleteChannelMessageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteChannelMessageCommand");
var de_DeleteChannelModeratorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteChannelModeratorCommand");
var de_DeleteMessagingStreamingConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteMessagingStreamingConfigurationsCommand");
var de_DescribeChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Channel: (_) => de_Channel(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeChannelCommand");
var de_DescribeChannelBanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelBan: (_) => de_ChannelBan(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeChannelBanCommand");
var de_DescribeChannelFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelFlow: (_) => de_ChannelFlow(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeChannelFlowCommand");
var de_DescribeChannelMembershipCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelMembership: (_) => de_ChannelMembership(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeChannelMembershipCommand");
var de_DescribeChannelMembershipForAppInstanceUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelMembership: (_) => de_ChannelMembershipForAppInstanceUserSummary(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeChannelMembershipForAppInstanceUserCommand");
var de_DescribeChannelModeratedByAppInstanceUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Channel: (_) => de_ChannelModeratedByAppInstanceUserSummary(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeChannelModeratedByAppInstanceUserCommand");
var de_DescribeChannelModeratorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelModerator: (_) => de_ChannelModerator(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeChannelModeratorCommand");
var de_DisassociateChannelFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisassociateChannelFlowCommand");
var de_GetChannelMembershipPreferencesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    Member: import_smithy_client._json,
    Preferences: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetChannelMembershipPreferencesCommand");
var de_GetChannelMessageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelMessage: (_) => de_ChannelMessage(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetChannelMessageCommand");
var de_GetChannelMessageStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Status: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetChannelMessageStatusCommand");
var de_GetMessagingSessionEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Endpoint: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMessagingSessionEndpointCommand");
var de_GetMessagingStreamingConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    StreamingConfigurations: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMessagingStreamingConfigurationsCommand");
var de_ListChannelBansCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    ChannelBans: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelBansCommand");
var de_ListChannelFlowsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelFlows: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelFlowsCommand");
var de_ListChannelMembershipsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    ChannelMemberships: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelMembershipsCommand");
var de_ListChannelMembershipsForAppInstanceUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelMemberships: (_) => de_ChannelMembershipForAppInstanceUserSummaryList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelMembershipsForAppInstanceUserCommand");
var de_ListChannelMessagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    ChannelMessages: (_) => de_ChannelMessageSummaryList(_, context),
    NextToken: import_smithy_client.expectString,
    SubChannelId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelMessagesCommand");
var de_ListChannelModeratorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    ChannelModerators: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelModeratorsCommand");
var de_ListChannelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Channels: (_) => de_ChannelSummaryList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelsCommand");
var de_ListChannelsAssociatedWithChannelFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Channels: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelsAssociatedWithChannelFlowCommand");
var de_ListChannelsModeratedByAppInstanceUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Channels: (_) => de_ChannelModeratedByAppInstanceUserSummaryList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelsModeratedByAppInstanceUserCommand");
var de_ListSubChannelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    NextToken: import_smithy_client.expectString,
    SubChannels: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSubChannelsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_PutChannelExpirationSettingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    ExpirationSettings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutChannelExpirationSettingsCommand");
var de_PutChannelMembershipPreferencesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    Member: import_smithy_client._json,
    Preferences: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutChannelMembershipPreferencesCommand");
var de_PutMessagingStreamingConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    StreamingConfigurations: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutMessagingStreamingConfigurationsCommand");
var de_RedactChannelMessageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    MessageId: import_smithy_client.expectString,
    SubChannelId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RedactChannelMessageCommand");
var de_SearchChannelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Channels: (_) => de_ChannelSummaryList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SearchChannelsCommand");
var de_SendChannelMessageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    MessageId: import_smithy_client.expectString,
    Status: import_smithy_client._json,
    SubChannelId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SendChannelMessageCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateChannelCommand");
var de_UpdateChannelFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelFlowArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateChannelFlowCommand");
var de_UpdateChannelMessageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString,
    MessageId: import_smithy_client.expectString,
    Status: import_smithy_client._json,
    SubChannelId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateChannelMessageCommand");
var de_UpdateChannelReadMarkerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateChannelReadMarkerCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "BadRequestException":
    case "com.amazonaws.chimesdkmessaging#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.chimesdkmessaging#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ForbiddenException":
    case "com.amazonaws.chimesdkmessaging#ForbiddenException":
      throw await de_ForbiddenExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.chimesdkmessaging#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    case "ServiceFailureException":
    case "com.amazonaws.chimesdkmessaging#ServiceFailureException":
      throw await de_ServiceFailureExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.chimesdkmessaging#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    case "ThrottledClientException":
    case "com.amazonaws.chimesdkmessaging#ThrottledClientException":
      throw await de_ThrottledClientExceptionRes(parsedOutput, context);
    case "UnauthorizedClientException":
    case "com.amazonaws.chimesdkmessaging#UnauthorizedClientException":
      throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);
    case "ResourceLimitExceededException":
    case "com.amazonaws.chimesdkmessaging#ResourceLimitExceededException":
      throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ChimeSDKMessagingServiceException);
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BadRequestExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_ForbiddenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ForbiddenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ForbiddenExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_ResourceLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceLimitExceededExceptionRes");
var de_ServiceFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceFailureExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceUnavailableExceptionRes");
var de_ThrottledClientExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottledClientException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottledClientExceptionRes");
var de_UnauthorizedClientExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new UnauthorizedClientException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnauthorizedClientExceptionRes");
var de_AppInstanceUserMembershipSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ReadMarkerTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    SubChannelId: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_AppInstanceUserMembershipSummary");
var de_Channel = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelArn: import_smithy_client.expectString,
    ChannelFlowArn: import_smithy_client.expectString,
    CreatedBy: import_smithy_client._json,
    CreatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ElasticChannelConfiguration: import_smithy_client._json,
    ExpirationSettings: import_smithy_client._json,
    LastMessageTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastUpdatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Metadata: import_smithy_client.expectString,
    Mode: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    Privacy: import_smithy_client.expectString
  });
}, "de_Channel");
var de_ChannelBan = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelArn: import_smithy_client.expectString,
    CreatedBy: import_smithy_client._json,
    CreatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Member: import_smithy_client._json
  });
}, "de_ChannelBan");
var de_ChannelFlow = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelFlowArn: import_smithy_client.expectString,
    CreatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastUpdatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    Processors: import_smithy_client._json
  });
}, "de_ChannelFlow");
var de_ChannelMembership = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelArn: import_smithy_client.expectString,
    CreatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    InvitedBy: import_smithy_client._json,
    LastUpdatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Member: import_smithy_client._json,
    SubChannelId: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_ChannelMembership");
var de_ChannelMembershipForAppInstanceUserSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AppInstanceUserMembershipSummary: (_) => de_AppInstanceUserMembershipSummary(_, context),
    ChannelSummary: (_) => de_ChannelSummary(_, context)
  });
}, "de_ChannelMembershipForAppInstanceUserSummary");
var de_ChannelMembershipForAppInstanceUserSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ChannelMembershipForAppInstanceUserSummary(entry, context);
  });
  return retVal;
}, "de_ChannelMembershipForAppInstanceUserSummaryList");
var de_ChannelMessage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelArn: import_smithy_client.expectString,
    Content: import_smithy_client.expectString,
    ContentType: import_smithy_client.expectString,
    CreatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastEditedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastUpdatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    MessageAttributes: import_smithy_client._json,
    MessageId: import_smithy_client.expectString,
    Metadata: import_smithy_client.expectString,
    Persistence: import_smithy_client.expectString,
    Redacted: import_smithy_client.expectBoolean,
    Sender: import_smithy_client._json,
    Status: import_smithy_client._json,
    SubChannelId: import_smithy_client.expectString,
    Target: import_smithy_client._json,
    Type: import_smithy_client.expectString
  });
}, "de_ChannelMessage");
var de_ChannelMessageSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Content: import_smithy_client.expectString,
    ContentType: import_smithy_client.expectString,
    CreatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastEditedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastUpdatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    MessageAttributes: import_smithy_client._json,
    MessageId: import_smithy_client.expectString,
    Metadata: import_smithy_client.expectString,
    Redacted: import_smithy_client.expectBoolean,
    Sender: import_smithy_client._json,
    Status: import_smithy_client._json,
    Target: import_smithy_client._json,
    Type: import_smithy_client.expectString
  });
}, "de_ChannelMessageSummary");
var de_ChannelMessageSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ChannelMessageSummary(entry, context);
  });
  return retVal;
}, "de_ChannelMessageSummaryList");
var de_ChannelModeratedByAppInstanceUserSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelSummary: (_) => de_ChannelSummary(_, context)
  });
}, "de_ChannelModeratedByAppInstanceUserSummary");
var de_ChannelModeratedByAppInstanceUserSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ChannelModeratedByAppInstanceUserSummary(entry, context);
  });
  return retVal;
}, "de_ChannelModeratedByAppInstanceUserSummaryList");
var de_ChannelModerator = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelArn: import_smithy_client.expectString,
    CreatedBy: import_smithy_client._json,
    CreatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Moderator: import_smithy_client._json
  });
}, "de_ChannelModerator");
var de_ChannelSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelArn: import_smithy_client.expectString,
    LastMessageTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Metadata: import_smithy_client.expectString,
    Mode: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    Privacy: import_smithy_client.expectString
  });
}, "de_ChannelSummary");
var de_ChannelSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ChannelSummary(entry, context);
  });
  return retVal;
}, "de_ChannelSummaryList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _AIA = "AppInstanceArn";
var _AIUA = "AppInstanceUserArn";
var _CB = "ChimeBearer";
var _CFA = "ChannelFlowArn";
var _MR = "MaxResults";
var _NA = "NotAfter";
var _NB = "NotBefore";
var _NT = "NextToken";
var _P = "Privacy";
var _RARN = "ResourceARN";
var _SCI = "SubChannelId";
var _SO = "SortOrder";
var _T = "Type";
var _a = "arn";
var _aia = "app-instance-arn";
var _aiua = "app-instance-user-arn";
var _cfa = "channel-flow-arn";
var _mr = "max-results";
var _na = "not-after";
var _nb = "not-before";
var _nt = "next-token";
var _o = "operation";
var _p = "privacy";
var _s = "scope";
var _sci = "sub-channel-id";
var _so = "sort-order";
var _t = "type";
var _xacb = "x-amz-chime-bearer";

// src/commands/AssociateChannelFlowCommand.ts
var AssociateChannelFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "AssociateChannelFlow", {}).n("ChimeSDKMessagingClient", "AssociateChannelFlowCommand").f(void 0, void 0).ser(se_AssociateChannelFlowCommand).de(de_AssociateChannelFlowCommand).build() {
  static {
    __name(this, "AssociateChannelFlowCommand");
  }
};

// src/commands/BatchCreateChannelMembershipCommand.ts



var BatchCreateChannelMembershipCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "BatchCreateChannelMembership", {}).n("ChimeSDKMessagingClient", "BatchCreateChannelMembershipCommand").f(void 0, BatchCreateChannelMembershipResponseFilterSensitiveLog).ser(se_BatchCreateChannelMembershipCommand).de(de_BatchCreateChannelMembershipCommand).build() {
  static {
    __name(this, "BatchCreateChannelMembershipCommand");
  }
};

// src/commands/ChannelFlowCallbackCommand.ts



var ChannelFlowCallbackCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ChannelFlowCallback", {}).n("ChimeSDKMessagingClient", "ChannelFlowCallbackCommand").f(ChannelFlowCallbackRequestFilterSensitiveLog, void 0).ser(se_ChannelFlowCallbackCommand).de(de_ChannelFlowCallbackCommand).build() {
  static {
    __name(this, "ChannelFlowCallbackCommand");
  }
};

// src/commands/CreateChannelBanCommand.ts



var CreateChannelBanCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "CreateChannelBan", {}).n("ChimeSDKMessagingClient", "CreateChannelBanCommand").f(void 0, CreateChannelBanResponseFilterSensitiveLog).ser(se_CreateChannelBanCommand).de(de_CreateChannelBanCommand).build() {
  static {
    __name(this, "CreateChannelBanCommand");
  }
};

// src/commands/CreateChannelCommand.ts



var CreateChannelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "CreateChannel", {}).n("ChimeSDKMessagingClient", "CreateChannelCommand").f(CreateChannelRequestFilterSensitiveLog, void 0).ser(se_CreateChannelCommand).de(de_CreateChannelCommand).build() {
  static {
    __name(this, "CreateChannelCommand");
  }
};

// src/commands/CreateChannelFlowCommand.ts



var CreateChannelFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "CreateChannelFlow", {}).n("ChimeSDKMessagingClient", "CreateChannelFlowCommand").f(CreateChannelFlowRequestFilterSensitiveLog, void 0).ser(se_CreateChannelFlowCommand).de(de_CreateChannelFlowCommand).build() {
  static {
    __name(this, "CreateChannelFlowCommand");
  }
};

// src/commands/CreateChannelMembershipCommand.ts



var CreateChannelMembershipCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "CreateChannelMembership", {}).n("ChimeSDKMessagingClient", "CreateChannelMembershipCommand").f(void 0, CreateChannelMembershipResponseFilterSensitiveLog).ser(se_CreateChannelMembershipCommand).de(de_CreateChannelMembershipCommand).build() {
  static {
    __name(this, "CreateChannelMembershipCommand");
  }
};

// src/commands/CreateChannelModeratorCommand.ts



var CreateChannelModeratorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "CreateChannelModerator", {}).n("ChimeSDKMessagingClient", "CreateChannelModeratorCommand").f(void 0, CreateChannelModeratorResponseFilterSensitiveLog).ser(se_CreateChannelModeratorCommand).de(de_CreateChannelModeratorCommand).build() {
  static {
    __name(this, "CreateChannelModeratorCommand");
  }
};

// src/commands/DeleteChannelBanCommand.ts



var DeleteChannelBanCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DeleteChannelBan", {}).n("ChimeSDKMessagingClient", "DeleteChannelBanCommand").f(void 0, void 0).ser(se_DeleteChannelBanCommand).de(de_DeleteChannelBanCommand).build() {
  static {
    __name(this, "DeleteChannelBanCommand");
  }
};

// src/commands/DeleteChannelCommand.ts



var DeleteChannelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DeleteChannel", {}).n("ChimeSDKMessagingClient", "DeleteChannelCommand").f(void 0, void 0).ser(se_DeleteChannelCommand).de(de_DeleteChannelCommand).build() {
  static {
    __name(this, "DeleteChannelCommand");
  }
};

// src/commands/DeleteChannelFlowCommand.ts



var DeleteChannelFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DeleteChannelFlow", {}).n("ChimeSDKMessagingClient", "DeleteChannelFlowCommand").f(void 0, void 0).ser(se_DeleteChannelFlowCommand).de(de_DeleteChannelFlowCommand).build() {
  static {
    __name(this, "DeleteChannelFlowCommand");
  }
};

// src/commands/DeleteChannelMembershipCommand.ts



var DeleteChannelMembershipCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DeleteChannelMembership", {}).n("ChimeSDKMessagingClient", "DeleteChannelMembershipCommand").f(void 0, void 0).ser(se_DeleteChannelMembershipCommand).de(de_DeleteChannelMembershipCommand).build() {
  static {
    __name(this, "DeleteChannelMembershipCommand");
  }
};

// src/commands/DeleteChannelMessageCommand.ts



var DeleteChannelMessageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DeleteChannelMessage", {}).n("ChimeSDKMessagingClient", "DeleteChannelMessageCommand").f(void 0, void 0).ser(se_DeleteChannelMessageCommand).de(de_DeleteChannelMessageCommand).build() {
  static {
    __name(this, "DeleteChannelMessageCommand");
  }
};

// src/commands/DeleteChannelModeratorCommand.ts



var DeleteChannelModeratorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DeleteChannelModerator", {}).n("ChimeSDKMessagingClient", "DeleteChannelModeratorCommand").f(void 0, void 0).ser(se_DeleteChannelModeratorCommand).de(de_DeleteChannelModeratorCommand).build() {
  static {
    __name(this, "DeleteChannelModeratorCommand");
  }
};

// src/commands/DeleteMessagingStreamingConfigurationsCommand.ts



var DeleteMessagingStreamingConfigurationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DeleteMessagingStreamingConfigurations", {}).n("ChimeSDKMessagingClient", "DeleteMessagingStreamingConfigurationsCommand").f(void 0, void 0).ser(se_DeleteMessagingStreamingConfigurationsCommand).de(de_DeleteMessagingStreamingConfigurationsCommand).build() {
  static {
    __name(this, "DeleteMessagingStreamingConfigurationsCommand");
  }
};

// src/commands/DescribeChannelBanCommand.ts



var DescribeChannelBanCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DescribeChannelBan", {}).n("ChimeSDKMessagingClient", "DescribeChannelBanCommand").f(void 0, DescribeChannelBanResponseFilterSensitiveLog).ser(se_DescribeChannelBanCommand).de(de_DescribeChannelBanCommand).build() {
  static {
    __name(this, "DescribeChannelBanCommand");
  }
};

// src/commands/DescribeChannelCommand.ts



var DescribeChannelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DescribeChannel", {}).n("ChimeSDKMessagingClient", "DescribeChannelCommand").f(void 0, DescribeChannelResponseFilterSensitiveLog).ser(se_DescribeChannelCommand).de(de_DescribeChannelCommand).build() {
  static {
    __name(this, "DescribeChannelCommand");
  }
};

// src/commands/DescribeChannelFlowCommand.ts



var DescribeChannelFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DescribeChannelFlow", {}).n("ChimeSDKMessagingClient", "DescribeChannelFlowCommand").f(void 0, DescribeChannelFlowResponseFilterSensitiveLog).ser(se_DescribeChannelFlowCommand).de(de_DescribeChannelFlowCommand).build() {
  static {
    __name(this, "DescribeChannelFlowCommand");
  }
};

// src/commands/DescribeChannelMembershipCommand.ts



var DescribeChannelMembershipCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DescribeChannelMembership", {}).n("ChimeSDKMessagingClient", "DescribeChannelMembershipCommand").f(void 0, DescribeChannelMembershipResponseFilterSensitiveLog).ser(se_DescribeChannelMembershipCommand).de(de_DescribeChannelMembershipCommand).build() {
  static {
    __name(this, "DescribeChannelMembershipCommand");
  }
};

// src/commands/DescribeChannelMembershipForAppInstanceUserCommand.ts



var DescribeChannelMembershipForAppInstanceUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DescribeChannelMembershipForAppInstanceUser", {}).n("ChimeSDKMessagingClient", "DescribeChannelMembershipForAppInstanceUserCommand").f(void 0, DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog).ser(se_DescribeChannelMembershipForAppInstanceUserCommand).de(de_DescribeChannelMembershipForAppInstanceUserCommand).build() {
  static {
    __name(this, "DescribeChannelMembershipForAppInstanceUserCommand");
  }
};

// src/commands/DescribeChannelModeratedByAppInstanceUserCommand.ts



var DescribeChannelModeratedByAppInstanceUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DescribeChannelModeratedByAppInstanceUser", {}).n("ChimeSDKMessagingClient", "DescribeChannelModeratedByAppInstanceUserCommand").f(void 0, DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog).ser(se_DescribeChannelModeratedByAppInstanceUserCommand).de(de_DescribeChannelModeratedByAppInstanceUserCommand).build() {
  static {
    __name(this, "DescribeChannelModeratedByAppInstanceUserCommand");
  }
};

// src/commands/DescribeChannelModeratorCommand.ts



var DescribeChannelModeratorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DescribeChannelModerator", {}).n("ChimeSDKMessagingClient", "DescribeChannelModeratorCommand").f(void 0, DescribeChannelModeratorResponseFilterSensitiveLog).ser(se_DescribeChannelModeratorCommand).de(de_DescribeChannelModeratorCommand).build() {
  static {
    __name(this, "DescribeChannelModeratorCommand");
  }
};

// src/commands/DisassociateChannelFlowCommand.ts



var DisassociateChannelFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "DisassociateChannelFlow", {}).n("ChimeSDKMessagingClient", "DisassociateChannelFlowCommand").f(void 0, void 0).ser(se_DisassociateChannelFlowCommand).de(de_DisassociateChannelFlowCommand).build() {
  static {
    __name(this, "DisassociateChannelFlowCommand");
  }
};

// src/commands/GetChannelMembershipPreferencesCommand.ts



var GetChannelMembershipPreferencesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "GetChannelMembershipPreferences", {}).n("ChimeSDKMessagingClient", "GetChannelMembershipPreferencesCommand").f(void 0, GetChannelMembershipPreferencesResponseFilterSensitiveLog).ser(se_GetChannelMembershipPreferencesCommand).de(de_GetChannelMembershipPreferencesCommand).build() {
  static {
    __name(this, "GetChannelMembershipPreferencesCommand");
  }
};

// src/commands/GetChannelMessageCommand.ts



var GetChannelMessageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "GetChannelMessage", {}).n("ChimeSDKMessagingClient", "GetChannelMessageCommand").f(void 0, GetChannelMessageResponseFilterSensitiveLog).ser(se_GetChannelMessageCommand).de(de_GetChannelMessageCommand).build() {
  static {
    __name(this, "GetChannelMessageCommand");
  }
};

// src/commands/GetChannelMessageStatusCommand.ts



var GetChannelMessageStatusCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "GetChannelMessageStatus", {}).n("ChimeSDKMessagingClient", "GetChannelMessageStatusCommand").f(void 0, void 0).ser(se_GetChannelMessageStatusCommand).de(de_GetChannelMessageStatusCommand).build() {
  static {
    __name(this, "GetChannelMessageStatusCommand");
  }
};

// src/commands/GetMessagingSessionEndpointCommand.ts



var GetMessagingSessionEndpointCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "GetMessagingSessionEndpoint", {}).n("ChimeSDKMessagingClient", "GetMessagingSessionEndpointCommand").f(void 0, void 0).ser(se_GetMessagingSessionEndpointCommand).de(de_GetMessagingSessionEndpointCommand).build() {
  static {
    __name(this, "GetMessagingSessionEndpointCommand");
  }
};

// src/commands/GetMessagingStreamingConfigurationsCommand.ts



var GetMessagingStreamingConfigurationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "GetMessagingStreamingConfigurations", {}).n("ChimeSDKMessagingClient", "GetMessagingStreamingConfigurationsCommand").f(void 0, void 0).ser(se_GetMessagingStreamingConfigurationsCommand).de(de_GetMessagingStreamingConfigurationsCommand).build() {
  static {
    __name(this, "GetMessagingStreamingConfigurationsCommand");
  }
};

// src/commands/ListChannelBansCommand.ts



var ListChannelBansCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListChannelBans", {}).n("ChimeSDKMessagingClient", "ListChannelBansCommand").f(ListChannelBansRequestFilterSensitiveLog, ListChannelBansResponseFilterSensitiveLog).ser(se_ListChannelBansCommand).de(de_ListChannelBansCommand).build() {
  static {
    __name(this, "ListChannelBansCommand");
  }
};

// src/commands/ListChannelFlowsCommand.ts



var ListChannelFlowsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListChannelFlows", {}).n("ChimeSDKMessagingClient", "ListChannelFlowsCommand").f(ListChannelFlowsRequestFilterSensitiveLog, ListChannelFlowsResponseFilterSensitiveLog).ser(se_ListChannelFlowsCommand).de(de_ListChannelFlowsCommand).build() {
  static {
    __name(this, "ListChannelFlowsCommand");
  }
};

// src/commands/ListChannelMembershipsCommand.ts



var ListChannelMembershipsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListChannelMemberships", {}).n("ChimeSDKMessagingClient", "ListChannelMembershipsCommand").f(ListChannelMembershipsRequestFilterSensitiveLog, ListChannelMembershipsResponseFilterSensitiveLog).ser(se_ListChannelMembershipsCommand).de(de_ListChannelMembershipsCommand).build() {
  static {
    __name(this, "ListChannelMembershipsCommand");
  }
};

// src/commands/ListChannelMembershipsForAppInstanceUserCommand.ts



var ListChannelMembershipsForAppInstanceUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListChannelMembershipsForAppInstanceUser", {}).n("ChimeSDKMessagingClient", "ListChannelMembershipsForAppInstanceUserCommand").f(
  ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog,
  ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog
).ser(se_ListChannelMembershipsForAppInstanceUserCommand).de(de_ListChannelMembershipsForAppInstanceUserCommand).build() {
  static {
    __name(this, "ListChannelMembershipsForAppInstanceUserCommand");
  }
};

// src/commands/ListChannelMessagesCommand.ts



var ListChannelMessagesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListChannelMessages", {}).n("ChimeSDKMessagingClient", "ListChannelMessagesCommand").f(ListChannelMessagesRequestFilterSensitiveLog, ListChannelMessagesResponseFilterSensitiveLog).ser(se_ListChannelMessagesCommand).de(de_ListChannelMessagesCommand).build() {
  static {
    __name(this, "ListChannelMessagesCommand");
  }
};

// src/commands/ListChannelModeratorsCommand.ts



var ListChannelModeratorsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListChannelModerators", {}).n("ChimeSDKMessagingClient", "ListChannelModeratorsCommand").f(ListChannelModeratorsRequestFilterSensitiveLog, ListChannelModeratorsResponseFilterSensitiveLog).ser(se_ListChannelModeratorsCommand).de(de_ListChannelModeratorsCommand).build() {
  static {
    __name(this, "ListChannelModeratorsCommand");
  }
};

// src/commands/ListChannelsAssociatedWithChannelFlowCommand.ts



var ListChannelsAssociatedWithChannelFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListChannelsAssociatedWithChannelFlow", {}).n("ChimeSDKMessagingClient", "ListChannelsAssociatedWithChannelFlowCommand").f(
  ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog,
  ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog
).ser(se_ListChannelsAssociatedWithChannelFlowCommand).de(de_ListChannelsAssociatedWithChannelFlowCommand).build() {
  static {
    __name(this, "ListChannelsAssociatedWithChannelFlowCommand");
  }
};

// src/commands/ListChannelsCommand.ts



var ListChannelsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListChannels", {}).n("ChimeSDKMessagingClient", "ListChannelsCommand").f(ListChannelsRequestFilterSensitiveLog, ListChannelsResponseFilterSensitiveLog).ser(se_ListChannelsCommand).de(de_ListChannelsCommand).build() {
  static {
    __name(this, "ListChannelsCommand");
  }
};

// src/commands/ListChannelsModeratedByAppInstanceUserCommand.ts



var ListChannelsModeratedByAppInstanceUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListChannelsModeratedByAppInstanceUser", {}).n("ChimeSDKMessagingClient", "ListChannelsModeratedByAppInstanceUserCommand").f(
  ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog,
  ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog
).ser(se_ListChannelsModeratedByAppInstanceUserCommand).de(de_ListChannelsModeratedByAppInstanceUserCommand).build() {
  static {
    __name(this, "ListChannelsModeratedByAppInstanceUserCommand");
  }
};

// src/commands/ListSubChannelsCommand.ts



var ListSubChannelsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListSubChannels", {}).n("ChimeSDKMessagingClient", "ListSubChannelsCommand").f(ListSubChannelsRequestFilterSensitiveLog, ListSubChannelsResponseFilterSensitiveLog).ser(se_ListSubChannelsCommand).de(de_ListSubChannelsCommand).build() {
  static {
    __name(this, "ListSubChannelsCommand");
  }
};

// src/commands/ListTagsForResourceCommand.ts



var ListTagsForResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "ListTagsForResource", {}).n("ChimeSDKMessagingClient", "ListTagsForResourceCommand").f(void 0, ListTagsForResourceResponseFilterSensitiveLog).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
  static {
    __name(this, "ListTagsForResourceCommand");
  }
};

// src/commands/PutChannelExpirationSettingsCommand.ts



var PutChannelExpirationSettingsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "PutChannelExpirationSettings", {}).n("ChimeSDKMessagingClient", "PutChannelExpirationSettingsCommand").f(void 0, void 0).ser(se_PutChannelExpirationSettingsCommand).de(de_PutChannelExpirationSettingsCommand).build() {
  static {
    __name(this, "PutChannelExpirationSettingsCommand");
  }
};

// src/commands/PutChannelMembershipPreferencesCommand.ts



var PutChannelMembershipPreferencesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "PutChannelMembershipPreferences", {}).n("ChimeSDKMessagingClient", "PutChannelMembershipPreferencesCommand").f(
  PutChannelMembershipPreferencesRequestFilterSensitiveLog,
  PutChannelMembershipPreferencesResponseFilterSensitiveLog
).ser(se_PutChannelMembershipPreferencesCommand).de(de_PutChannelMembershipPreferencesCommand).build() {
  static {
    __name(this, "PutChannelMembershipPreferencesCommand");
  }
};

// src/commands/PutMessagingStreamingConfigurationsCommand.ts



var PutMessagingStreamingConfigurationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "PutMessagingStreamingConfigurations", {}).n("ChimeSDKMessagingClient", "PutMessagingStreamingConfigurationsCommand").f(void 0, void 0).ser(se_PutMessagingStreamingConfigurationsCommand).de(de_PutMessagingStreamingConfigurationsCommand).build() {
  static {
    __name(this, "PutMessagingStreamingConfigurationsCommand");
  }
};

// src/commands/RedactChannelMessageCommand.ts



var RedactChannelMessageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "RedactChannelMessage", {}).n("ChimeSDKMessagingClient", "RedactChannelMessageCommand").f(void 0, void 0).ser(se_RedactChannelMessageCommand).de(de_RedactChannelMessageCommand).build() {
  static {
    __name(this, "RedactChannelMessageCommand");
  }
};

// src/commands/SearchChannelsCommand.ts



var SearchChannelsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "SearchChannels", {}).n("ChimeSDKMessagingClient", "SearchChannelsCommand").f(SearchChannelsRequestFilterSensitiveLog, SearchChannelsResponseFilterSensitiveLog).ser(se_SearchChannelsCommand).de(de_SearchChannelsCommand).build() {
  static {
    __name(this, "SearchChannelsCommand");
  }
};

// src/commands/SendChannelMessageCommand.ts



var SendChannelMessageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "SendChannelMessage", {}).n("ChimeSDKMessagingClient", "SendChannelMessageCommand").f(SendChannelMessageRequestFilterSensitiveLog, void 0).ser(se_SendChannelMessageCommand).de(de_SendChannelMessageCommand).build() {
  static {
    __name(this, "SendChannelMessageCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "TagResource", {}).n("ChimeSDKMessagingClient", "TagResourceCommand").f(TagResourceRequestFilterSensitiveLog, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "UntagResource", {}).n("ChimeSDKMessagingClient", "UntagResourceCommand").f(UntagResourceRequestFilterSensitiveLog, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UpdateChannelCommand.ts



var UpdateChannelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "UpdateChannel", {}).n("ChimeSDKMessagingClient", "UpdateChannelCommand").f(UpdateChannelRequestFilterSensitiveLog, void 0).ser(se_UpdateChannelCommand).de(de_UpdateChannelCommand).build() {
  static {
    __name(this, "UpdateChannelCommand");
  }
};

// src/commands/UpdateChannelFlowCommand.ts



var UpdateChannelFlowCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "UpdateChannelFlow", {}).n("ChimeSDKMessagingClient", "UpdateChannelFlowCommand").f(UpdateChannelFlowRequestFilterSensitiveLog, void 0).ser(se_UpdateChannelFlowCommand).de(de_UpdateChannelFlowCommand).build() {
  static {
    __name(this, "UpdateChannelFlowCommand");
  }
};

// src/commands/UpdateChannelMessageCommand.ts



var UpdateChannelMessageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "UpdateChannelMessage", {}).n("ChimeSDKMessagingClient", "UpdateChannelMessageCommand").f(UpdateChannelMessageRequestFilterSensitiveLog, void 0).ser(se_UpdateChannelMessageCommand).de(de_UpdateChannelMessageCommand).build() {
  static {
    __name(this, "UpdateChannelMessageCommand");
  }
};

// src/commands/UpdateChannelReadMarkerCommand.ts



var UpdateChannelReadMarkerCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMessagingService", "UpdateChannelReadMarker", {}).n("ChimeSDKMessagingClient", "UpdateChannelReadMarkerCommand").f(void 0, void 0).ser(se_UpdateChannelReadMarkerCommand).de(de_UpdateChannelReadMarkerCommand).build() {
  static {
    __name(this, "UpdateChannelReadMarkerCommand");
  }
};

// src/ChimeSDKMessaging.ts
var commands = {
  AssociateChannelFlowCommand,
  BatchCreateChannelMembershipCommand,
  ChannelFlowCallbackCommand,
  CreateChannelCommand,
  CreateChannelBanCommand,
  CreateChannelFlowCommand,
  CreateChannelMembershipCommand,
  CreateChannelModeratorCommand,
  DeleteChannelCommand,
  DeleteChannelBanCommand,
  DeleteChannelFlowCommand,
  DeleteChannelMembershipCommand,
  DeleteChannelMessageCommand,
  DeleteChannelModeratorCommand,
  DeleteMessagingStreamingConfigurationsCommand,
  DescribeChannelCommand,
  DescribeChannelBanCommand,
  DescribeChannelFlowCommand,
  DescribeChannelMembershipCommand,
  DescribeChannelMembershipForAppInstanceUserCommand,
  DescribeChannelModeratedByAppInstanceUserCommand,
  DescribeChannelModeratorCommand,
  DisassociateChannelFlowCommand,
  GetChannelMembershipPreferencesCommand,
  GetChannelMessageCommand,
  GetChannelMessageStatusCommand,
  GetMessagingSessionEndpointCommand,
  GetMessagingStreamingConfigurationsCommand,
  ListChannelBansCommand,
  ListChannelFlowsCommand,
  ListChannelMembershipsCommand,
  ListChannelMembershipsForAppInstanceUserCommand,
  ListChannelMessagesCommand,
  ListChannelModeratorsCommand,
  ListChannelsCommand,
  ListChannelsAssociatedWithChannelFlowCommand,
  ListChannelsModeratedByAppInstanceUserCommand,
  ListSubChannelsCommand,
  ListTagsForResourceCommand,
  PutChannelExpirationSettingsCommand,
  PutChannelMembershipPreferencesCommand,
  PutMessagingStreamingConfigurationsCommand,
  RedactChannelMessageCommand,
  SearchChannelsCommand,
  SendChannelMessageCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateChannelCommand,
  UpdateChannelFlowCommand,
  UpdateChannelMessageCommand,
  UpdateChannelReadMarkerCommand
};
var ChimeSDKMessaging = class extends ChimeSDKMessagingClient {
  static {
    __name(this, "ChimeSDKMessaging");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, ChimeSDKMessaging);

// src/pagination/ListChannelBansPaginator.ts

var paginateListChannelBans = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListChannelBansCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListChannelFlowsPaginator.ts

var paginateListChannelFlows = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListChannelFlowsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListChannelMembershipsForAppInstanceUserPaginator.ts

var paginateListChannelMembershipsForAppInstanceUser = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListChannelMembershipsForAppInstanceUserCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListChannelMembershipsPaginator.ts

var paginateListChannelMemberships = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListChannelMembershipsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListChannelMessagesPaginator.ts

var paginateListChannelMessages = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListChannelMessagesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListChannelModeratorsPaginator.ts

var paginateListChannelModerators = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListChannelModeratorsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListChannelsAssociatedWithChannelFlowPaginator.ts

var paginateListChannelsAssociatedWithChannelFlow = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListChannelsAssociatedWithChannelFlowCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListChannelsModeratedByAppInstanceUserPaginator.ts

var paginateListChannelsModeratedByAppInstanceUser = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListChannelsModeratedByAppInstanceUserCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListChannelsPaginator.ts

var paginateListChannels = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListChannelsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListSubChannelsPaginator.ts

var paginateListSubChannels = (0, import_core.createPaginator)(ChimeSDKMessagingClient, ListSubChannelsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/SearchChannelsPaginator.ts

var paginateSearchChannels = (0, import_core.createPaginator)(ChimeSDKMessagingClient, SearchChannelsCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ChimeSDKMessagingServiceException,
  __Client,
  ChimeSDKMessagingClient,
  ChimeSDKMessaging,
  $Command,
  AssociateChannelFlowCommand,
  BatchCreateChannelMembershipCommand,
  ChannelFlowCallbackCommand,
  CreateChannelBanCommand,
  CreateChannelCommand,
  CreateChannelFlowCommand,
  CreateChannelMembershipCommand,
  CreateChannelModeratorCommand,
  DeleteChannelBanCommand,
  DeleteChannelCommand,
  DeleteChannelFlowCommand,
  DeleteChannelMembershipCommand,
  DeleteChannelMessageCommand,
  DeleteChannelModeratorCommand,
  DeleteMessagingStreamingConfigurationsCommand,
  DescribeChannelBanCommand,
  DescribeChannelCommand,
  DescribeChannelFlowCommand,
  DescribeChannelMembershipCommand,
  DescribeChannelMembershipForAppInstanceUserCommand,
  DescribeChannelModeratedByAppInstanceUserCommand,
  DescribeChannelModeratorCommand,
  DisassociateChannelFlowCommand,
  GetChannelMembershipPreferencesCommand,
  GetChannelMessageCommand,
  GetChannelMessageStatusCommand,
  GetMessagingSessionEndpointCommand,
  GetMessagingStreamingConfigurationsCommand,
  ListChannelBansCommand,
  ListChannelFlowsCommand,
  ListChannelMembershipsCommand,
  ListChannelMembershipsForAppInstanceUserCommand,
  ListChannelMessagesCommand,
  ListChannelModeratorsCommand,
  ListChannelsAssociatedWithChannelFlowCommand,
  ListChannelsCommand,
  ListChannelsModeratedByAppInstanceUserCommand,
  ListSubChannelsCommand,
  ListTagsForResourceCommand,
  PutChannelExpirationSettingsCommand,
  PutChannelMembershipPreferencesCommand,
  PutMessagingStreamingConfigurationsCommand,
  RedactChannelMessageCommand,
  SearchChannelsCommand,
  SendChannelMessageCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateChannelCommand,
  UpdateChannelFlowCommand,
  UpdateChannelMessageCommand,
  UpdateChannelReadMarkerCommand,
  paginateListChannelBans,
  paginateListChannelFlows,
  paginateListChannelMembershipsForAppInstanceUser,
  paginateListChannelMemberships,
  paginateListChannelMessages,
  paginateListChannelModerators,
  paginateListChannelsAssociatedWithChannelFlow,
  paginateListChannelsModeratedByAppInstanceUser,
  paginateListChannels,
  paginateListSubChannels,
  paginateSearchChannels,
  AllowNotifications,
  ChannelMembershipType,
  ErrorCode,
  BadRequestException,
  ConflictException,
  ForbiddenException,
  NotFoundException,
  ServiceFailureException,
  ServiceUnavailableException,
  ThrottledClientException,
  UnauthorizedClientException,
  ResourceLimitExceededException,
  ExpirationCriterion,
  ChannelMode,
  ChannelPrivacy,
  InvocationType,
  FallbackAction,
  PushNotificationType,
  ChannelMessagePersistenceType,
  ChannelMessageStatus,
  ChannelMessageType,
  MessagingDataType,
  SortOrder,
  SearchFieldKey,
  SearchFieldOperator,
  IdentityFilterSensitiveLog,
  BatchChannelMembershipsFilterSensitiveLog,
  BatchCreateChannelMembershipResponseFilterSensitiveLog,
  ChannelFilterSensitiveLog,
  ChannelAssociatedWithFlowSummaryFilterSensitiveLog,
  ChannelBanFilterSensitiveLog,
  ChannelBanSummaryFilterSensitiveLog,
  ProcessorFilterSensitiveLog,
  ChannelFlowFilterSensitiveLog,
  MessageAttributeValueFilterSensitiveLog,
  PushNotificationConfigurationFilterSensitiveLog,
  ChannelMessageCallbackFilterSensitiveLog,
  ChannelFlowCallbackRequestFilterSensitiveLog,
  ChannelFlowSummaryFilterSensitiveLog,
  ChannelMembershipFilterSensitiveLog,
  ChannelSummaryFilterSensitiveLog,
  ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog,
  PushNotificationPreferencesFilterSensitiveLog,
  ChannelMembershipPreferencesFilterSensitiveLog,
  ChannelMembershipSummaryFilterSensitiveLog,
  ChannelMessageFilterSensitiveLog,
  ChannelMessageSummaryFilterSensitiveLog,
  ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog,
  ChannelModeratorFilterSensitiveLog,
  ChannelModeratorSummaryFilterSensitiveLog,
  TagFilterSensitiveLog,
  CreateChannelRequestFilterSensitiveLog,
  CreateChannelBanResponseFilterSensitiveLog,
  CreateChannelFlowRequestFilterSensitiveLog,
  CreateChannelMembershipResponseFilterSensitiveLog,
  CreateChannelModeratorResponseFilterSensitiveLog,
  DescribeChannelResponseFilterSensitiveLog,
  DescribeChannelBanResponseFilterSensitiveLog,
  DescribeChannelFlowResponseFilterSensitiveLog,
  DescribeChannelMembershipResponseFilterSensitiveLog,
  DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog,
  DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog,
  DescribeChannelModeratorResponseFilterSensitiveLog,
  GetChannelMembershipPreferencesResponseFilterSensitiveLog,
  GetChannelMessageResponseFilterSensitiveLog,
  ListChannelBansRequestFilterSensitiveLog,
  ListChannelBansResponseFilterSensitiveLog,
  ListChannelFlowsRequestFilterSensitiveLog,
  ListChannelFlowsResponseFilterSensitiveLog,
  ListChannelMembershipsRequestFilterSensitiveLog,
  ListChannelMembershipsResponseFilterSensitiveLog,
  ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog,
  ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog,
  ListChannelMessagesRequestFilterSensitiveLog,
  ListChannelMessagesResponseFilterSensitiveLog,
  ListChannelModeratorsRequestFilterSensitiveLog,
  ListChannelModeratorsResponseFilterSensitiveLog,
  ListChannelsRequestFilterSensitiveLog,
  ListChannelsResponseFilterSensitiveLog,
  ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog,
  ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog,
  ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog,
  ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog,
  ListSubChannelsRequestFilterSensitiveLog,
  ListSubChannelsResponseFilterSensitiveLog,
  ListTagsForResourceResponseFilterSensitiveLog,
  PutChannelMembershipPreferencesRequestFilterSensitiveLog,
  PutChannelMembershipPreferencesResponseFilterSensitiveLog,
  SearchChannelsRequestFilterSensitiveLog,
  SearchChannelsResponseFilterSensitiveLog,
  SendChannelMessageRequestFilterSensitiveLog,
  TagResourceRequestFilterSensitiveLog,
  UntagResourceRequestFilterSensitiveLog,
  UpdateChannelRequestFilterSensitiveLog,
  UpdateChannelFlowRequestFilterSensitiveLog,
  UpdateChannelMessageRequestFilterSensitiveLog
});

