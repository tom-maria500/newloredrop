import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { ChimeSDKMeetingsServiceException as __BaseException } from "./ChimeSDKMeetingsServiceException";
export const MediaCapabilities = {
    NONE: "None",
    RECEIVE: "Receive",
    SEND: "Send",
    SEND_RECEIVE: "SendReceive",
};
export const MeetingFeatureStatus = {
    AVAILABLE: "AVAILABLE",
    UNAVAILABLE: "UNAVAILABLE",
};
export class BadRequestException extends __BaseException {
    name = "BadRequestException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, BadRequestException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export class ForbiddenException extends __BaseException {
    name = "ForbiddenException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "ForbiddenException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ForbiddenException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export class LimitExceededException extends __BaseException {
    name = "LimitExceededException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export class NotFoundException extends __BaseException {
    name = "NotFoundException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export class ServiceFailureException extends __BaseException {
    name = "ServiceFailureException";
    $fault = "server";
    Code;
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "ServiceFailureException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceFailureException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export class ServiceUnavailableException extends __BaseException {
    name = "ServiceUnavailableException";
    $fault = "server";
    Code;
    Message;
    RequestId;
    RetryAfterSeconds;
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
        this.RetryAfterSeconds = opts.RetryAfterSeconds;
    }
}
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export class UnauthorizedException extends __BaseException {
    name = "UnauthorizedException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export class UnprocessableEntityException extends __BaseException {
    name = "UnprocessableEntityException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "UnprocessableEntityException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, UnprocessableEntityException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export class ConflictException extends __BaseException {
    name = "ConflictException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export const ContentResolution = {
    FHD: "FHD",
    NONE: "None",
    UHD: "UHD",
};
export const VideoResolution = {
    FHD: "FHD",
    HD: "HD",
    NONE: "None",
};
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    ResourceName;
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
        this.ResourceName = opts.ResourceName;
    }
}
export const TranscribeMedicalContentIdentificationType = {
    PHI: "PHI",
};
export const TranscribeMedicalLanguageCode = {
    EN_US: "en-US",
};
export const TranscribeMedicalRegion = {
    AP_SOUTHEAST_2: "ap-southeast-2",
    AUTO: "auto",
    CA_CENTRAL_1: "ca-central-1",
    EU_WEST_1: "eu-west-1",
    US_EAST_1: "us-east-1",
    US_EAST_2: "us-east-2",
    US_WEST_2: "us-west-2",
};
export const TranscribeMedicalSpecialty = {
    CARDIOLOGY: "CARDIOLOGY",
    NEUROLOGY: "NEUROLOGY",
    ONCOLOGY: "ONCOLOGY",
    PRIMARYCARE: "PRIMARYCARE",
    RADIOLOGY: "RADIOLOGY",
    UROLOGY: "UROLOGY",
};
export const TranscribeMedicalType = {
    CONVERSATION: "CONVERSATION",
    DICTATION: "DICTATION",
};
export const TranscribeContentIdentificationType = {
    PII: "PII",
};
export const TranscribeContentRedactionType = {
    PII: "PII",
};
export const TranscribeLanguageCode = {
    DE_DE: "de-DE",
    EN_AU: "en-AU",
    EN_GB: "en-GB",
    EN_US: "en-US",
    ES_US: "es-US",
    FR_CA: "fr-CA",
    FR_FR: "fr-FR",
    HI_IN: "hi-IN",
    IT_IT: "it-IT",
    JA_JP: "ja-JP",
    KO_KR: "ko-KR",
    PT_BR: "pt-BR",
    TH_TH: "th-TH",
    ZH_CN: "zh-CN",
};
export const TranscribePartialResultsStability = {
    HIGH: "high",
    LOW: "low",
    MEDIUM: "medium",
};
export const TranscribeRegion = {
    AP_NORTHEAST_1: "ap-northeast-1",
    AP_NORTHEAST_2: "ap-northeast-2",
    AP_SOUTHEAST_2: "ap-southeast-2",
    AUTO: "auto",
    CA_CENTRAL_1: "ca-central-1",
    EU_CENTRAL_1: "eu-central-1",
    EU_WEST_1: "eu-west-1",
    EU_WEST_2: "eu-west-2",
    SA_EAST_1: "sa-east-1",
    US_EAST_1: "us-east-1",
    US_EAST_2: "us-east-2",
    US_GOV_WEST_1: "us-gov-west-1",
    US_WEST_2: "us-west-2",
};
export const TranscribeVocabularyFilterMethod = {
    MASK: "mask",
    REMOVE: "remove",
    TAG: "tag",
};
export class TooManyTagsException extends __BaseException {
    name = "TooManyTagsException";
    $fault = "client";
    Code;
    Message;
    RequestId;
    ResourceName;
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
        this.ResourceName = opts.ResourceName;
    }
}
export const AttendeeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExternalUserId && { ExternalUserId: SENSITIVE_STRING }),
    ...(obj.JoinToken && { JoinToken: SENSITIVE_STRING }),
});
export const CreateAttendeeRequestItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExternalUserId && { ExternalUserId: SENSITIVE_STRING }),
});
export const BatchCreateAttendeeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => CreateAttendeeRequestItemFilterSensitiveLog(item)) }),
});
export const CreateAttendeeErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExternalUserId && { ExternalUserId: SENSITIVE_STRING }),
});
export const BatchCreateAttendeeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => AttendeeFilterSensitiveLog(item)) }),
    ...(obj.Errors && { Errors: obj.Errors.map((item) => CreateAttendeeErrorFilterSensitiveLog(item)) }),
});
export const CreateAttendeeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExternalUserId && { ExternalUserId: SENSITIVE_STRING }),
});
export const CreateAttendeeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendee && { Attendee: AttendeeFilterSensitiveLog(obj.Attendee) }),
});
export const NotificationsConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LambdaFunctionArn && { LambdaFunctionArn: SENSITIVE_STRING }),
    ...(obj.SnsTopicArn && { SnsTopicArn: SENSITIVE_STRING }),
    ...(obj.SqsQueueArn && { SqsQueueArn: SENSITIVE_STRING }),
});
export const CreateMeetingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientRequestToken && { ClientRequestToken: SENSITIVE_STRING }),
    ...(obj.MeetingHostId && { MeetingHostId: SENSITIVE_STRING }),
    ...(obj.ExternalMeetingId && { ExternalMeetingId: SENSITIVE_STRING }),
    ...(obj.NotificationsConfiguration && {
        NotificationsConfiguration: NotificationsConfigurationFilterSensitiveLog(obj.NotificationsConfiguration),
    }),
});
export const MeetingFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MeetingHostId && { MeetingHostId: SENSITIVE_STRING }),
    ...(obj.ExternalMeetingId && { ExternalMeetingId: SENSITIVE_STRING }),
});
export const CreateMeetingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Meeting && { Meeting: MeetingFilterSensitiveLog(obj.Meeting) }),
});
export const CreateMeetingWithAttendeesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientRequestToken && { ClientRequestToken: SENSITIVE_STRING }),
    ...(obj.MeetingHostId && { MeetingHostId: SENSITIVE_STRING }),
    ...(obj.ExternalMeetingId && { ExternalMeetingId: SENSITIVE_STRING }),
    ...(obj.NotificationsConfiguration && {
        NotificationsConfiguration: NotificationsConfigurationFilterSensitiveLog(obj.NotificationsConfiguration),
    }),
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => CreateAttendeeRequestItemFilterSensitiveLog(item)) }),
});
export const CreateMeetingWithAttendeesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Meeting && { Meeting: MeetingFilterSensitiveLog(obj.Meeting) }),
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => AttendeeFilterSensitiveLog(item)) }),
    ...(obj.Errors && { Errors: obj.Errors.map((item) => CreateAttendeeErrorFilterSensitiveLog(item)) }),
});
export const GetAttendeeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendee && { Attendee: AttendeeFilterSensitiveLog(obj.Attendee) }),
});
export const GetMeetingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Meeting && { Meeting: MeetingFilterSensitiveLog(obj.Meeting) }),
});
export const ListAttendeesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => AttendeeFilterSensitiveLog(item)) }),
});
export const UpdateAttendeeCapabilitiesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendee && { Attendee: AttendeeFilterSensitiveLog(obj.Attendee) }),
});
