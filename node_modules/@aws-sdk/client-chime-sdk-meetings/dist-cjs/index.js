"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AttendeeFilterSensitiveLog: () => AttendeeFilterSensitiveLog,
  BadRequestException: () => BadRequestException,
  BatchCreateAttendeeCommand: () => BatchCreateAttendeeCommand,
  BatchCreateAttendeeRequestFilterSensitiveLog: () => BatchCreateAttendeeRequestFilterSensitiveLog,
  BatchCreateAttendeeResponseFilterSensitiveLog: () => BatchCreateAttendeeResponseFilterSensitiveLog,
  BatchUpdateAttendeeCapabilitiesExceptCommand: () => BatchUpdateAttendeeCapabilitiesExceptCommand,
  ChimeSDKMeetings: () => ChimeSDKMeetings,
  ChimeSDKMeetingsClient: () => ChimeSDKMeetingsClient,
  ChimeSDKMeetingsServiceException: () => ChimeSDKMeetingsServiceException,
  ConflictException: () => ConflictException,
  ContentResolution: () => ContentResolution,
  CreateAttendeeCommand: () => CreateAttendeeCommand,
  CreateAttendeeErrorFilterSensitiveLog: () => CreateAttendeeErrorFilterSensitiveLog,
  CreateAttendeeRequestFilterSensitiveLog: () => CreateAttendeeRequestFilterSensitiveLog,
  CreateAttendeeRequestItemFilterSensitiveLog: () => CreateAttendeeRequestItemFilterSensitiveLog,
  CreateAttendeeResponseFilterSensitiveLog: () => CreateAttendeeResponseFilterSensitiveLog,
  CreateMeetingCommand: () => CreateMeetingCommand,
  CreateMeetingRequestFilterSensitiveLog: () => CreateMeetingRequestFilterSensitiveLog,
  CreateMeetingResponseFilterSensitiveLog: () => CreateMeetingResponseFilterSensitiveLog,
  CreateMeetingWithAttendeesCommand: () => CreateMeetingWithAttendeesCommand,
  CreateMeetingWithAttendeesRequestFilterSensitiveLog: () => CreateMeetingWithAttendeesRequestFilterSensitiveLog,
  CreateMeetingWithAttendeesResponseFilterSensitiveLog: () => CreateMeetingWithAttendeesResponseFilterSensitiveLog,
  DeleteAttendeeCommand: () => DeleteAttendeeCommand,
  DeleteMeetingCommand: () => DeleteMeetingCommand,
  ForbiddenException: () => ForbiddenException,
  GetAttendeeCommand: () => GetAttendeeCommand,
  GetAttendeeResponseFilterSensitiveLog: () => GetAttendeeResponseFilterSensitiveLog,
  GetMeetingCommand: () => GetMeetingCommand,
  GetMeetingResponseFilterSensitiveLog: () => GetMeetingResponseFilterSensitiveLog,
  LimitExceededException: () => LimitExceededException,
  ListAttendeesCommand: () => ListAttendeesCommand,
  ListAttendeesResponseFilterSensitiveLog: () => ListAttendeesResponseFilterSensitiveLog,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  MediaCapabilities: () => MediaCapabilities,
  MeetingFeatureStatus: () => MeetingFeatureStatus,
  MeetingFilterSensitiveLog: () => MeetingFilterSensitiveLog,
  NotFoundException: () => NotFoundException,
  NotificationsConfigurationFilterSensitiveLog: () => NotificationsConfigurationFilterSensitiveLog,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ServiceFailureException: () => ServiceFailureException,
  ServiceUnavailableException: () => ServiceUnavailableException,
  StartMeetingTranscriptionCommand: () => StartMeetingTranscriptionCommand,
  StopMeetingTranscriptionCommand: () => StopMeetingTranscriptionCommand,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  TooManyTagsException: () => TooManyTagsException,
  TranscribeContentIdentificationType: () => TranscribeContentIdentificationType,
  TranscribeContentRedactionType: () => TranscribeContentRedactionType,
  TranscribeLanguageCode: () => TranscribeLanguageCode,
  TranscribeMedicalContentIdentificationType: () => TranscribeMedicalContentIdentificationType,
  TranscribeMedicalLanguageCode: () => TranscribeMedicalLanguageCode,
  TranscribeMedicalRegion: () => TranscribeMedicalRegion,
  TranscribeMedicalSpecialty: () => TranscribeMedicalSpecialty,
  TranscribeMedicalType: () => TranscribeMedicalType,
  TranscribePartialResultsStability: () => TranscribePartialResultsStability,
  TranscribeRegion: () => TranscribeRegion,
  TranscribeVocabularyFilterMethod: () => TranscribeVocabularyFilterMethod,
  UnauthorizedException: () => UnauthorizedException,
  UnprocessableEntityException: () => UnprocessableEntityException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateAttendeeCapabilitiesCommand: () => UpdateAttendeeCapabilitiesCommand,
  UpdateAttendeeCapabilitiesResponseFilterSensitiveLog: () => UpdateAttendeeCapabilitiesResponseFilterSensitiveLog,
  VideoResolution: () => VideoResolution,
  __Client: () => import_smithy_client.Client,
  paginateListAttendees: () => paginateListAttendees
});
module.exports = __toCommonJS(src_exports);

// src/ChimeSDKMeetingsClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "chime"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ChimeSDKMeetingsClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/ChimeSDKMeetingsClient.ts
var ChimeSDKMeetingsClient = class extends import_smithy_client.Client {
  static {
    __name(this, "ChimeSDKMeetingsClient");
  }
  /**
   * The resolved configuration of ChimeSDKMeetingsClient class. This is resolved and normalized from the {@link ChimeSDKMeetingsClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultChimeSDKMeetingsHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        })
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/ChimeSDKMeetings.ts


// src/commands/BatchCreateAttendeeCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/models/models_0.ts


// src/models/ChimeSDKMeetingsServiceException.ts

var ChimeSDKMeetingsServiceException = class _ChimeSDKMeetingsServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "ChimeSDKMeetingsServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ChimeSDKMeetingsServiceException.prototype);
  }
};

// src/models/models_0.ts
var MediaCapabilities = {
  NONE: "None",
  RECEIVE: "Receive",
  SEND: "Send",
  SEND_RECEIVE: "SendReceive"
};
var MeetingFeatureStatus = {
  AVAILABLE: "AVAILABLE",
  UNAVAILABLE: "UNAVAILABLE"
};
var BadRequestException = class _BadRequestException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "BadRequestException");
  }
  name = "BadRequestException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request id associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _BadRequestException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ForbiddenException = class _ForbiddenException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "ForbiddenException");
  }
  name = "ForbiddenException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request id associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ForbiddenException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ForbiddenException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var LimitExceededException = class _LimitExceededException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "LimitExceededException");
  }
  name = "LimitExceededException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request id associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var NotFoundException = class _NotFoundException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "NotFoundException");
  }
  name = "NotFoundException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request ID associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ServiceFailureException = class _ServiceFailureException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "ServiceFailureException");
  }
  name = "ServiceFailureException";
  $fault = "server";
  Code;
  Message;
  /**
   * <p>The ID of the failed request.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceFailureException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceFailureException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ServiceUnavailableException = class _ServiceUnavailableException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "ServiceUnavailableException");
  }
  name = "ServiceUnavailableException";
  $fault = "server";
  Code;
  Message;
  /**
   * <p>The request id associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * <p>The number of seconds the caller should wait before retrying.</p>
   * @public
   */
  RetryAfterSeconds;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
    this.RetryAfterSeconds = opts.RetryAfterSeconds;
  }
};
var ThrottlingException = class _ThrottlingException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "ThrottlingException");
  }
  name = "ThrottlingException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The ID of the request that exceeded the throttling limit.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var UnauthorizedException = class _UnauthorizedException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "UnauthorizedException");
  }
  name = "UnauthorizedException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request id associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnauthorizedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _UnauthorizedException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var UnprocessableEntityException = class _UnprocessableEntityException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "UnprocessableEntityException");
  }
  name = "UnprocessableEntityException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request id associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnprocessableEntityException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _UnprocessableEntityException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ConflictException = class _ConflictException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The ID of the request involved in the conflict.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ContentResolution = {
  FHD: "FHD",
  NONE: "None",
  UHD: "UHD"
};
var VideoResolution = {
  FHD: "FHD",
  HD: "HD",
  NONE: "None"
};
var ResourceNotFoundException = class _ResourceNotFoundException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "ResourceNotFoundException");
  }
  name = "ResourceNotFoundException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The ID of the resource that couldn't be found.</p>
   * @public
   */
  RequestId;
  /**
   * <p>The name of the resource that couldn't be found.</p>
   * @public
   */
  ResourceName;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
    this.ResourceName = opts.ResourceName;
  }
};
var TranscribeMedicalContentIdentificationType = {
  PHI: "PHI"
};
var TranscribeMedicalLanguageCode = {
  EN_US: "en-US"
};
var TranscribeMedicalRegion = {
  AP_SOUTHEAST_2: "ap-southeast-2",
  AUTO: "auto",
  CA_CENTRAL_1: "ca-central-1",
  EU_WEST_1: "eu-west-1",
  US_EAST_1: "us-east-1",
  US_EAST_2: "us-east-2",
  US_WEST_2: "us-west-2"
};
var TranscribeMedicalSpecialty = {
  CARDIOLOGY: "CARDIOLOGY",
  NEUROLOGY: "NEUROLOGY",
  ONCOLOGY: "ONCOLOGY",
  PRIMARYCARE: "PRIMARYCARE",
  RADIOLOGY: "RADIOLOGY",
  UROLOGY: "UROLOGY"
};
var TranscribeMedicalType = {
  CONVERSATION: "CONVERSATION",
  DICTATION: "DICTATION"
};
var TranscribeContentIdentificationType = {
  PII: "PII"
};
var TranscribeContentRedactionType = {
  PII: "PII"
};
var TranscribeLanguageCode = {
  DE_DE: "de-DE",
  EN_AU: "en-AU",
  EN_GB: "en-GB",
  EN_US: "en-US",
  ES_US: "es-US",
  FR_CA: "fr-CA",
  FR_FR: "fr-FR",
  HI_IN: "hi-IN",
  IT_IT: "it-IT",
  JA_JP: "ja-JP",
  KO_KR: "ko-KR",
  PT_BR: "pt-BR",
  TH_TH: "th-TH",
  ZH_CN: "zh-CN"
};
var TranscribePartialResultsStability = {
  HIGH: "high",
  LOW: "low",
  MEDIUM: "medium"
};
var TranscribeRegion = {
  AP_NORTHEAST_1: "ap-northeast-1",
  AP_NORTHEAST_2: "ap-northeast-2",
  AP_SOUTHEAST_2: "ap-southeast-2",
  AUTO: "auto",
  CA_CENTRAL_1: "ca-central-1",
  EU_CENTRAL_1: "eu-central-1",
  EU_WEST_1: "eu-west-1",
  EU_WEST_2: "eu-west-2",
  SA_EAST_1: "sa-east-1",
  US_EAST_1: "us-east-1",
  US_EAST_2: "us-east-2",
  US_GOV_WEST_1: "us-gov-west-1",
  US_WEST_2: "us-west-2"
};
var TranscribeVocabularyFilterMethod = {
  MASK: "mask",
  REMOVE: "remove",
  TAG: "tag"
};
var TooManyTagsException = class _TooManyTagsException extends ChimeSDKMeetingsServiceException {
  static {
    __name(this, "TooManyTagsException");
  }
  name = "TooManyTagsException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The ID of the request that contains too many tags.</p>
   * @public
   */
  RequestId;
  /**
   * <p>The name of the resource that received too many tags.</p>
   * @public
   */
  ResourceName;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyTagsException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _TooManyTagsException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
    this.ResourceName = opts.ResourceName;
  }
};
var AttendeeFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ExternalUserId && { ExternalUserId: import_smithy_client.SENSITIVE_STRING },
  ...obj.JoinToken && { JoinToken: import_smithy_client.SENSITIVE_STRING }
}), "AttendeeFilterSensitiveLog");
var CreateAttendeeRequestItemFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ExternalUserId && { ExternalUserId: import_smithy_client.SENSITIVE_STRING }
}), "CreateAttendeeRequestItemFilterSensitiveLog");
var BatchCreateAttendeeRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Attendees && { Attendees: obj.Attendees.map((item) => CreateAttendeeRequestItemFilterSensitiveLog(item)) }
}), "BatchCreateAttendeeRequestFilterSensitiveLog");
var CreateAttendeeErrorFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ExternalUserId && { ExternalUserId: import_smithy_client.SENSITIVE_STRING }
}), "CreateAttendeeErrorFilterSensitiveLog");
var BatchCreateAttendeeResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Attendees && { Attendees: obj.Attendees.map((item) => AttendeeFilterSensitiveLog(item)) },
  ...obj.Errors && { Errors: obj.Errors.map((item) => CreateAttendeeErrorFilterSensitiveLog(item)) }
}), "BatchCreateAttendeeResponseFilterSensitiveLog");
var CreateAttendeeRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ExternalUserId && { ExternalUserId: import_smithy_client.SENSITIVE_STRING }
}), "CreateAttendeeRequestFilterSensitiveLog");
var CreateAttendeeResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Attendee && { Attendee: AttendeeFilterSensitiveLog(obj.Attendee) }
}), "CreateAttendeeResponseFilterSensitiveLog");
var NotificationsConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.LambdaFunctionArn && { LambdaFunctionArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.SnsTopicArn && { SnsTopicArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.SqsQueueArn && { SqsQueueArn: import_smithy_client.SENSITIVE_STRING }
}), "NotificationsConfigurationFilterSensitiveLog");
var CreateMeetingRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.MeetingHostId && { MeetingHostId: import_smithy_client.SENSITIVE_STRING },
  ...obj.ExternalMeetingId && { ExternalMeetingId: import_smithy_client.SENSITIVE_STRING },
  ...obj.NotificationsConfiguration && {
    NotificationsConfiguration: NotificationsConfigurationFilterSensitiveLog(obj.NotificationsConfiguration)
  }
}), "CreateMeetingRequestFilterSensitiveLog");
var MeetingFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MeetingHostId && { MeetingHostId: import_smithy_client.SENSITIVE_STRING },
  ...obj.ExternalMeetingId && { ExternalMeetingId: import_smithy_client.SENSITIVE_STRING }
}), "MeetingFilterSensitiveLog");
var CreateMeetingResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Meeting && { Meeting: MeetingFilterSensitiveLog(obj.Meeting) }
}), "CreateMeetingResponseFilterSensitiveLog");
var CreateMeetingWithAttendeesRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.MeetingHostId && { MeetingHostId: import_smithy_client.SENSITIVE_STRING },
  ...obj.ExternalMeetingId && { ExternalMeetingId: import_smithy_client.SENSITIVE_STRING },
  ...obj.NotificationsConfiguration && {
    NotificationsConfiguration: NotificationsConfigurationFilterSensitiveLog(obj.NotificationsConfiguration)
  },
  ...obj.Attendees && { Attendees: obj.Attendees.map((item) => CreateAttendeeRequestItemFilterSensitiveLog(item)) }
}), "CreateMeetingWithAttendeesRequestFilterSensitiveLog");
var CreateMeetingWithAttendeesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Meeting && { Meeting: MeetingFilterSensitiveLog(obj.Meeting) },
  ...obj.Attendees && { Attendees: obj.Attendees.map((item) => AttendeeFilterSensitiveLog(item)) },
  ...obj.Errors && { Errors: obj.Errors.map((item) => CreateAttendeeErrorFilterSensitiveLog(item)) }
}), "CreateMeetingWithAttendeesResponseFilterSensitiveLog");
var GetAttendeeResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Attendee && { Attendee: AttendeeFilterSensitiveLog(obj.Attendee) }
}), "GetAttendeeResponseFilterSensitiveLog");
var GetMeetingResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Meeting && { Meeting: MeetingFilterSensitiveLog(obj.Meeting) }
}), "GetMeetingResponseFilterSensitiveLog");
var ListAttendeesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Attendees && { Attendees: obj.Attendees.map((item) => AttendeeFilterSensitiveLog(item)) }
}), "ListAttendeesResponseFilterSensitiveLog");
var UpdateAttendeeCapabilitiesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Attendee && { Attendee: AttendeeFilterSensitiveLog(obj.Attendee) }
}), "UpdateAttendeeCapabilitiesResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");
var se_BatchCreateAttendeeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/meetings/{MeetingId}/attendees");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "batch-create"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Attendees: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_BatchCreateAttendeeCommand");
var se_BatchUpdateAttendeeCapabilitiesExceptCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/meetings/{MeetingId}/attendees/capabilities");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "batch-update-except"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Capabilities: (_) => (0, import_smithy_client._json)(_),
      ExcludedAttendeeIds: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).q(query).b(body);
  return b.build();
}, "se_BatchUpdateAttendeeCapabilitiesExceptCommand");
var se_CreateAttendeeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/meetings/{MeetingId}/attendees");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Capabilities: (_) => (0, import_smithy_client._json)(_),
      ExternalUserId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateAttendeeCommand");
var se_CreateMeetingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/meetings");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      ExternalMeetingId: [],
      MediaRegion: [],
      MeetingFeatures: (_) => (0, import_smithy_client._json)(_),
      MeetingHostId: [],
      NotificationsConfiguration: (_) => (0, import_smithy_client._json)(_),
      PrimaryMeetingId: [],
      Tags: (_) => (0, import_smithy_client._json)(_),
      TenantIds: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateMeetingCommand");
var se_CreateMeetingWithAttendeesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/meetings");
  const query = (0, import_smithy_client.map)({
    [_o]: [, "create-attendees"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Attendees: (_) => (0, import_smithy_client._json)(_),
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      ExternalMeetingId: [],
      MediaRegion: [],
      MeetingFeatures: (_) => (0, import_smithy_client._json)(_),
      MeetingHostId: [],
      NotificationsConfiguration: (_) => (0, import_smithy_client._json)(_),
      PrimaryMeetingId: [],
      Tags: (_) => (0, import_smithy_client._json)(_),
      TenantIds: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_CreateMeetingWithAttendeesCommand");
var se_DeleteAttendeeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/meetings/{MeetingId}/attendees/{AttendeeId}");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  b.p("AttendeeId", () => input.AttendeeId, "{AttendeeId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteAttendeeCommand");
var se_DeleteMeetingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/meetings/{MeetingId}");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteMeetingCommand");
var se_GetAttendeeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/meetings/{MeetingId}/attendees/{AttendeeId}");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  b.p("AttendeeId", () => input.AttendeeId, "{AttendeeId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAttendeeCommand");
var se_GetMeetingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/meetings/{MeetingId}");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMeetingCommand");
var se_ListAttendeesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/meetings/{MeetingId}/attendees");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  const query = (0, import_smithy_client.map)({
    [_nt]: [, input[_NT]],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListAttendeesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_a]: [, (0, import_smithy_client.expectNonNull)(input[_RARN], `ResourceARN`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_StartMeetingTranscriptionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/meetings/{MeetingId}/transcription");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "start"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      TranscriptionConfiguration: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_StartMeetingTranscriptionCommand");
var se_StopMeetingTranscriptionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/meetings/{MeetingId}/transcription");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "stop"]
  });
  let body;
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_StopMeetingTranscriptionCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_o]: [, "tag-resource"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceARN: [],
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_o]: [, "untag-resource"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceARN: [],
      TagKeys: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateAttendeeCapabilitiesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/meetings/{MeetingId}/attendees/{AttendeeId}/capabilities");
  b.p("MeetingId", () => input.MeetingId, "{MeetingId}", false);
  b.p("AttendeeId", () => input.AttendeeId, "{AttendeeId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Capabilities: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateAttendeeCapabilitiesCommand");
var de_BatchCreateAttendeeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Attendees: import_smithy_client._json,
    Errors: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchCreateAttendeeCommand");
var de_BatchUpdateAttendeeCapabilitiesExceptCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_BatchUpdateAttendeeCapabilitiesExceptCommand");
var de_CreateAttendeeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Attendee: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAttendeeCommand");
var de_CreateMeetingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Meeting: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateMeetingCommand");
var de_CreateMeetingWithAttendeesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Attendees: import_smithy_client._json,
    Errors: import_smithy_client._json,
    Meeting: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateMeetingWithAttendeesCommand");
var de_DeleteAttendeeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteAttendeeCommand");
var de_DeleteMeetingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteMeetingCommand");
var de_GetAttendeeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Attendee: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAttendeeCommand");
var de_GetMeetingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Meeting: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMeetingCommand");
var de_ListAttendeesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Attendees: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAttendeesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_StartMeetingTranscriptionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StartMeetingTranscriptionCommand");
var de_StopMeetingTranscriptionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StopMeetingTranscriptionCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateAttendeeCapabilitiesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Attendee: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAttendeeCapabilitiesCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "BadRequestException":
    case "com.amazonaws.chimesdkmeetings#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "ForbiddenException":
    case "com.amazonaws.chimesdkmeetings#ForbiddenException":
      throw await de_ForbiddenExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.chimesdkmeetings#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.chimesdkmeetings#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    case "ServiceFailureException":
    case "com.amazonaws.chimesdkmeetings#ServiceFailureException":
      throw await de_ServiceFailureExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.chimesdkmeetings#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.chimesdkmeetings#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "UnauthorizedException":
    case "com.amazonaws.chimesdkmeetings#UnauthorizedException":
      throw await de_UnauthorizedExceptionRes(parsedOutput, context);
    case "UnprocessableEntityException":
    case "com.amazonaws.chimesdkmeetings#UnprocessableEntityException":
      throw await de_UnprocessableEntityExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.chimesdkmeetings#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.chimesdkmeetings#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "TooManyTagsException":
    case "com.amazonaws.chimesdkmeetings#TooManyTagsException":
      throw await de_TooManyTagsExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ChimeSDKMeetingsServiceException);
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BadRequestExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_ForbiddenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ForbiddenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ForbiddenExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString,
    ResourceName: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceFailureExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_RAS]: [, parsedOutput.headers[_ra]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceUnavailableExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_TooManyTagsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString,
    ResourceName: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new TooManyTagsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TooManyTagsExceptionRes");
var de_UnauthorizedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new UnauthorizedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnauthorizedExceptionRes");
var de_UnprocessableEntityExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new UnprocessableEntityException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnprocessableEntityExceptionRes");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _MR = "MaxResults";
var _NT = "NextToken";
var _RARN = "ResourceARN";
var _RAS = "RetryAfterSeconds";
var _a = "arn";
var _mr = "max-results";
var _nt = "next-token";
var _o = "operation";
var _ra = "retry-after";

// src/commands/BatchCreateAttendeeCommand.ts
var BatchCreateAttendeeCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "BatchCreateAttendee", {}).n("ChimeSDKMeetingsClient", "BatchCreateAttendeeCommand").f(BatchCreateAttendeeRequestFilterSensitiveLog, BatchCreateAttendeeResponseFilterSensitiveLog).ser(se_BatchCreateAttendeeCommand).de(de_BatchCreateAttendeeCommand).build() {
  static {
    __name(this, "BatchCreateAttendeeCommand");
  }
};

// src/commands/BatchUpdateAttendeeCapabilitiesExceptCommand.ts



var BatchUpdateAttendeeCapabilitiesExceptCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "BatchUpdateAttendeeCapabilitiesExcept", {}).n("ChimeSDKMeetingsClient", "BatchUpdateAttendeeCapabilitiesExceptCommand").f(void 0, void 0).ser(se_BatchUpdateAttendeeCapabilitiesExceptCommand).de(de_BatchUpdateAttendeeCapabilitiesExceptCommand).build() {
  static {
    __name(this, "BatchUpdateAttendeeCapabilitiesExceptCommand");
  }
};

// src/commands/CreateAttendeeCommand.ts



var CreateAttendeeCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "CreateAttendee", {}).n("ChimeSDKMeetingsClient", "CreateAttendeeCommand").f(CreateAttendeeRequestFilterSensitiveLog, CreateAttendeeResponseFilterSensitiveLog).ser(se_CreateAttendeeCommand).de(de_CreateAttendeeCommand).build() {
  static {
    __name(this, "CreateAttendeeCommand");
  }
};

// src/commands/CreateMeetingCommand.ts



var CreateMeetingCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "CreateMeeting", {}).n("ChimeSDKMeetingsClient", "CreateMeetingCommand").f(CreateMeetingRequestFilterSensitiveLog, CreateMeetingResponseFilterSensitiveLog).ser(se_CreateMeetingCommand).de(de_CreateMeetingCommand).build() {
  static {
    __name(this, "CreateMeetingCommand");
  }
};

// src/commands/CreateMeetingWithAttendeesCommand.ts



var CreateMeetingWithAttendeesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "CreateMeetingWithAttendees", {}).n("ChimeSDKMeetingsClient", "CreateMeetingWithAttendeesCommand").f(CreateMeetingWithAttendeesRequestFilterSensitiveLog, CreateMeetingWithAttendeesResponseFilterSensitiveLog).ser(se_CreateMeetingWithAttendeesCommand).de(de_CreateMeetingWithAttendeesCommand).build() {
  static {
    __name(this, "CreateMeetingWithAttendeesCommand");
  }
};

// src/commands/DeleteAttendeeCommand.ts



var DeleteAttendeeCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "DeleteAttendee", {}).n("ChimeSDKMeetingsClient", "DeleteAttendeeCommand").f(void 0, void 0).ser(se_DeleteAttendeeCommand).de(de_DeleteAttendeeCommand).build() {
  static {
    __name(this, "DeleteAttendeeCommand");
  }
};

// src/commands/DeleteMeetingCommand.ts



var DeleteMeetingCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "DeleteMeeting", {}).n("ChimeSDKMeetingsClient", "DeleteMeetingCommand").f(void 0, void 0).ser(se_DeleteMeetingCommand).de(de_DeleteMeetingCommand).build() {
  static {
    __name(this, "DeleteMeetingCommand");
  }
};

// src/commands/GetAttendeeCommand.ts



var GetAttendeeCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "GetAttendee", {}).n("ChimeSDKMeetingsClient", "GetAttendeeCommand").f(void 0, GetAttendeeResponseFilterSensitiveLog).ser(se_GetAttendeeCommand).de(de_GetAttendeeCommand).build() {
  static {
    __name(this, "GetAttendeeCommand");
  }
};

// src/commands/GetMeetingCommand.ts



var GetMeetingCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "GetMeeting", {}).n("ChimeSDKMeetingsClient", "GetMeetingCommand").f(void 0, GetMeetingResponseFilterSensitiveLog).ser(se_GetMeetingCommand).de(de_GetMeetingCommand).build() {
  static {
    __name(this, "GetMeetingCommand");
  }
};

// src/commands/ListAttendeesCommand.ts



var ListAttendeesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "ListAttendees", {}).n("ChimeSDKMeetingsClient", "ListAttendeesCommand").f(void 0, ListAttendeesResponseFilterSensitiveLog).ser(se_ListAttendeesCommand).de(de_ListAttendeesCommand).build() {
  static {
    __name(this, "ListAttendeesCommand");
  }
};

// src/commands/ListTagsForResourceCommand.ts



var ListTagsForResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "ListTagsForResource", {}).n("ChimeSDKMeetingsClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
  static {
    __name(this, "ListTagsForResourceCommand");
  }
};

// src/commands/StartMeetingTranscriptionCommand.ts



var StartMeetingTranscriptionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "StartMeetingTranscription", {}).n("ChimeSDKMeetingsClient", "StartMeetingTranscriptionCommand").f(void 0, void 0).ser(se_StartMeetingTranscriptionCommand).de(de_StartMeetingTranscriptionCommand).build() {
  static {
    __name(this, "StartMeetingTranscriptionCommand");
  }
};

// src/commands/StopMeetingTranscriptionCommand.ts



var StopMeetingTranscriptionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "StopMeetingTranscription", {}).n("ChimeSDKMeetingsClient", "StopMeetingTranscriptionCommand").f(void 0, void 0).ser(se_StopMeetingTranscriptionCommand).de(de_StopMeetingTranscriptionCommand).build() {
  static {
    __name(this, "StopMeetingTranscriptionCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "TagResource", {}).n("ChimeSDKMeetingsClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "UntagResource", {}).n("ChimeSDKMeetingsClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UpdateAttendeeCapabilitiesCommand.ts



var UpdateAttendeeCapabilitiesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeMeetingsSDKService", "UpdateAttendeeCapabilities", {}).n("ChimeSDKMeetingsClient", "UpdateAttendeeCapabilitiesCommand").f(void 0, UpdateAttendeeCapabilitiesResponseFilterSensitiveLog).ser(se_UpdateAttendeeCapabilitiesCommand).de(de_UpdateAttendeeCapabilitiesCommand).build() {
  static {
    __name(this, "UpdateAttendeeCapabilitiesCommand");
  }
};

// src/ChimeSDKMeetings.ts
var commands = {
  BatchCreateAttendeeCommand,
  BatchUpdateAttendeeCapabilitiesExceptCommand,
  CreateAttendeeCommand,
  CreateMeetingCommand,
  CreateMeetingWithAttendeesCommand,
  DeleteAttendeeCommand,
  DeleteMeetingCommand,
  GetAttendeeCommand,
  GetMeetingCommand,
  ListAttendeesCommand,
  ListTagsForResourceCommand,
  StartMeetingTranscriptionCommand,
  StopMeetingTranscriptionCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateAttendeeCapabilitiesCommand
};
var ChimeSDKMeetings = class extends ChimeSDKMeetingsClient {
  static {
    __name(this, "ChimeSDKMeetings");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, ChimeSDKMeetings);

// src/pagination/ListAttendeesPaginator.ts

var paginateListAttendees = (0, import_core.createPaginator)(ChimeSDKMeetingsClient, ListAttendeesCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ChimeSDKMeetingsServiceException,
  __Client,
  ChimeSDKMeetingsClient,
  ChimeSDKMeetings,
  $Command,
  BatchCreateAttendeeCommand,
  BatchUpdateAttendeeCapabilitiesExceptCommand,
  CreateAttendeeCommand,
  CreateMeetingCommand,
  CreateMeetingWithAttendeesCommand,
  DeleteAttendeeCommand,
  DeleteMeetingCommand,
  GetAttendeeCommand,
  GetMeetingCommand,
  ListAttendeesCommand,
  ListTagsForResourceCommand,
  StartMeetingTranscriptionCommand,
  StopMeetingTranscriptionCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateAttendeeCapabilitiesCommand,
  paginateListAttendees,
  MediaCapabilities,
  MeetingFeatureStatus,
  BadRequestException,
  ForbiddenException,
  LimitExceededException,
  NotFoundException,
  ServiceFailureException,
  ServiceUnavailableException,
  ThrottlingException,
  UnauthorizedException,
  UnprocessableEntityException,
  ConflictException,
  ContentResolution,
  VideoResolution,
  ResourceNotFoundException,
  TranscribeMedicalContentIdentificationType,
  TranscribeMedicalLanguageCode,
  TranscribeMedicalRegion,
  TranscribeMedicalSpecialty,
  TranscribeMedicalType,
  TranscribeContentIdentificationType,
  TranscribeContentRedactionType,
  TranscribeLanguageCode,
  TranscribePartialResultsStability,
  TranscribeRegion,
  TranscribeVocabularyFilterMethod,
  TooManyTagsException,
  AttendeeFilterSensitiveLog,
  CreateAttendeeRequestItemFilterSensitiveLog,
  BatchCreateAttendeeRequestFilterSensitiveLog,
  CreateAttendeeErrorFilterSensitiveLog,
  BatchCreateAttendeeResponseFilterSensitiveLog,
  CreateAttendeeRequestFilterSensitiveLog,
  CreateAttendeeResponseFilterSensitiveLog,
  NotificationsConfigurationFilterSensitiveLog,
  CreateMeetingRequestFilterSensitiveLog,
  MeetingFilterSensitiveLog,
  CreateMeetingResponseFilterSensitiveLog,
  CreateMeetingWithAttendeesRequestFilterSensitiveLog,
  CreateMeetingWithAttendeesResponseFilterSensitiveLog,
  GetAttendeeResponseFilterSensitiveLog,
  GetMeetingResponseFilterSensitiveLog,
  ListAttendeesResponseFilterSensitiveLog,
  UpdateAttendeeCapabilitiesResponseFilterSensitiveLog
});

